{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ve",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_yfi",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_gaugefactory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_veYfiRewardPool",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "ve",
          "type": "address"
        }
      ],
      "name": "UpdatedVeToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "vault",
          "type": "address"
        }
      ],
      "name": "VaultAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "vault",
          "type": "address"
        }
      ],
      "name": "VaultRemoved",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rewardManager",
          "type": "address"
        }
      ],
      "name": "addVaultToRewards",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gaugefactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "gauges",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVaults",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isGauge",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        }
      ],
      "name": "removeVaultFromRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ve",
          "type": "address"
        }
      ],
      "name": "setVe",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "vaultForGauge",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "veToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "veYfiRewardPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "yfi",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/demo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "14": "contracts/Registry.sol",
    "20": "contracts/interfaces/IGaugeFactory.sol",
    "7": "/Users/demo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "9": "/Users/demo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/structs/EnumerableSet.sol"
  },
  "ast": {
    "absolutePath": "contracts/Registry.sol",
    "exportedSymbols": {
      "Context": [
        5178
      ],
      "EnumerableSet": [
        4568
      ],
      "IERC20": [
        3657
      ],
      "IGaugeFactory": [
        3278
      ],
      "IVotingEscrow": [
        3331
      ],
      "Ownable": [
        3505
      ],
      "Registry": [
        2467
      ]
    },
    "id": 2468,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2232,
        "literals": [
          "solidity",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:14"
      },
      {
        "absolutePath": "contracts/interfaces/IVotingEscrow.sol",
        "file": "./interfaces/IVotingEscrow.sol",
        "id": 2233,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2468,
        "sourceUnit": 3332,
        "src": "57:40:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IGaugeFactory.sol",
        "file": "./interfaces/IGaugeFactory.sol",
        "id": 2234,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2468,
        "sourceUnit": 3279,
        "src": "98:40:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/demo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2235,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2468,
        "sourceUnit": 3506,
        "src": "139:52:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/demo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/structs/EnumerableSet.sol",
        "file": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
        "id": 2236,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2468,
        "sourceUnit": 4569,
        "src": "192:65:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2238,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3505,
              "src": "376:7:14"
            },
            "id": 2239,
            "nodeType": "InheritanceSpecifier",
            "src": "376:7:14"
          }
        ],
        "canonicalName": "Registry",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2237,
          "nodeType": "StructuredDocumentation",
          "src": "259:94:14",
          "text": "@title Voter\n@notice veYFI holders will vote for gauge allocation to vault tokens."
        },
        "fullyImplemented": true,
        "id": 2467,
        "linearizedBaseContracts": [
          2467,
          3505,
          5178
        ],
        "name": "Registry",
        "nameLocation": "364:8:14",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2243,
            "libraryName": {
              "id": 2240,
              "name": "EnumerableSet",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4568,
              "src": "396:13:14"
            },
            "nodeType": "UsingForDirective",
            "src": "390:49:14",
            "typeName": {
              "id": 2242,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2241,
                "name": "EnumerableSet.AddressSet",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4281,
                "src": "414:24:14"
              },
              "referencedDeclaration": 4281,
              "src": "414:24:14",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$4281_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "3b92eb23",
            "id": 2245,
            "mutability": "mutable",
            "name": "veToken",
            "nameLocation": "459:7:14",
            "nodeType": "VariableDeclaration",
            "scope": 2467,
            "src": "444:22:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2244,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "444:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e310fa5d",
            "id": 2247,
            "mutability": "mutable",
            "name": "yfi",
            "nameLocation": "532:3:14",
            "nodeType": "VariableDeclaration",
            "scope": 2467,
            "src": "517:18:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2246,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "517:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9e15977f",
            "id": 2249,
            "mutability": "mutable",
            "name": "veYfiRewardPool",
            "nameLocation": "585:15:14",
            "nodeType": "VariableDeclaration",
            "scope": 2467,
            "src": "570:30:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2248,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "570:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "68c3acb3",
            "id": 2251,
            "mutability": "mutable",
            "name": "gaugefactory",
            "nameLocation": "634:12:14",
            "nodeType": "VariableDeclaration",
            "scope": 2467,
            "src": "619:27:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2250,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "619:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2254,
            "mutability": "mutable",
            "name": "vaults",
            "nameLocation": "699:6:14",
            "nodeType": "VariableDeclaration",
            "scope": 2467,
            "src": "666:39:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_AddressSet_$4281_storage",
              "typeString": "struct EnumerableSet.AddressSet"
            },
            "typeName": {
              "id": 2253,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2252,
                "name": "EnumerableSet.AddressSet",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4281,
                "src": "666:24:14"
              },
              "referencedDeclaration": 4281,
              "src": "666:24:14",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$4281_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "b9a09fd5",
            "id": 2258,
            "mutability": "mutable",
            "name": "gauges",
            "nameLocation": "746:6:14",
            "nodeType": "VariableDeclaration",
            "scope": 2467,
            "src": "711:41:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 2257,
              "keyType": {
                "id": 2255,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "719:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "711:27:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 2256,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "730:7:14",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fc826cf6",
            "id": 2262,
            "mutability": "mutable",
            "name": "vaultForGauge",
            "nameLocation": "811:13:14",
            "nodeType": "VariableDeclaration",
            "scope": 2467,
            "src": "776:48:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 2261,
              "keyType": {
                "id": 2259,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "784:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "776:27:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 2260,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "795:7:14",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "aa79979b",
            "id": 2266,
            "mutability": "mutable",
            "name": "isGauge",
            "nameLocation": "880:7:14",
            "nodeType": "VariableDeclaration",
            "scope": 2467,
            "src": "848:39:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 2265,
              "keyType": {
                "id": 2263,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "856:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "848:24:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 2264,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "867:4:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 2270,
            "name": "VaultAdded",
            "nameLocation": "900:10:14",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2268,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "919:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2270,
                  "src": "911:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2267,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "911:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "910:15:14"
            },
            "src": "894:32:14"
          },
          {
            "anonymous": false,
            "id": 2274,
            "name": "VaultRemoved",
            "nameLocation": "937:12:14",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2272,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "958:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2274,
                  "src": "950:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2271,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "950:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "949:15:14"
            },
            "src": "931:34:14"
          },
          {
            "anonymous": false,
            "id": 2278,
            "name": "UpdatedVeToken",
            "nameLocation": "976:14:14",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2277,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2276,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ve",
                  "nameLocation": "999:2:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2278,
                  "src": "991:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2275,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "991:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "990:12:14"
            },
            "src": "970:33:14"
          },
          {
            "body": {
              "id": 2305,
              "nodeType": "Block",
              "src": "1135:132:14",
              "statements": [
                {
                  "expression": {
                    "id": 2291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2289,
                      "name": "veToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2245,
                      "src": "1145:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2290,
                      "name": "_ve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2280,
                      "src": "1155:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1145:13:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2292,
                  "nodeType": "ExpressionStatement",
                  "src": "1145:13:14"
                },
                {
                  "expression": {
                    "id": 2295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2293,
                      "name": "yfi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2247,
                      "src": "1168:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2294,
                      "name": "_yfi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2282,
                      "src": "1174:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1168:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2296,
                  "nodeType": "ExpressionStatement",
                  "src": "1168:10:14"
                },
                {
                  "expression": {
                    "id": 2299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2297,
                      "name": "gaugefactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2251,
                      "src": "1188:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2298,
                      "name": "_gaugefactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2284,
                      "src": "1203:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1188:28:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2300,
                  "nodeType": "ExpressionStatement",
                  "src": "1188:28:14"
                },
                {
                  "expression": {
                    "id": 2303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2301,
                      "name": "veYfiRewardPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2249,
                      "src": "1226:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2302,
                      "name": "_veYfiRewardPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2286,
                      "src": "1244:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1226:34:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2304,
                  "nodeType": "ExpressionStatement",
                  "src": "1226:34:14"
                }
              ]
            },
            "id": 2306,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2280,
                  "mutability": "mutable",
                  "name": "_ve",
                  "nameLocation": "1038:3:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2306,
                  "src": "1030:11:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2279,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1030:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2282,
                  "mutability": "mutable",
                  "name": "_yfi",
                  "nameLocation": "1059:4:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2306,
                  "src": "1051:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2281,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1051:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2284,
                  "mutability": "mutable",
                  "name": "_gaugefactory",
                  "nameLocation": "1081:13:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2306,
                  "src": "1073:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2283,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1073:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2286,
                  "mutability": "mutable",
                  "name": "_veYfiRewardPool",
                  "nameLocation": "1112:16:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2306,
                  "src": "1104:24:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2285,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1104:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1020:114:14"
            },
            "returnParameters": {
              "id": 2288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1135:0:14"
            },
            "scope": 2467,
            "src": "1009:258:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2321,
              "nodeType": "Block",
              "src": "1320:64:14",
              "statements": [
                {
                  "expression": {
                    "id": 2315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2313,
                      "name": "veToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2245,
                      "src": "1330:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2314,
                      "name": "_ve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2308,
                      "src": "1340:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1330:13:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2316,
                  "nodeType": "ExpressionStatement",
                  "src": "1330:13:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2318,
                        "name": "_ve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2308,
                        "src": "1373:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2317,
                      "name": "UpdatedVeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2278,
                      "src": "1358:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1358:19:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2320,
                  "nodeType": "EmitStatement",
                  "src": "1353:24:14"
                }
              ]
            },
            "functionSelector": "7a238855",
            "id": 2322,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2311,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2310,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3447,
                  "src": "1310:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "1310:9:14"
              }
            ],
            "name": "setVe",
            "nameLocation": "1282:5:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2308,
                  "mutability": "mutable",
                  "name": "_ve",
                  "nameLocation": "1296:3:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2322,
                  "src": "1288:11:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2307,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1288:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1287:13:14"
            },
            "returnParameters": {
              "id": 2312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1320:0:14"
            },
            "scope": 2467,
            "src": "1273:111:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2333,
              "nodeType": "Block",
              "src": "1541:39:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2329,
                        "name": "vaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2254,
                        "src": "1558:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$4281_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 2330,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "values",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4434,
                      "src": "1558:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$4281_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$bound_to$_t_struct$_AddressSet_$4281_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"
                      }
                    },
                    "id": 2331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1558:15:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "functionReturnParameters": 2328,
                  "id": 2332,
                  "nodeType": "Return",
                  "src": "1551:22:14"
                }
              ]
            },
            "documentation": {
              "id": 2323,
              "nodeType": "StructuredDocumentation",
              "src": "1390:84:14",
              "text": "@return The list of vaults with gauge that are possible to vote for."
            },
            "functionSelector": "44d00f82",
            "id": 2334,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVaults",
            "nameLocation": "1488:9:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2324,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1497:2:14"
            },
            "returnParameters": {
              "id": 2328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2327,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2334,
                  "src": "1523:16:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2325,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1523:7:14",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2326,
                    "nodeType": "ArrayTypeName",
                    "src": "1523:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1522:18:14"
            },
            "scope": 2467,
            "src": "1479:101:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2404,
              "nodeType": "Block",
              "src": "1953:466:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2349,
                            "name": "gauges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2258,
                            "src": "1971:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 2351,
                          "indexExpression": {
                            "id": 2350,
                            "name": "_vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2337,
                            "src": "1978:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1971:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 2354,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1997:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2353,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1989:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2352,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1989:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1989:12:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1971:30:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6578697374",
                        "id": 2357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2003:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0b4e07bb5592f3d3821b2c1331b436763d7be555cf452d6c6836f74d5201e85",
                          "typeString": "literal_string \"exist\""
                        },
                        "value": "exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0b4e07bb5592f3d3821b2c1331b436763d7be555cf452d6c6836f74d5201e85",
                          "typeString": "literal_string \"exist\""
                        }
                      ],
                      "id": 2348,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1963:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1963:48:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2359,
                  "nodeType": "ExpressionStatement",
                  "src": "1963:48:14"
                },
                {
                  "assignments": [
                    2361
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2361,
                      "mutability": "mutable",
                      "name": "_gauge",
                      "nameLocation": "2030:6:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 2404,
                      "src": "2022:14:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2360,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2022:7:14",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2373,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2366,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2337,
                        "src": "2092:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2367,
                        "name": "yfi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2247,
                        "src": "2112:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2368,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2339,
                        "src": "2129:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2369,
                        "name": "_rewardManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2341,
                        "src": "2149:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2370,
                        "name": "veToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2245,
                        "src": "2177:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2371,
                        "name": "veYfiRewardPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2249,
                        "src": "2198:15:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2363,
                            "name": "gaugefactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2251,
                            "src": "2053:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2362,
                          "name": "IGaugeFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3278,
                          "src": "2039:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IGaugeFactory_$3278_$",
                            "typeString": "type(contract IGaugeFactory)"
                          }
                        },
                        "id": 2364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2039:27:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IGaugeFactory_$3278",
                          "typeString": "contract IGaugeFactory"
                        }
                      },
                      "id": 2365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createGauge",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3277,
                      "src": "2039:39:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$returns$_t_address_$",
                        "typeString": "function (address,address,address,address,address,address) external returns (address)"
                      }
                    },
                    "id": 2372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2039:184:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2022:201:14"
                },
                {
                  "expression": {
                    "id": 2378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2374,
                        "name": "gauges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2258,
                        "src": "2233:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 2376,
                      "indexExpression": {
                        "id": 2375,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2337,
                        "src": "2240:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2233:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2377,
                      "name": "_gauge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2361,
                      "src": "2250:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2233:23:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2379,
                  "nodeType": "ExpressionStatement",
                  "src": "2233:23:14"
                },
                {
                  "expression": {
                    "id": 2384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2380,
                        "name": "vaultForGauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2262,
                        "src": "2266:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 2382,
                      "indexExpression": {
                        "id": 2381,
                        "name": "_gauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2361,
                        "src": "2280:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2266:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2383,
                      "name": "_vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2337,
                      "src": "2290:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2266:30:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2385,
                  "nodeType": "ExpressionStatement",
                  "src": "2266:30:14"
                },
                {
                  "expression": {
                    "id": 2390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2386,
                        "name": "isGauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2266,
                        "src": "2306:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2388,
                      "indexExpression": {
                        "id": 2387,
                        "name": "_gauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2361,
                        "src": "2314:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2306:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2324:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2306:22:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2391,
                  "nodeType": "ExpressionStatement",
                  "src": "2306:22:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2395,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2337,
                        "src": "2349:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2392,
                        "name": "vaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2254,
                        "src": "2338:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$4281_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 2394,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4308,
                      "src": "2338:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$4281_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$4281_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                      }
                    },
                    "id": 2396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2338:18:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2397,
                  "nodeType": "ExpressionStatement",
                  "src": "2338:18:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2399,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2337,
                        "src": "2382:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2398,
                      "name": "VaultAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2270,
                      "src": "2371:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2371:18:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2401,
                  "nodeType": "EmitStatement",
                  "src": "2366:23:14"
                },
                {
                  "expression": {
                    "id": 2402,
                    "name": "_gauge",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2361,
                    "src": "2406:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2347,
                  "id": 2403,
                  "nodeType": "Return",
                  "src": "2399:13:14"
                }
              ]
            },
            "documentation": {
              "id": 2335,
              "nodeType": "StructuredDocumentation",
              "src": "1586:212:14",
              "text": "@notice Add a vault to the list of vaults that recieves rewards.\n@param _vault vault address\n@param _owner owner.\n@param _rewardManager address in charge of managing additional rewards"
            },
            "functionSelector": "479efd4e",
            "id": 2405,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2344,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2343,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3447,
                  "src": "1925:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "1925:9:14"
              }
            ],
            "name": "addVaultToRewards",
            "nameLocation": "1812:17:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2337,
                  "mutability": "mutable",
                  "name": "_vault",
                  "nameLocation": "1847:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2405,
                  "src": "1839:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2336,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1839:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2339,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1871:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2405,
                  "src": "1863:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2338,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1863:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2341,
                  "mutability": "mutable",
                  "name": "_rewardManager",
                  "nameLocation": "1895:14:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2405,
                  "src": "1887:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2340,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1887:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1829:86:14"
            },
            "returnParameters": {
              "id": 2347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2346,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2405,
                  "src": "1944:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2345,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1944:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1943:9:14"
            },
            "scope": 2467,
            "src": "1803:616:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2465,
              "nodeType": "Block",
              "src": "2610:290:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2414,
                            "name": "gauges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2258,
                            "src": "2628:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 2416,
                          "indexExpression": {
                            "id": 2415,
                            "name": "_vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2408,
                            "src": "2635:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2628:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 2419,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2654:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2646:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2417,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2646:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2646:12:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2628:30:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "216578697374",
                        "id": 2422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2660:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_141db340a5766d2c35f2bd7e6d00399af66800794e0975c892a58724345fc018",
                          "typeString": "literal_string \"!exist\""
                        },
                        "value": "!exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_141db340a5766d2c35f2bd7e6d00399af66800794e0975c892a58724345fc018",
                          "typeString": "literal_string \"!exist\""
                        }
                      ],
                      "id": 2413,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2620:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2620:49:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2424,
                  "nodeType": "ExpressionStatement",
                  "src": "2620:49:14"
                },
                {
                  "assignments": [
                    2426
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2426,
                      "mutability": "mutable",
                      "name": "gauge",
                      "nameLocation": "2687:5:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 2465,
                      "src": "2679:13:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2425,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2679:7:14",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2430,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2427,
                      "name": "gauges",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2258,
                      "src": "2695:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 2429,
                    "indexExpression": {
                      "id": 2428,
                      "name": "_vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2408,
                      "src": "2702:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2695:14:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2679:30:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2434,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2408,
                        "src": "2734:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2431,
                        "name": "vaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2254,
                        "src": "2720:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$4281_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 2433,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4335,
                      "src": "2720:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$4281_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$4281_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                      }
                    },
                    "id": 2435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2720:21:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2436,
                  "nodeType": "ExpressionStatement",
                  "src": "2720:21:14"
                },
                {
                  "expression": {
                    "id": 2444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2437,
                        "name": "gauges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2258,
                        "src": "2752:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 2439,
                      "indexExpression": {
                        "id": 2438,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2408,
                        "src": "2759:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2752:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307830",
                          "id": 2442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2777:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2769:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2440,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2769:7:14",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2443,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2769:12:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2752:29:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2445,
                  "nodeType": "ExpressionStatement",
                  "src": "2752:29:14"
                },
                {
                  "expression": {
                    "id": 2453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2446,
                        "name": "vaultForGauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2262,
                        "src": "2791:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 2448,
                      "indexExpression": {
                        "id": 2447,
                        "name": "gauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2426,
                        "src": "2805:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2791:20:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307830",
                          "id": 2451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2822:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2814:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2449,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2814:7:14",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2814:12:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2791:35:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2454,
                  "nodeType": "ExpressionStatement",
                  "src": "2791:35:14"
                },
                {
                  "expression": {
                    "id": 2459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2455,
                        "name": "isGauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2266,
                        "src": "2836:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2457,
                      "indexExpression": {
                        "id": 2456,
                        "name": "gauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2426,
                        "src": "2844:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2836:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 2458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2853:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2836:22:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2460,
                  "nodeType": "ExpressionStatement",
                  "src": "2836:22:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2462,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2408,
                        "src": "2886:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2461,
                      "name": "VaultRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2274,
                      "src": "2873:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2873:20:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2464,
                  "nodeType": "EmitStatement",
                  "src": "2868:25:14"
                }
              ]
            },
            "documentation": {
              "id": 2406,
              "nodeType": "StructuredDocumentation",
              "src": "2425:113:14",
              "text": "@notice Remove a vault from the list of vaults recieving rewards.\n@param _vault vault address"
            },
            "functionSelector": "da981b60",
            "id": 2466,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2411,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2410,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3447,
                  "src": "2600:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "2600:9:14"
              }
            ],
            "name": "removeVaultFromRewards",
            "nameLocation": "2552:22:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2408,
                  "mutability": "mutable",
                  "name": "_vault",
                  "nameLocation": "2583:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2466,
                  "src": "2575:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2407,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2575:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2574:16:14"
            },
            "returnParameters": {
              "id": 2412,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2610:0:14"
            },
            "scope": 2467,
            "src": "2543:357:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2468,
        "src": "355:2547:14",
        "usedErrors": []
      }
    ],
    "src": "33:2870:14"
  },
  "bytecode": "608060405234801561001057600080fd5b50604051610be5380380610be583398101604081905261002f916100f7565b6100383361008b565b600180546001600160a01b039586166001600160a01b031991821617909155600280549486169482169490941790935560048054928516928416929092179091556003805491909316911617905561014b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100f257600080fd5b919050565b6000806000806080858703121561010d57600080fd5b610116856100db565b9350610124602086016100db565b9250610132604086016100db565b9150610140606086016100db565b905092959194509250565b610a8b8061015a6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80639e15977f1161008c578063da981b6011610066578063da981b60146101f7578063e310fa5d1461020a578063f2fde38b1461021d578063fc826cf61461023057600080fd5b80639e15977f14610188578063aa79979b1461019b578063b9a09fd5146101ce57600080fd5b806368c3acb3116100c857806368c3acb314610147578063715018a61461015a5780637a238855146101645780638da5cb5b1461017757600080fd5b80633b92eb23146100ef57806344d00f821461011f578063479efd4e14610134575b600080fd5b600154610102906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b610127610259565b60405161011691906108e8565b61010261014236600461094a565b61026a565b600454610102906001600160a01b031681565b61016261043e565b005b610162610172366004610995565b610474565b6000546001600160a01b0316610102565b600354610102906001600160a01b031681565b6101be6101a9366004610995565b60096020526000908152604090205460ff1681565b6040519015158152602001610116565b6101026101dc366004610995565b6007602052600090815260409020546001600160a01b031681565b610162610205366004610995565b6104f2565b600254610102906001600160a01b031681565b61016261022b366004610995565b610618565b61010261023e366004610995565b6008602052600090815260409020546001600160a01b031681565b606061026560056106b3565b905090565b600080546001600160a01b0316331461029e5760405162461bcd60e51b8152600401610295906109b2565b60405180910390fd5b6001600160a01b0384811660009081526007602052604090205416156102ee5760405162461bcd60e51b8152602060048201526005602482015264195e1a5cdd60da1b6044820152606401610295565b60048054600254600154600354604051633eed788160e21b81526001600160a01b038a8116968201969096529285166024840152878516604484015286851660648401529084166084830152831660a48201526000929091169063fbb5e2049060c4016020604051808303816000875af1158015610370573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039491906109e7565b6001600160a01b03808716600081815260076020908152604080832080549587166001600160a01b03199687168117909155835260088252808320805490951690931790935560099092529020805460ff1916600117905590506103f96005866106c7565b506040516001600160a01b03861681527f7b7ef7a864d96a85497a1ed846adb39940dd6ccef678ff6ac8d55505e09b8cc49060200160405180910390a1949350505050565b6000546001600160a01b031633146104685760405162461bcd60e51b8152600401610295906109b2565b61047260006106e5565b565b6000546001600160a01b0316331461049e5760405162461bcd60e51b8152600401610295906109b2565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f0f382d8404a45286f6180665c3eb5574df3e6efdd99ad2e652d8f5d904f264f09060200160405180910390a150565b6000546001600160a01b0316331461051c5760405162461bcd60e51b8152600401610295906109b2565b6001600160a01b038181166000908152600760205260409020541661056c5760405162461bcd60e51b815260206004820152600660248201526508595e1a5cdd60d21b6044820152606401610295565b6001600160a01b0380821660009081526007602052604090205416610592600583610735565b506001600160a01b03828116600081815260076020908152604080832080546001600160a01b031990811690915594861683526008825280832080549095169094556009815290839020805460ff1916905591519081527fe71f3a50e5ad81964f352c411f1d45e35438ecd1acecef59ac81d9fbbf6cbc0a910160405180910390a15050565b6000546001600160a01b031633146106425760405162461bcd60e51b8152600401610295906109b2565b6001600160a01b0381166106a75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610295565b6106b0816106e5565b50565b606060006106c08361074a565b9392505050565b60006106dc836001600160a01b0384166107a6565b90505b92915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006106dc836001600160a01b0384166107f5565b60608160000180548060200260200160405190810160405280929190818152602001828054801561079a57602002820191906000526020600020905b815481526020019060010190808311610786575b50505050509050919050565b60008181526001830160205260408120546107ed575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556106df565b5060006106df565b600081815260018301602052604081205480156108de576000610819600183610a04565b855490915060009061082d90600190610a04565b905081811461089257600086600001828154811061084d5761084d610a29565b906000526020600020015490508087600001848154811061087057610870610a29565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806108a3576108a3610a3f565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506106df565b60009150506106df565b6020808252825182820181905260009190848201906040850190845b818110156109295783516001600160a01b031683529284019291840191600101610904565b50909695505050505050565b6001600160a01b03811681146106b057600080fd5b60008060006060848603121561095f57600080fd5b833561096a81610935565b9250602084013561097a81610935565b9150604084013561098a81610935565b809150509250925092565b6000602082840312156109a757600080fd5b81356106c081610935565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156109f957600080fd5b81516106c081610935565b600082821015610a2457634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea2646970667358221220ae4869e996da2711740474da01b93cf838cd6e27631ba23a5ae5d2b683c4a20c64736f6c634300080c0033",
  "bytecodeSha1": "8a6f5483f4f4b5002c567ca99a90e3b3d31580fd",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "Registry",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "40": [
            2006,
            2028,
            true
          ]
        }
      },
      "14": {
        "Registry.addVaultToRewards": {
          "37": [
            1971,
            2001,
            true
          ]
        }
      },
      "20": {},
      "7": {},
      "9": {
        "EnumerableSet._remove": {
          "38": [
            2506,
            2521,
            false
          ],
          "39": [
            2988,
            3014,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "22": [
            2378,
            2395
          ],
          "23": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "0": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "10": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "19": [
            1998,
            2071
          ],
          "20": [
            2081,
            2109
          ]
        }
      },
      "14": {
        "Registry.addVaultToRewards": {
          "3": [
            1963,
            2011
          ],
          "4": [
            2233,
            2256
          ],
          "5": [
            2266,
            2296
          ],
          "6": [
            2306,
            2328
          ],
          "7": [
            2338,
            2356
          ],
          "8": [
            2366,
            2389
          ],
          "9": [
            2399,
            2412
          ]
        },
        "Registry.getVaults": {
          "1": [
            1551,
            1573
          ]
        },
        "Registry.removeVaultFromRewards": {
          "13": [
            2620,
            2669
          ],
          "14": [
            2720,
            2741
          ],
          "15": [
            2752,
            2781
          ],
          "16": [
            2791,
            2826
          ],
          "17": [
            2836,
            2858
          ],
          "18": [
            2868,
            2893
          ]
        },
        "Registry.setVe": {
          "11": [
            1330,
            1343
          ],
          "12": [
            1353,
            1377
          ]
        }
      },
      "20": {},
      "7": {
        "Context._msgSender": {
          "2": [
            712,
            729
          ]
        }
      },
      "9": {
        "EnumerableSet._add": {
          "27": [
            1818,
            1841
          ],
          "28": [
            1976,
            2016
          ],
          "29": [
            2030,
            2041
          ],
          "30": [
            2072,
            2084
          ]
        },
        "EnumerableSet._contains": {
          "26": [
            3827,
            3858
          ]
        },
        "EnumerableSet._remove": {
          "31": [
            3176,
            3214
          ],
          "32": [
            3288,
            3324
          ],
          "33": [
            3460,
            3477
          ],
          "34": [
            3545,
            3571
          ],
          "35": [
            3586,
            3597
          ],
          "36": [
            3628,
            3640
          ]
        },
        "EnumerableSet._values": {
          "25": [
            5137,
            5155
          ]
        },
        "EnumerableSet.add": {
          "21": [
            7698,
            7755
          ]
        },
        "EnumerableSet.remove": {
          "24": [
            8019,
            8079
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/EnumerableSet",
    "IGaugeFactory",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c80639e15977f1161008c578063da981b6011610066578063da981b60146101f7578063e310fa5d1461020a578063f2fde38b1461021d578063fc826cf61461023057600080fd5b80639e15977f14610188578063aa79979b1461019b578063b9a09fd5146101ce57600080fd5b806368c3acb3116100c857806368c3acb314610147578063715018a61461015a5780637a238855146101645780638da5cb5b1461017757600080fd5b80633b92eb23146100ef57806344d00f821461011f578063479efd4e14610134575b600080fd5b600154610102906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b610127610259565b60405161011691906108e8565b61010261014236600461094a565b61026a565b600454610102906001600160a01b031681565b61016261043e565b005b610162610172366004610995565b610474565b6000546001600160a01b0316610102565b600354610102906001600160a01b031681565b6101be6101a9366004610995565b60096020526000908152604090205460ff1681565b6040519015158152602001610116565b6101026101dc366004610995565b6007602052600090815260409020546001600160a01b031681565b610162610205366004610995565b6104f2565b600254610102906001600160a01b031681565b61016261022b366004610995565b610618565b61010261023e366004610995565b6008602052600090815260409020546001600160a01b031681565b606061026560056106b3565b905090565b600080546001600160a01b0316331461029e5760405162461bcd60e51b8152600401610295906109b2565b60405180910390fd5b6001600160a01b0384811660009081526007602052604090205416156102ee5760405162461bcd60e51b8152602060048201526005602482015264195e1a5cdd60da1b6044820152606401610295565b60048054600254600154600354604051633eed788160e21b81526001600160a01b038a8116968201969096529285166024840152878516604484015286851660648401529084166084830152831660a48201526000929091169063fbb5e2049060c4016020604051808303816000875af1158015610370573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039491906109e7565b6001600160a01b03808716600081815260076020908152604080832080549587166001600160a01b03199687168117909155835260088252808320805490951690931790935560099092529020805460ff1916600117905590506103f96005866106c7565b506040516001600160a01b03861681527f7b7ef7a864d96a85497a1ed846adb39940dd6ccef678ff6ac8d55505e09b8cc49060200160405180910390a1949350505050565b6000546001600160a01b031633146104685760405162461bcd60e51b8152600401610295906109b2565b61047260006106e5565b565b6000546001600160a01b0316331461049e5760405162461bcd60e51b8152600401610295906109b2565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f0f382d8404a45286f6180665c3eb5574df3e6efdd99ad2e652d8f5d904f264f09060200160405180910390a150565b6000546001600160a01b0316331461051c5760405162461bcd60e51b8152600401610295906109b2565b6001600160a01b038181166000908152600760205260409020541661056c5760405162461bcd60e51b815260206004820152600660248201526508595e1a5cdd60d21b6044820152606401610295565b6001600160a01b0380821660009081526007602052604090205416610592600583610735565b506001600160a01b03828116600081815260076020908152604080832080546001600160a01b031990811690915594861683526008825280832080549095169094556009815290839020805460ff1916905591519081527fe71f3a50e5ad81964f352c411f1d45e35438ecd1acecef59ac81d9fbbf6cbc0a910160405180910390a15050565b6000546001600160a01b031633146106425760405162461bcd60e51b8152600401610295906109b2565b6001600160a01b0381166106a75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610295565b6106b0816106e5565b50565b606060006106c08361074a565b9392505050565b60006106dc836001600160a01b0384166107a6565b90505b92915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006106dc836001600160a01b0384166107f5565b60608160000180548060200260200160405190810160405280929190818152602001828054801561079a57602002820191906000526020600020905b815481526020019060010190808311610786575b50505050509050919050565b60008181526001830160205260408120546107ed575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556106df565b5060006106df565b600081815260018301602052604081205480156108de576000610819600183610a04565b855490915060009061082d90600190610a04565b905081811461089257600086600001828154811061084d5761084d610a29565b906000526020600020015490508087600001848154811061087057610870610a29565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806108a3576108a3610a3f565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506106df565b60009150506106df565b6020808252825182820181905260009190848201906040850190845b818110156109295783516001600160a01b031683529284019291840191600101610904565b50909695505050505050565b6001600160a01b03811681146106b057600080fd5b60008060006060848603121561095f57600080fd5b833561096a81610935565b9250602084013561097a81610935565b9150604084013561098a81610935565b809150509250925092565b6000602082840312156109a757600080fd5b81356106c081610935565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156109f957600080fd5b81516106c081610935565b600082821015610a2457634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea2646970667358221220ae4869e996da2711740474da01b93cf838cd6e27631ba23a5ae5d2b683c4a20c64736f6c634300080c0033",
  "deployedSourceMap": "355:2547:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;444:22;;;;;-1:-1:-1;;;;;444:22:14;;;;;;-1:-1:-1;;;;;178:32:25;;;160:51;;148:2;133:18;444:22:14;;;;;;;;1479:101;;;:::i;:::-;;;;;;;:::i;1803:616::-;;;;;;:::i;:::-;;:::i;619:27::-;;;;;-1:-1:-1;;;;;619:27:14;;;1668:101:0;;;:::i;:::-;;1273:111:14;;;;;;:::i;:::-;;:::i;1036:85:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;570:30:14;;;;;-1:-1:-1;;;;;570:30:14;;;848:39;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1972:14:25;;1965:22;1947:41;;1935:2;1920:18;848:39:14;1807:187:25;711:41:14;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;711:41:14;;;2543:357;;;;;;:::i;:::-;;:::i;517:18::-;;;;;-1:-1:-1;;;;;517:18:14;;;1918:198:0;;;;;;:::i;:::-;;:::i;776:48:14:-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;776:48:14;;;1479:101;1523:16;1558:15;:6;:13;:15::i;:::-;1551:22;;1479:101;:::o;1803:616::-;1944:7;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:7;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;1971:14:14;;::::1;1997:3;1971:14:::0;;;:6:::1;:14;::::0;;;;;::::1;:30:::0;1963:48:::1;;;::::0;-1:-1:-1;;;1963:48:14;;2562:2:25;1963:48:14::1;::::0;::::1;2544:21:25::0;2601:1;2581:18;;;2574:29;-1:-1:-1;;;2619:18:25;;;2612:35;2664:18;;1963:48:14::1;2360:328:25::0;1963:48:14::1;2053:12;::::0;;2112:3:::1;::::0;2053:12;2177:7;2198:15:::1;::::0;2039:184:::1;::::0;-1:-1:-1;;;2039:184:14;;-1:-1:-1;;;;;3036:15:25;;;2039:184:14;;::::1;3018:34:25::0;;;;2112:3:14;;::::1;3068:18:25::0;;;3061:43;3140:15;;;3120:18;;;3113:43;3192:15;;;3172:18;;;3165:43;2177:7:14;;::::1;3224:19:25::0;;;3217:44;2198:15:14;::::1;3277:19:25::0;;;3270:44;2022:14:14::1;::::0;2053:12;;::::1;::::0;2039:39:::1;::::0;2952:19:25;;2039:184:14::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2233:14:14;;::::1;;::::0;;;:6:::1;:14;::::0;;;;;;;:23;;;;::::1;-1:-1:-1::0;;;;;;2233:23:14;;::::1;::::0;::::1;::::0;;;2266:21;;:13:::1;:21:::0;;;;;:30;;;;::::1;::::0;;::::1;::::0;;;2306:7:::1;:15:::0;;;;;:22;;-1:-1:-1;;2306:22:14::1;2233:23:::0;2306:22:::1;::::0;;2022:201;-1:-1:-1;2338:18:14::1;:6;2240::::0;2338:10:::1;:18::i;:::-;-1:-1:-1::0;2371:18:14::1;::::0;-1:-1:-1;;;;;178:32:25;;160:51;;2371:18:14::1;::::0;148:2:25;133:18;2371::14::1;;;;;;;2406:6:::0;1803:616;-1:-1:-1;;;;1803:616:14:o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:7;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1273:111:14:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:7;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1330:7:14::1;:13:::0;;-1:-1:-1;;;;;;1330:13:14::1;-1:-1:-1::0;;;;;1330:13:14;::::1;::::0;;::::1;::::0;;;1358:19:::1;::::0;160:51:25;;;1358:19:14::1;::::0;148:2:25;133:18;1358:19:14::1;;;;;;;1273:111:::0;:::o;2543:357::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:7;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2628:14:14;;::::1;2654:3;2628:14:::0;;;:6:::1;:14;::::0;;;;;::::1;2620:49;;;::::0;-1:-1:-1;;;2620:49:14;;3783:2:25;2620:49:14::1;::::0;::::1;3765:21:25::0;3822:1;3802:18;;;3795:29;-1:-1:-1;;;3840:18:25;;;3833:36;3886:18;;2620:49:14::1;3581:329:25::0;2620:49:14::1;-1:-1:-1::0;;;;;2695:14:14;;::::1;2679:13;2695:14:::0;;;:6:::1;:14;::::0;;;;;::::1;2720:21;:6;2702::::0;2720:13:::1;:21::i;:::-;-1:-1:-1::0;;;;;;2752:14:14;;::::1;2777:3;2752:14:::0;;;:6:::1;:14;::::0;;;;;;;:29;;-1:-1:-1;;;;;;2752:29:14;;::::1;::::0;;;2791:20;;::::1;::::0;;:13:::1;:20:::0;;;;;:35;;;;::::1;::::0;;;2836:7:::1;:14:::0;;;;;;:22;;-1:-1:-1;;2836:22:14::1;::::0;;2873:20;;160:51:25;;;2873:20:14::1;::::0;133:18:25;2873:20:14::1;;;;;;;2610:290;2543:357:::0;:::o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:7;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;4117:2:25;1998:73:0::1;::::0;::::1;4099:21:25::0;4156:2;4136:18;;;4129:30;4195:34;4175:18;;;4168:62;-1:-1:-1;;;4246:18:25;;;4239:36;4292:19;;1998:73:0::1;3915:402:25::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;9566:257:9:-;9629:16;9657:22;9682:19;9690:3;9682:7;:19::i;:::-;9657:44;9566:257;-1:-1:-1;;;9566:257:9:o;7612:150::-;7682:4;7705:50;7710:3;-1:-1:-1;;;;;7730:23:9;;7705:4;:50::i;:::-;7698:57;;7612:150;;;;;:::o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;7930:156:9:-;8003:4;8026:53;8034:3;-1:-1:-1;;;;;8054:23:9;;8026:7;:53::i;5053:109::-;5109:16;5144:3;:11;;5137:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5053:109;;;:::o;1697:404::-;1760:4;3834:19;;;:12;;;:19;;;;;;1776:319;;-1:-1:-1;1818:23:9;;;;;;;;:11;:23;;;;;;;;;;;;;1998:18;;1976:19;;;:12;;;:19;;;;;;:40;;;;2030:11;;1776:319;-1:-1:-1;2079:5:9;2072:12;;2269:1388;2335:4;2472:19;;;:12;;;:19;;;;;;2506:15;;2502:1149;;2875:21;2899:14;2912:1;2899:10;:14;:::i;:::-;2947:18;;2875:38;;-1:-1:-1;2927:17:9;;2947:22;;2968:1;;2947:22;:::i;:::-;2927:42;;3001:13;2988:9;:26;2984:398;;3034:17;3054:3;:11;;3066:9;3054:22;;;;;;;;:::i;:::-;;;;;;;;;3034:42;;3205:9;3176:3;:11;;3188:13;3176:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3288:23;;;:12;;;:23;;;;;:36;;;2984:398;3460:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3552:3;:12;;:19;3565:5;3552:19;;;;;;;;;;;3545:26;;;3593:4;3586:11;;;;;;;2502:1149;3635:5;3628:12;;;;;222:658:25;393:2;445:21;;;515:13;;418:18;;;537:22;;;364:4;;393:2;616:15;;;;590:2;575:18;;;364:4;659:195;673:6;670:1;667:13;659:195;;;738:13;;-1:-1:-1;;;;;734:39:25;722:52;;829:15;;;;794:12;;;;770:1;688:9;659:195;;;-1:-1:-1;871:3:25;;222:658;-1:-1:-1;;;;;;222:658:25:o;885:131::-;-1:-1:-1;;;;;960:31:25;;950:42;;940:70;;1006:1;1003;996:12;1021:529;1098:6;1106;1114;1167:2;1155:9;1146:7;1142:23;1138:32;1135:52;;;1183:1;1180;1173:12;1135:52;1222:9;1209:23;1241:31;1266:5;1241:31;:::i;:::-;1291:5;-1:-1:-1;1348:2:25;1333:18;;1320:32;1361:33;1320:32;1361:33;:::i;:::-;1413:7;-1:-1:-1;1472:2:25;1457:18;;1444:32;1485:33;1444:32;1485:33;:::i;:::-;1537:7;1527:17;;;1021:529;;;;;:::o;1555:247::-;1614:6;1667:2;1655:9;1646:7;1642:23;1638:32;1635:52;;;1683:1;1680;1673:12;1635:52;1722:9;1709:23;1741:31;1766:5;1741:31;:::i;1999:356::-;2201:2;2183:21;;;2220:18;;;2213:30;2279:34;2274:2;2259:18;;2252:62;2346:2;2331:18;;1999:356::o;3325:251::-;3395:6;3448:2;3436:9;3427:7;3423:23;3419:32;3416:52;;;3464:1;3461;3454:12;3416:52;3496:9;3490:16;3515:31;3540:5;3515:31;:::i;4322:222::-;4362:4;4390:1;4387;4384:8;4381:131;;;4434:10;4429:3;4425:20;4422:1;4415:31;4469:4;4466:1;4459:15;4497:4;4494:1;4487:15;4381:131;-1:-1:-1;4529:9:25;;4322:222::o;4549:127::-;4610:10;4605:3;4601:20;4598:1;4591:31;4641:4;4638:1;4631:15;4665:4;4662:1;4655:15;4681:127;4742:10;4737:3;4733:20;4730:1;4723:31;4773:4;4770:1;4763:15;4797:4;4794:1;4787:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "addVaultToRewards(address,address,address)": {
        "notice": "Add a vault to the list of vaults that recieves rewards.",
        "params": {
          "_owner": "owner.",
          "_rewardManager": "address in charge of managing additional rewards",
          "_vault": "vault address"
        }
      },
      "getVaults()": {
        "returns": {
          "_0": "The list of vaults with gauge that are possible to vote for."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "removeVaultFromRewards(address)": {
        "notice": "Remove a vault from the list of vaults recieving rewards.",
        "params": {
          "_vault": "vault address"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "notice": "veYFI holders will vote for gauge allocation to vault tokens.",
    "title": "Voter",
    "version": 1
  },
  "offset": [
    355,
    2902
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E15977F GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xDA981B60 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xDA981B60 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0xE310FA5D EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0xFC826CF6 EQ PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9E15977F EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0xAA79979B EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xB9A09FD5 EQ PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x68C3ACB3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x68C3ACB3 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x7A238855 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3B92EB23 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x44D00F82 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x479EFD4E EQ PUSH2 0x134 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x102 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x259 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x8E8 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x142 CALLDATASIZE PUSH1 0x4 PUSH2 0x94A JUMP JUMPDEST PUSH2 0x26A JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x102 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x43E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x162 PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0x995 JUMP JUMPDEST PUSH2 0x474 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x102 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x102 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1BE PUSH2 0x1A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x995 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x116 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x1DC CALLDATASIZE PUSH1 0x4 PUSH2 0x995 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x205 CALLDATASIZE PUSH1 0x4 PUSH2 0x995 JUMP JUMPDEST PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x102 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0x995 JUMP JUMPDEST PUSH2 0x618 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x23E CALLDATASIZE PUSH1 0x4 PUSH2 0x995 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x265 PUSH1 0x5 PUSH2 0x6B3 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x29E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x295 SWAP1 PUSH2 0x9B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x2EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x195E1A5CDD PUSH1 0xDA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x295 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3EED7881 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND SWAP7 DUP3 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP3 DUP6 AND PUSH1 0x24 DUP5 ADD MSTORE DUP8 DUP6 AND PUSH1 0x44 DUP5 ADD MSTORE DUP7 DUP6 AND PUSH1 0x64 DUP5 ADD MSTORE SWAP1 DUP5 AND PUSH1 0x84 DUP4 ADD MSTORE DUP4 AND PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH4 0xFBB5E204 SWAP1 PUSH1 0xC4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x370 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x9E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP6 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP7 DUP8 AND DUP2 OR SWAP1 SWAP2 SSTORE DUP4 MSTORE PUSH1 0x8 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP1 SWAP6 AND SWAP1 SWAP4 OR SWAP1 SWAP4 SSTORE PUSH1 0x9 SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 POP PUSH2 0x3F9 PUSH1 0x5 DUP7 PUSH2 0x6C7 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH32 0x7B7EF7A864D96A85497A1ED846ADB39940DD6CCEF678FF6AC8D55505E09B8CC4 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x468 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x295 SWAP1 PUSH2 0x9B2 JUMP JUMPDEST PUSH2 0x472 PUSH1 0x0 PUSH2 0x6E5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x49E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x295 SWAP1 PUSH2 0x9B2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xF382D8404A45286F6180665C3EB5574DF3E6EFDD99AD2E652D8F5D904F264F0 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x51C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x295 SWAP1 PUSH2 0x9B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x56C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x8595E1A5CDD PUSH1 0xD2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x295 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x592 PUSH1 0x5 DUP4 PUSH2 0x735 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE SWAP5 DUP7 AND DUP4 MSTORE PUSH1 0x8 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP1 SWAP6 AND SWAP1 SWAP5 SSTORE PUSH1 0x9 DUP2 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP2 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xE71F3A50E5AD81964F352C411F1D45E35438ECD1ACECEF59AC81D9FBBF6CBC0A SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x642 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x295 SWAP1 PUSH2 0x9B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x295 JUMP JUMPDEST PUSH2 0x6B0 DUP2 PUSH2 0x6E5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x6C0 DUP4 PUSH2 0x74A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DC DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x7A6 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DC DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x7F5 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x79A JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x786 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x7ED JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x6DF JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x8DE JUMPI PUSH1 0x0 PUSH2 0x819 PUSH1 0x1 DUP4 PUSH2 0xA04 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x82D SWAP1 PUSH1 0x1 SWAP1 PUSH2 0xA04 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x892 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x84D JUMPI PUSH2 0x84D PUSH2 0xA29 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x870 JUMPI PUSH2 0x870 PUSH2 0xA29 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x8A3 JUMPI PUSH2 0x8A3 PUSH2 0xA3F JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x929 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x904 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x95F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x96A DUP2 PUSH2 0x935 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x97A DUP2 PUSH2 0x935 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x98A DUP2 PUSH2 0x935 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6C0 DUP2 PUSH2 0x935 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x6C0 DUP2 PUSH2 0x935 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xA24 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE BASEFEE PUSH10 0xE996DA2711740474DA01 0xB9 EXTCODECOPY 0xF8 CODESIZE 0xCD PUSH15 0x27631BA23A5AE5D2B683C4A20C6473 PUSH16 0x6C634300080C00330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        355,
        2902
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "6": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "8": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "12": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "DUP1",
      "path": "14"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "REVERT",
      "path": "14"
    },
    "16": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "17": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "POP",
      "path": "14"
    },
    "18": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "21": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "LT",
      "path": "14"
    },
    "22": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xEA"
    },
    "25": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "26": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "29": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "SHR",
      "path": "14"
    },
    "32": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "DUP1",
      "path": "14"
    },
    "33": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x9E15977F"
    },
    "38": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "GT",
      "path": "14"
    },
    "39": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "43": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "DUP1",
      "path": "14"
    },
    "44": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xDA981B60"
    },
    "49": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "GT",
      "path": "14"
    },
    "50": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "54": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "DUP1",
      "path": "14"
    },
    "55": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xDA981B60"
    },
    "60": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "EQ",
      "path": "14"
    },
    "61": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F7"
    },
    "64": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "65": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "DUP1",
      "path": "14"
    },
    "66": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xE310FA5D"
    },
    "71": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "EQ",
      "path": "14"
    },
    "72": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20A"
    },
    "75": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "76": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "DUP1",
      "path": "14"
    },
    "77": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xF2FDE38B"
    },
    "82": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "EQ",
      "path": "14"
    },
    "83": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21D"
    },
    "86": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "87": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "DUP1",
      "path": "14"
    },
    "88": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFC826CF6"
    },
    "93": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "EQ",
      "path": "14"
    },
    "94": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x230"
    },
    "97": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "98": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "DUP1",
      "path": "14"
    },
    "101": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "REVERT",
      "path": "14"
    },
    "102": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "103": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "DUP1",
      "path": "14"
    },
    "104": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x9E15977F"
    },
    "109": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "EQ",
      "path": "14"
    },
    "110": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x188"
    },
    "113": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "114": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "DUP1",
      "path": "14"
    },
    "115": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xAA79979B"
    },
    "120": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "EQ",
      "path": "14"
    },
    "121": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x19B"
    },
    "124": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "125": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "DUP1",
      "path": "14"
    },
    "126": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xB9A09FD5"
    },
    "131": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "EQ",
      "path": "14"
    },
    "132": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1CE"
    },
    "135": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "136": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "DUP1",
      "path": "14"
    },
    "139": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "REVERT",
      "path": "14"
    },
    "140": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "141": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "DUP1",
      "path": "14"
    },
    "142": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x68C3ACB3"
    },
    "147": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "GT",
      "path": "14"
    },
    "148": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC8"
    },
    "151": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "152": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "DUP1",
      "path": "14"
    },
    "153": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x68C3ACB3"
    },
    "158": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "EQ",
      "path": "14"
    },
    "159": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x147"
    },
    "162": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "163": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "DUP1",
      "path": "14"
    },
    "164": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x715018A6"
    },
    "169": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "EQ",
      "path": "14"
    },
    "170": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x15A"
    },
    "173": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "174": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "DUP1",
      "path": "14"
    },
    "175": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x7A238855"
    },
    "180": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "EQ",
      "path": "14"
    },
    "181": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x164"
    },
    "184": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "185": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "DUP1",
      "path": "14"
    },
    "186": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x8DA5CB5B"
    },
    "191": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "EQ",
      "path": "14"
    },
    "192": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x177"
    },
    "195": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "196": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "198": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "DUP1",
      "path": "14"
    },
    "199": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "REVERT",
      "path": "14"
    },
    "200": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "201": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "DUP1",
      "path": "14"
    },
    "202": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x3B92EB23"
    },
    "207": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "EQ",
      "path": "14"
    },
    "208": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xEF"
    },
    "211": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "212": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "DUP1",
      "path": "14"
    },
    "213": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x44D00F82"
    },
    "218": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "EQ",
      "path": "14"
    },
    "219": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11F"
    },
    "222": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "223": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "DUP1",
      "path": "14"
    },
    "224": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x479EFD4E"
    },
    "229": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "EQ",
      "path": "14"
    },
    "230": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x134"
    },
    "233": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "234": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "235": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "237": {
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "DUP1",
      "path": "14"
    },
    "238": {
      "first_revert": true,
      "fn": null,
      "offset": [
        355,
        2902
      ],
      "op": "REVERT",
      "path": "14"
    },
    "239": {
      "offset": [
        444,
        466
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "240": {
      "fn": null,
      "offset": [
        444,
        466
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "242": {
      "fn": null,
      "offset": [
        444,
        466
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "243": {
      "fn": null,
      "offset": [
        444,
        466
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x102"
    },
    "246": {
      "fn": null,
      "offset": [
        444,
        466
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "251": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "253": {
      "op": "SHL"
    },
    "254": {
      "op": "SUB"
    },
    "255": {
      "offset": [
        444,
        466
      ],
      "op": "AND",
      "path": "14"
    },
    "256": {
      "fn": null,
      "offset": [
        444,
        466
      ],
      "op": "DUP2",
      "path": "14"
    },
    "257": {
      "fn": null,
      "offset": [
        444,
        466
      ],
      "op": "JUMP",
      "path": "14"
    },
    "258": {
      "fn": null,
      "offset": [
        444,
        466
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "259": {
      "fn": null,
      "offset": [
        444,
        466
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "261": {
      "fn": null,
      "offset": [
        444,
        466
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "266": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "268": {
      "op": "SHL"
    },
    "269": {
      "op": "SUB"
    },
    "270": {
      "op": "SWAP1"
    },
    "271": {
      "op": "SWAP2"
    },
    "272": {
      "op": "AND"
    },
    "273": {
      "op": "DUP2"
    },
    "274": {
      "op": "MSTORE"
    },
    "275": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "277": {
      "op": "ADD"
    },
    "278": {
      "offset": [
        444,
        466
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "279": {
      "fn": null,
      "offset": [
        444,
        466
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "281": {
      "fn": null,
      "offset": [
        444,
        466
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "282": {
      "fn": null,
      "offset": [
        444,
        466
      ],
      "op": "DUP1",
      "path": "14"
    },
    "283": {
      "fn": null,
      "offset": [
        444,
        466
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "284": {
      "fn": null,
      "offset": [
        444,
        466
      ],
      "op": "SUB",
      "path": "14"
    },
    "285": {
      "fn": null,
      "offset": [
        444,
        466
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "286": {
      "fn": null,
      "offset": [
        444,
        466
      ],
      "op": "RETURN",
      "path": "14"
    },
    "287": {
      "fn": "Registry.getVaults",
      "offset": [
        1479,
        1580
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "288": {
      "fn": "Registry.getVaults",
      "offset": [
        1479,
        1580
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x127"
    },
    "291": {
      "fn": "Registry.getVaults",
      "offset": [
        1479,
        1580
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x259"
    },
    "294": {
      "fn": "Registry.getVaults",
      "jump": "i",
      "offset": [
        1479,
        1580
      ],
      "op": "JUMP",
      "path": "14"
    },
    "295": {
      "fn": "Registry.getVaults",
      "offset": [
        1479,
        1580
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "296": {
      "fn": "Registry.getVaults",
      "offset": [
        1479,
        1580
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "298": {
      "fn": "Registry.getVaults",
      "offset": [
        1479,
        1580
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "299": {
      "fn": "Registry.getVaults",
      "offset": [
        1479,
        1580
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x116"
    },
    "302": {
      "fn": "Registry.getVaults",
      "offset": [
        1479,
        1580
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "303": {
      "fn": "Registry.getVaults",
      "offset": [
        1479,
        1580
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "304": {
      "fn": "Registry.getVaults",
      "offset": [
        1479,
        1580
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8E8"
    },
    "307": {
      "fn": "Registry.getVaults",
      "jump": "i",
      "offset": [
        1479,
        1580
      ],
      "op": "JUMP",
      "path": "14"
    },
    "308": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        1803,
        2419
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "309": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        1803,
        2419
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x102"
    },
    "312": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        1803,
        2419
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x142"
    },
    "315": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        1803,
        2419
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "316": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        1803,
        2419
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "318": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        1803,
        2419
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x94A"
    },
    "321": {
      "fn": "Registry.addVaultToRewards",
      "jump": "i",
      "offset": [
        1803,
        2419
      ],
      "op": "JUMP",
      "path": "14"
    },
    "322": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        1803,
        2419
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "323": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        1803,
        2419
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x26A"
    },
    "326": {
      "fn": "Registry.addVaultToRewards",
      "jump": "i",
      "offset": [
        1803,
        2419
      ],
      "op": "JUMP",
      "path": "14"
    },
    "327": {
      "offset": [
        619,
        646
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "328": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        619,
        646
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "330": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        619,
        646
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "331": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        619,
        646
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x102"
    },
    "334": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        619,
        646
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "339": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "341": {
      "op": "SHL"
    },
    "342": {
      "op": "SUB"
    },
    "343": {
      "offset": [
        619,
        646
      ],
      "op": "AND",
      "path": "14"
    },
    "344": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        619,
        646
      ],
      "op": "DUP2",
      "path": "14"
    },
    "345": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        619,
        646
      ],
      "op": "JUMP",
      "path": "14"
    },
    "346": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "347": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x162"
    },
    "350": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x43E"
    },
    "353": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "354": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "355": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "STOP",
      "path": "0"
    },
    "356": {
      "fn": "Registry.setVe",
      "offset": [
        1273,
        1384
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "357": {
      "fn": "Registry.setVe",
      "offset": [
        1273,
        1384
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x162"
    },
    "360": {
      "fn": "Registry.setVe",
      "offset": [
        1273,
        1384
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x172"
    },
    "363": {
      "fn": "Registry.setVe",
      "offset": [
        1273,
        1384
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "364": {
      "fn": "Registry.setVe",
      "offset": [
        1273,
        1384
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "366": {
      "fn": "Registry.setVe",
      "offset": [
        1273,
        1384
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x995"
    },
    "369": {
      "fn": "Registry.setVe",
      "jump": "i",
      "offset": [
        1273,
        1384
      ],
      "op": "JUMP",
      "path": "14"
    },
    "370": {
      "fn": "Registry.setVe",
      "offset": [
        1273,
        1384
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "371": {
      "fn": "Registry.setVe",
      "offset": [
        1273,
        1384
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x474"
    },
    "374": {
      "fn": "Registry.setVe",
      "jump": "i",
      "offset": [
        1273,
        1384
      ],
      "op": "JUMP",
      "path": "14"
    },
    "375": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "376": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "378": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "383": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "385": {
      "op": "SHL"
    },
    "386": {
      "op": "SUB"
    },
    "387": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "388": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x102"
    },
    "391": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "392": {
      "offset": [
        570,
        600
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "393": {
      "fn": "Ownable.owner",
      "offset": [
        570,
        600
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "395": {
      "fn": "Ownable.owner",
      "offset": [
        570,
        600
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "396": {
      "fn": "Ownable.owner",
      "offset": [
        570,
        600
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x102"
    },
    "399": {
      "fn": "Ownable.owner",
      "offset": [
        570,
        600
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "404": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "406": {
      "op": "SHL"
    },
    "407": {
      "op": "SUB"
    },
    "408": {
      "offset": [
        570,
        600
      ],
      "op": "AND",
      "path": "14"
    },
    "409": {
      "fn": "Ownable.owner",
      "offset": [
        570,
        600
      ],
      "op": "DUP2",
      "path": "14"
    },
    "410": {
      "fn": "Ownable.owner",
      "offset": [
        570,
        600
      ],
      "op": "JUMP",
      "path": "14"
    },
    "411": {
      "offset": [
        848,
        887
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "412": {
      "fn": "Ownable.owner",
      "offset": [
        848,
        887
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1BE"
    },
    "415": {
      "fn": "Ownable.owner",
      "offset": [
        848,
        887
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1A9"
    },
    "418": {
      "fn": "Ownable.owner",
      "offset": [
        848,
        887
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "419": {
      "fn": "Ownable.owner",
      "offset": [
        848,
        887
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "421": {
      "fn": "Ownable.owner",
      "offset": [
        848,
        887
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x995"
    },
    "424": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        848,
        887
      ],
      "op": "JUMP",
      "path": "14"
    },
    "425": {
      "fn": "Ownable.owner",
      "offset": [
        848,
        887
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "426": {
      "fn": "Ownable.owner",
      "offset": [
        848,
        887
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "428": {
      "fn": "Ownable.owner",
      "offset": [
        848,
        887
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "430": {
      "fn": "Ownable.owner",
      "offset": [
        848,
        887
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "431": {
      "fn": "Ownable.owner",
      "offset": [
        848,
        887
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "433": {
      "fn": "Ownable.owner",
      "offset": [
        848,
        887
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "434": {
      "fn": "Ownable.owner",
      "offset": [
        848,
        887
      ],
      "op": "DUP2",
      "path": "14"
    },
    "435": {
      "fn": "Ownable.owner",
      "offset": [
        848,
        887
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "436": {
      "fn": "Ownable.owner",
      "offset": [
        848,
        887
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "438": {
      "fn": "Ownable.owner",
      "offset": [
        848,
        887
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "439": {
      "fn": "Ownable.owner",
      "offset": [
        848,
        887
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "440": {
      "fn": "Ownable.owner",
      "offset": [
        848,
        887
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "441": {
      "fn": "Ownable.owner",
      "offset": [
        848,
        887
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "443": {
      "fn": "Ownable.owner",
      "offset": [
        848,
        887
      ],
      "op": "AND",
      "path": "14"
    },
    "444": {
      "fn": "Ownable.owner",
      "offset": [
        848,
        887
      ],
      "op": "DUP2",
      "path": "14"
    },
    "445": {
      "fn": "Ownable.owner",
      "offset": [
        848,
        887
      ],
      "op": "JUMP",
      "path": "14"
    },
    "446": {
      "fn": "Ownable.owner",
      "offset": [
        848,
        887
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "447": {
      "fn": "Ownable.owner",
      "offset": [
        848,
        887
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "449": {
      "fn": "Ownable.owner",
      "offset": [
        848,
        887
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "450": {
      "op": "SWAP1"
    },
    "451": {
      "op": "ISZERO"
    },
    "452": {
      "op": "ISZERO"
    },
    "453": {
      "op": "DUP2"
    },
    "454": {
      "op": "MSTORE"
    },
    "455": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "457": {
      "op": "ADD"
    },
    "458": {
      "offset": [
        848,
        887
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x116"
    },
    "461": {
      "op": "JUMP"
    },
    "462": {
      "offset": [
        711,
        752
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "463": {
      "fn": "Ownable.owner",
      "offset": [
        711,
        752
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x102"
    },
    "466": {
      "fn": "Ownable.owner",
      "offset": [
        711,
        752
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1DC"
    },
    "469": {
      "fn": "Ownable.owner",
      "offset": [
        711,
        752
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "470": {
      "fn": "Ownable.owner",
      "offset": [
        711,
        752
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "472": {
      "fn": "Ownable.owner",
      "offset": [
        711,
        752
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x995"
    },
    "475": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        711,
        752
      ],
      "op": "JUMP",
      "path": "14"
    },
    "476": {
      "fn": "Ownable.owner",
      "offset": [
        711,
        752
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "477": {
      "fn": "Ownable.owner",
      "offset": [
        711,
        752
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "479": {
      "fn": "Ownable.owner",
      "offset": [
        711,
        752
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "481": {
      "fn": "Ownable.owner",
      "offset": [
        711,
        752
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "482": {
      "fn": "Ownable.owner",
      "offset": [
        711,
        752
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "484": {
      "fn": "Ownable.owner",
      "offset": [
        711,
        752
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "485": {
      "fn": "Ownable.owner",
      "offset": [
        711,
        752
      ],
      "op": "DUP2",
      "path": "14"
    },
    "486": {
      "fn": "Ownable.owner",
      "offset": [
        711,
        752
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "487": {
      "fn": "Ownable.owner",
      "offset": [
        711,
        752
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "489": {
      "fn": "Ownable.owner",
      "offset": [
        711,
        752
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "490": {
      "fn": "Ownable.owner",
      "offset": [
        711,
        752
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "491": {
      "fn": "Ownable.owner",
      "offset": [
        711,
        752
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "496": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "498": {
      "op": "SHL"
    },
    "499": {
      "op": "SUB"
    },
    "500": {
      "offset": [
        711,
        752
      ],
      "op": "AND",
      "path": "14"
    },
    "501": {
      "fn": "Ownable.owner",
      "offset": [
        711,
        752
      ],
      "op": "DUP2",
      "path": "14"
    },
    "502": {
      "fn": "Ownable.owner",
      "offset": [
        711,
        752
      ],
      "op": "JUMP",
      "path": "14"
    },
    "503": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2543,
        2900
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "504": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2543,
        2900
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x162"
    },
    "507": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2543,
        2900
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x205"
    },
    "510": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2543,
        2900
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "511": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2543,
        2900
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "513": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2543,
        2900
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x995"
    },
    "516": {
      "fn": "Registry.removeVaultFromRewards",
      "jump": "i",
      "offset": [
        2543,
        2900
      ],
      "op": "JUMP",
      "path": "14"
    },
    "517": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2543,
        2900
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "518": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2543,
        2900
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4F2"
    },
    "521": {
      "fn": "Registry.removeVaultFromRewards",
      "jump": "i",
      "offset": [
        2543,
        2900
      ],
      "op": "JUMP",
      "path": "14"
    },
    "522": {
      "offset": [
        517,
        535
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "523": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        517,
        535
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "525": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        517,
        535
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "526": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        517,
        535
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x102"
    },
    "529": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        517,
        535
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "534": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "536": {
      "op": "SHL"
    },
    "537": {
      "op": "SUB"
    },
    "538": {
      "offset": [
        517,
        535
      ],
      "op": "AND",
      "path": "14"
    },
    "539": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        517,
        535
      ],
      "op": "DUP2",
      "path": "14"
    },
    "540": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        517,
        535
      ],
      "op": "JUMP",
      "path": "14"
    },
    "541": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "542": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x162"
    },
    "545": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22B"
    },
    "548": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "549": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "551": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x995"
    },
    "554": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "555": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "556": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x618"
    },
    "559": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "560": {
      "offset": [
        776,
        824
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "561": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        776,
        824
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x102"
    },
    "564": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        776,
        824
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x23E"
    },
    "567": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        776,
        824
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "568": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        776,
        824
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "570": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        776,
        824
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x995"
    },
    "573": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        776,
        824
      ],
      "op": "JUMP",
      "path": "14"
    },
    "574": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        776,
        824
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "575": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        776,
        824
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "577": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        776,
        824
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "579": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        776,
        824
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "580": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        776,
        824
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "582": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        776,
        824
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "583": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        776,
        824
      ],
      "op": "DUP2",
      "path": "14"
    },
    "584": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        776,
        824
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "585": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        776,
        824
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "587": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        776,
        824
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "588": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        776,
        824
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "589": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        776,
        824
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "594": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "596": {
      "op": "SHL"
    },
    "597": {
      "op": "SUB"
    },
    "598": {
      "offset": [
        776,
        824
      ],
      "op": "AND",
      "path": "14"
    },
    "599": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        776,
        824
      ],
      "op": "DUP2",
      "path": "14"
    },
    "600": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        776,
        824
      ],
      "op": "JUMP",
      "path": "14"
    },
    "601": {
      "fn": "Registry.getVaults",
      "offset": [
        1479,
        1580
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "602": {
      "fn": "Registry.getVaults",
      "offset": [
        1523,
        1539
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "604": {
      "fn": "Registry.getVaults",
      "offset": [
        1558,
        1573
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 1,
      "value": "0x265"
    },
    "607": {
      "fn": "Registry.getVaults",
      "offset": [
        1558,
        1564
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "609": {
      "fn": "Registry.getVaults",
      "offset": [
        1558,
        1571
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6B3"
    },
    "612": {
      "fn": "Registry.getVaults",
      "jump": "i",
      "offset": [
        1558,
        1573
      ],
      "op": "JUMP",
      "path": "14"
    },
    "613": {
      "fn": "Registry.getVaults",
      "offset": [
        1558,
        1573
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "614": {
      "fn": "Registry.getVaults",
      "offset": [
        1551,
        1573
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "615": {
      "fn": "Registry.getVaults",
      "offset": [
        1551,
        1573
      ],
      "op": "POP",
      "path": "14"
    },
    "616": {
      "fn": "Registry.getVaults",
      "offset": [
        1479,
        1580
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "617": {
      "fn": "Registry.getVaults",
      "jump": "o",
      "offset": [
        1479,
        1580
      ],
      "op": "JUMP",
      "path": "14"
    },
    "618": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        1803,
        2419
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "619": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        1944,
        1951
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "621": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DUP1",
      "path": "0"
    },
    "622": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "627": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "629": {
      "op": "SHL"
    },
    "630": {
      "op": "SUB"
    },
    "631": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "632": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "7",
      "statement": 2
    },
    "633": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "634": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29E"
    },
    "637": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "638": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "640": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "641": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "645": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "647": {
      "op": "SHL"
    },
    "648": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "649": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "650": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "652": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "653": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x295"
    },
    "656": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "657": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B2"
    },
    "660": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "661": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "662": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "664": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "665": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "666": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "667": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SUB",
      "path": "0"
    },
    "668": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "669": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "670": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "675": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "677": {
      "op": "SHL"
    },
    "678": {
      "op": "SUB"
    },
    "679": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        1971,
        1985
      ],
      "op": "DUP5",
      "path": "14",
      "statement": 3
    },
    "680": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        1971,
        1985
      ],
      "op": "DUP2",
      "path": "14"
    },
    "681": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        1971,
        1985
      ],
      "op": "AND",
      "path": "14"
    },
    "682": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        1997,
        2000
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "684": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        1971,
        1985
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "685": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        1971,
        1985
      ],
      "op": "DUP2",
      "path": "14"
    },
    "686": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        1971,
        1985
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "687": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        1971,
        1977
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "689": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        1971,
        1985
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "691": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        1971,
        1985
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "692": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        1971,
        1985
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "694": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        1971,
        1985
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "695": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        1971,
        1985
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "696": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        1971,
        1985
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "697": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        1971,
        1985
      ],
      "op": "AND",
      "path": "14"
    },
    "698": {
      "branch": 37,
      "fn": "Registry.addVaultToRewards",
      "offset": [
        1971,
        2001
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "699": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        1963,
        2011
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2EE"
    },
    "702": {
      "branch": 37,
      "fn": "Registry.addVaultToRewards",
      "offset": [
        1963,
        2011
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "703": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        1963,
        2011
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "705": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        1963,
        2011
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "706": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "710": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "712": {
      "op": "SHL"
    },
    "713": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        1963,
        2011
      ],
      "op": "DUP2",
      "path": "14"
    },
    "714": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        1963,
        2011
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "715": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "717": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        1963,
        2011
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "719": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        1963,
        2011
      ],
      "op": "DUP3",
      "path": "14"
    },
    "720": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        1963,
        2011
      ],
      "op": "ADD",
      "path": "14"
    },
    "721": {
      "op": "MSTORE"
    },
    "722": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "724": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "726": {
      "op": "DUP3"
    },
    "727": {
      "op": "ADD"
    },
    "728": {
      "op": "MSTORE"
    },
    "729": {
      "op": "PUSH5",
      "value": "0x195E1A5CDD"
    },
    "735": {
      "op": "PUSH1",
      "value": "0xDA"
    },
    "737": {
      "op": "SHL"
    },
    "738": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "740": {
      "op": "DUP3"
    },
    "741": {
      "op": "ADD"
    },
    "742": {
      "op": "MSTORE"
    },
    "743": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "745": {
      "op": "ADD"
    },
    "746": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        1963,
        2011
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x295"
    },
    "749": {
      "op": "JUMP"
    },
    "750": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        1963,
        2011
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "751": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2053,
        2065
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "753": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2053,
        2065
      ],
      "op": "DUP1",
      "path": "14"
    },
    "754": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2053,
        2065
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "755": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2112,
        2115
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "757": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2112,
        2115
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "758": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2053,
        2065
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "760": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2177,
        2184
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "761": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2198,
        2213
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "763": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2198,
        2213
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "764": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "766": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "767": {
      "op": "PUSH4",
      "value": "0x3EED7881"
    },
    "772": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "774": {
      "op": "SHL"
    },
    "775": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "DUP2",
      "path": "14"
    },
    "776": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "781": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "783": {
      "op": "SHL"
    },
    "784": {
      "op": "SUB"
    },
    "785": {
      "op": "DUP11"
    },
    "786": {
      "op": "DUP2"
    },
    "787": {
      "op": "AND"
    },
    "788": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "789": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "DUP3",
      "path": "14"
    },
    "790": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "ADD",
      "path": "14"
    },
    "791": {
      "op": "SWAP7"
    },
    "792": {
      "op": "SWAP1"
    },
    "793": {
      "op": "SWAP7"
    },
    "794": {
      "op": "MSTORE"
    },
    "795": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2112,
        2115
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "796": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2112,
        2115
      ],
      "op": "DUP6",
      "path": "14"
    },
    "797": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2112,
        2115
      ],
      "op": "AND",
      "path": "14"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "800": {
      "op": "DUP5"
    },
    "801": {
      "op": "ADD"
    },
    "802": {
      "op": "MSTORE"
    },
    "803": {
      "op": "DUP8"
    },
    "804": {
      "op": "DUP6"
    },
    "805": {
      "op": "AND"
    },
    "806": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "808": {
      "op": "DUP5"
    },
    "809": {
      "op": "ADD"
    },
    "810": {
      "op": "MSTORE"
    },
    "811": {
      "op": "DUP7"
    },
    "812": {
      "op": "DUP6"
    },
    "813": {
      "op": "AND"
    },
    "814": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "816": {
      "op": "DUP5"
    },
    "817": {
      "op": "ADD"
    },
    "818": {
      "op": "MSTORE"
    },
    "819": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2177,
        2184
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "820": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2177,
        2184
      ],
      "op": "DUP5",
      "path": "14"
    },
    "821": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2177,
        2184
      ],
      "op": "AND",
      "path": "14"
    },
    "822": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "824": {
      "op": "DUP4"
    },
    "825": {
      "op": "ADD"
    },
    "826": {
      "op": "MSTORE"
    },
    "827": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2198,
        2213
      ],
      "op": "DUP4",
      "path": "14"
    },
    "828": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2198,
        2213
      ],
      "op": "AND",
      "path": "14"
    },
    "829": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "831": {
      "op": "DUP3"
    },
    "832": {
      "op": "ADD"
    },
    "833": {
      "op": "MSTORE"
    },
    "834": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2022,
        2036
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "836": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2022,
        2036
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "837": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2053,
        2065
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "838": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2053,
        2065
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "839": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2053,
        2065
      ],
      "op": "AND",
      "path": "14"
    },
    "840": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2053,
        2065
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "841": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2078
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFBB5E204"
    },
    "846": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2078
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "847": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "849": {
      "op": "ADD"
    },
    "850": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "852": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "854": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "855": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "DUP1",
      "path": "14"
    },
    "856": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "DUP4",
      "path": "14"
    },
    "857": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "SUB",
      "path": "14"
    },
    "858": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "DUP2",
      "path": "14"
    },
    "859": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "861": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "DUP8",
      "path": "14"
    },
    "862": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "GAS",
      "path": "14"
    },
    "863": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "CALL",
      "path": "14"
    },
    "864": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "865": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "DUP1",
      "path": "14"
    },
    "866": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "867": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x370"
    },
    "870": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "871": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "872": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "874": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "DUP1",
      "path": "14"
    },
    "875": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "876": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "877": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "879": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "REVERT",
      "path": "14"
    },
    "880": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "881": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "POP",
      "path": "14"
    },
    "882": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "POP",
      "path": "14"
    },
    "883": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "POP",
      "path": "14"
    },
    "884": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "POP",
      "path": "14"
    },
    "885": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "887": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "888": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "889": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "891": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "NOT",
      "path": "14"
    },
    "892": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "894": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "DUP3",
      "path": "14"
    },
    "895": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "ADD",
      "path": "14"
    },
    "896": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "AND",
      "path": "14"
    },
    "897": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "DUP3",
      "path": "14"
    },
    "898": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "ADD",
      "path": "14"
    },
    "899": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "DUP1",
      "path": "14"
    },
    "900": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "902": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "903": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "POP",
      "path": "14"
    },
    "904": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "DUP2",
      "path": "14"
    },
    "905": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "ADD",
      "path": "14"
    },
    "906": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "907": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x394"
    },
    "910": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "911": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "912": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x9E7"
    },
    "915": {
      "fn": "Registry.addVaultToRewards",
      "jump": "i",
      "offset": [
        2039,
        2223
      ],
      "op": "JUMP",
      "path": "14"
    },
    "916": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2039,
        2223
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "921": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "923": {
      "op": "SHL"
    },
    "924": {
      "op": "SUB"
    },
    "925": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2233,
        2247
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 4
    },
    "926": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2233,
        2247
      ],
      "op": "DUP8",
      "path": "14"
    },
    "927": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2233,
        2247
      ],
      "op": "AND",
      "path": "14"
    },
    "928": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2233,
        2247
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "930": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2233,
        2247
      ],
      "op": "DUP2",
      "path": "14"
    },
    "931": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2233,
        2247
      ],
      "op": "DUP2",
      "path": "14"
    },
    "932": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2233,
        2247
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "933": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2233,
        2239
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "935": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2233,
        2247
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "937": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2233,
        2247
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "938": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2233,
        2247
      ],
      "op": "DUP2",
      "path": "14"
    },
    "939": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2233,
        2247
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "940": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2233,
        2247
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "942": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2233,
        2247
      ],
      "op": "DUP1",
      "path": "14"
    },
    "943": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2233,
        2247
      ],
      "op": "DUP4",
      "path": "14"
    },
    "944": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2233,
        2247
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "945": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2233,
        2256
      ],
      "op": "DUP1",
      "path": "14"
    },
    "946": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2233,
        2256
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "947": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2233,
        2256
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "948": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2233,
        2256
      ],
      "op": "DUP8",
      "path": "14"
    },
    "949": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2233,
        2256
      ],
      "op": "AND",
      "path": "14"
    },
    "950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "954": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "956": {
      "op": "SHL"
    },
    "957": {
      "op": "SUB"
    },
    "958": {
      "op": "NOT"
    },
    "959": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2233,
        2256
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "960": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2233,
        2256
      ],
      "op": "DUP8",
      "path": "14"
    },
    "961": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2233,
        2256
      ],
      "op": "AND",
      "path": "14"
    },
    "962": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2233,
        2256
      ],
      "op": "DUP2",
      "path": "14"
    },
    "963": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2233,
        2256
      ],
      "op": "OR",
      "path": "14"
    },
    "964": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2233,
        2256
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "965": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2233,
        2256
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "966": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2233,
        2256
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "967": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2266,
        2287
      ],
      "op": "DUP4",
      "path": "14",
      "statement": 5
    },
    "968": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2266,
        2287
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "969": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2266,
        2279
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "971": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2266,
        2287
      ],
      "op": "DUP3",
      "path": "14"
    },
    "972": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2266,
        2287
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "973": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2266,
        2287
      ],
      "op": "DUP1",
      "path": "14"
    },
    "974": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2266,
        2287
      ],
      "op": "DUP4",
      "path": "14"
    },
    "975": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2266,
        2287
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "976": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2266,
        2296
      ],
      "op": "DUP1",
      "path": "14"
    },
    "977": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2266,
        2296
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "978": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2266,
        2296
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "979": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2266,
        2296
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "980": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2266,
        2296
      ],
      "op": "AND",
      "path": "14"
    },
    "981": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2266,
        2296
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "982": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2266,
        2296
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "983": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2266,
        2296
      ],
      "op": "OR",
      "path": "14"
    },
    "984": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2266,
        2296
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "985": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2266,
        2296
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "986": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2266,
        2296
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "987": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2306,
        2313
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 6,
      "value": "0x9"
    },
    "989": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2306,
        2321
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "990": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2306,
        2321
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "991": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2306,
        2321
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "992": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2306,
        2321
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "993": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2306,
        2321
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "994": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2306,
        2328
      ],
      "op": "DUP1",
      "path": "14"
    },
    "995": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2306,
        2328
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "996": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "998": {
      "op": "NOT"
    },
    "999": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2306,
        2328
      ],
      "op": "AND",
      "path": "14"
    },
    "1000": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2233,
        2256
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "1002": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2306,
        2328
      ],
      "op": "OR",
      "path": "14"
    },
    "1003": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2306,
        2328
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1004": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2306,
        2328
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1005": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2022,
        2223
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1006": {
      "op": "POP"
    },
    "1007": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2338,
        2356
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 7,
      "value": "0x3F9"
    },
    "1010": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2338,
        2344
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "1012": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2240,
        2246
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1013": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2338,
        2348
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6C7"
    },
    "1016": {
      "fn": "Registry.addVaultToRewards",
      "jump": "i",
      "offset": [
        2338,
        2356
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1017": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2338,
        2356
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1018": {
      "op": "POP"
    },
    "1019": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2371,
        2389
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 8,
      "value": "0x40"
    },
    "1021": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2371,
        2389
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1024": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1026": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1028": {
      "op": "SHL"
    },
    "1029": {
      "op": "SUB"
    },
    "1030": {
      "op": "DUP7"
    },
    "1031": {
      "op": "AND"
    },
    "1032": {
      "op": "DUP2"
    },
    "1033": {
      "op": "MSTORE"
    },
    "1034": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2371,
        2389
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x7B7EF7A864D96A85497A1ED846ADB39940DD6CCEF678FF6AC8D55505E09B8CC4"
    },
    "1067": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2371,
        2389
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1068": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1070": {
      "op": "ADD"
    },
    "1071": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2371,
        2389
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1073": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2371,
        2389
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1074": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2371,
        2389
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1075": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2371,
        2389
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1076": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2371,
        2389
      ],
      "op": "SUB",
      "path": "14"
    },
    "1077": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2371,
        2389
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1078": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2371,
        2389
      ],
      "op": "LOG1",
      "path": "14"
    },
    "1079": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        2406,
        2412
      ],
      "op": "SWAP5",
      "path": "14",
      "statement": 9
    },
    "1080": {
      "fn": "Registry.addVaultToRewards",
      "offset": [
        1803,
        2419
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1081": {
      "op": "POP"
    },
    "1082": {
      "op": "POP"
    },
    "1083": {
      "op": "POP"
    },
    "1084": {
      "op": "POP"
    },
    "1085": {
      "fn": "Registry.addVaultToRewards",
      "jump": "o",
      "offset": [
        1803,
        2419
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1086": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1087": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1089": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1096": {
      "op": "SHL"
    },
    "1097": {
      "op": "SUB"
    },
    "1098": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1099": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1100": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1101": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x468"
    },
    "1104": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1105": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1107": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1108": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1112": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1114": {
      "op": "SHL"
    },
    "1115": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1116": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1117": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1119": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1120": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x295"
    },
    "1123": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1124": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B2"
    },
    "1127": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1128": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1129": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 10,
      "value": "0x472"
    },
    "1132": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1134": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6E5"
    },
    "1137": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1138": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1139": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1140": {
      "fn": "Registry.setVe",
      "offset": [
        1273,
        1384
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1141": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1143": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1148": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1150": {
      "op": "SHL"
    },
    "1151": {
      "op": "SUB"
    },
    "1152": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1153": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1154": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1155": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x49E"
    },
    "1158": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1159": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1161": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1162": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1166": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1168": {
      "op": "SHL"
    },
    "1169": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1170": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1171": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1173": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1174": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x295"
    },
    "1177": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1178": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B2"
    },
    "1181": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1182": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1183": {
      "fn": "Registry.setVe",
      "offset": [
        1330,
        1337
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 11,
      "value": "0x1"
    },
    "1185": {
      "fn": "Registry.setVe",
      "offset": [
        1330,
        1343
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1186": {
      "fn": "Registry.setVe",
      "offset": [
        1330,
        1343
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1191": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1193": {
      "op": "SHL"
    },
    "1194": {
      "op": "SUB"
    },
    "1195": {
      "op": "NOT"
    },
    "1196": {
      "fn": "Registry.setVe",
      "offset": [
        1330,
        1343
      ],
      "op": "AND",
      "path": "14"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1201": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1203": {
      "op": "SHL"
    },
    "1204": {
      "op": "SUB"
    },
    "1205": {
      "fn": "Registry.setVe",
      "offset": [
        1330,
        1343
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1206": {
      "fn": "Registry.setVe",
      "offset": [
        1330,
        1343
      ],
      "op": "AND",
      "path": "14"
    },
    "1207": {
      "fn": "Registry.setVe",
      "offset": [
        1330,
        1343
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1208": {
      "fn": "Registry.setVe",
      "offset": [
        1330,
        1343
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1209": {
      "fn": "Registry.setVe",
      "offset": [
        1330,
        1343
      ],
      "op": "OR",
      "path": "14"
    },
    "1210": {
      "fn": "Registry.setVe",
      "offset": [
        1330,
        1343
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1211": {
      "fn": "Registry.setVe",
      "offset": [
        1330,
        1343
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1212": {
      "fn": "Registry.setVe",
      "offset": [
        1330,
        1343
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1213": {
      "fn": "Registry.setVe",
      "offset": [
        1358,
        1377
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 12,
      "value": "0x40"
    },
    "1215": {
      "fn": "Registry.setVe",
      "offset": [
        1358,
        1377
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1216": {
      "op": "SWAP1"
    },
    "1217": {
      "op": "DUP2"
    },
    "1218": {
      "op": "MSTORE"
    },
    "1219": {
      "fn": "Registry.setVe",
      "offset": [
        1358,
        1377
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0xF382D8404A45286F6180665C3EB5574DF3E6EFDD99AD2E652D8F5D904F264F0"
    },
    "1252": {
      "fn": "Registry.setVe",
      "offset": [
        1358,
        1377
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1253": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1255": {
      "op": "ADD"
    },
    "1256": {
      "fn": "Registry.setVe",
      "offset": [
        1358,
        1377
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1258": {
      "fn": "Registry.setVe",
      "offset": [
        1358,
        1377
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1259": {
      "fn": "Registry.setVe",
      "offset": [
        1358,
        1377
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1260": {
      "fn": "Registry.setVe",
      "offset": [
        1358,
        1377
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1261": {
      "fn": "Registry.setVe",
      "offset": [
        1358,
        1377
      ],
      "op": "SUB",
      "path": "14"
    },
    "1262": {
      "fn": "Registry.setVe",
      "offset": [
        1358,
        1377
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1263": {
      "fn": "Registry.setVe",
      "offset": [
        1358,
        1377
      ],
      "op": "LOG1",
      "path": "14"
    },
    "1264": {
      "fn": "Registry.setVe",
      "offset": [
        1273,
        1384
      ],
      "op": "POP",
      "path": "14"
    },
    "1265": {
      "fn": "Registry.setVe",
      "jump": "o",
      "offset": [
        1273,
        1384
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1266": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2543,
        2900
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1267": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1269": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1274": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1276": {
      "op": "SHL"
    },
    "1277": {
      "op": "SUB"
    },
    "1278": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1279": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1280": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1281": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51C"
    },
    "1284": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1285": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1287": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1288": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1292": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1294": {
      "op": "SHL"
    },
    "1295": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1296": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1297": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1299": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1300": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x295"
    },
    "1303": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1304": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B2"
    },
    "1307": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1308": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1315": {
      "op": "SHL"
    },
    "1316": {
      "op": "SUB"
    },
    "1317": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2628,
        2642
      ],
      "op": "DUP2",
      "path": "14",
      "statement": 13
    },
    "1318": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2628,
        2642
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1319": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2628,
        2642
      ],
      "op": "AND",
      "path": "14"
    },
    "1320": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2654,
        2657
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1322": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2628,
        2642
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1323": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2628,
        2642
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1324": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2628,
        2642
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1325": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2628,
        2634
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "1327": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2628,
        2642
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1329": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2628,
        2642
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1330": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2628,
        2642
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1332": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2628,
        2642
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1333": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2628,
        2642
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1334": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2628,
        2642
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1335": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2628,
        2642
      ],
      "op": "AND",
      "path": "14"
    },
    "1336": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2620,
        2669
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x56C"
    },
    "1339": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2620,
        2669
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1340": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2620,
        2669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1342": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2620,
        2669
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1343": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1347": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1349": {
      "op": "SHL"
    },
    "1350": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2620,
        2669
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1351": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2620,
        2669
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1352": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1354": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2620,
        2669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1356": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2620,
        2669
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1357": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2620,
        2669
      ],
      "op": "ADD",
      "path": "14"
    },
    "1358": {
      "op": "MSTORE"
    },
    "1359": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "1361": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1363": {
      "op": "DUP3"
    },
    "1364": {
      "op": "ADD"
    },
    "1365": {
      "op": "MSTORE"
    },
    "1366": {
      "op": "PUSH6",
      "value": "0x8595E1A5CDD"
    },
    "1373": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "1375": {
      "op": "SHL"
    },
    "1376": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1378": {
      "op": "DUP3"
    },
    "1379": {
      "op": "ADD"
    },
    "1380": {
      "op": "MSTORE"
    },
    "1381": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1383": {
      "op": "ADD"
    },
    "1384": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2620,
        2669
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x295"
    },
    "1387": {
      "op": "JUMP"
    },
    "1388": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2620,
        2669
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1393": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1395": {
      "op": "SHL"
    },
    "1396": {
      "op": "SUB"
    },
    "1397": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2695,
        2709
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1398": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2695,
        2709
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1399": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2695,
        2709
      ],
      "op": "AND",
      "path": "14"
    },
    "1400": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2679,
        2692
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1402": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2695,
        2709
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1403": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2695,
        2709
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1404": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2695,
        2709
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1405": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2695,
        2701
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "1407": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2695,
        2709
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1409": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2695,
        2709
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1410": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2695,
        2709
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1412": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2695,
        2709
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1413": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2695,
        2709
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1414": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2695,
        2709
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1415": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2695,
        2709
      ],
      "op": "AND",
      "path": "14"
    },
    "1416": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2720,
        2741
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 14,
      "value": "0x592"
    },
    "1419": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2720,
        2726
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "1421": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2702,
        2708
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1422": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2720,
        2733
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x735"
    },
    "1425": {
      "fn": "Registry.removeVaultFromRewards",
      "jump": "i",
      "offset": [
        2720,
        2741
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1426": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2720,
        2741
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1427": {
      "op": "POP"
    },
    "1428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1434": {
      "op": "SHL"
    },
    "1435": {
      "op": "SUB"
    },
    "1436": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2752,
        2766
      ],
      "op": "DUP3",
      "path": "14",
      "statement": 15
    },
    "1437": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2752,
        2766
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1438": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2752,
        2766
      ],
      "op": "AND",
      "path": "14"
    },
    "1439": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2777,
        2780
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1441": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2752,
        2766
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1442": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2752,
        2766
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1443": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2752,
        2766
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1444": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2752,
        2758
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "1446": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2752,
        2766
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1448": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2752,
        2766
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1449": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2752,
        2766
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1450": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2752,
        2766
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1451": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2752,
        2766
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1453": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2752,
        2766
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1454": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2752,
        2766
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1455": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2752,
        2766
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1456": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2752,
        2781
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1457": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2752,
        2781
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1462": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1464": {
      "op": "SHL"
    },
    "1465": {
      "op": "SUB"
    },
    "1466": {
      "op": "NOT"
    },
    "1467": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2752,
        2781
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1468": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2752,
        2781
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1469": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2752,
        2781
      ],
      "op": "AND",
      "path": "14"
    },
    "1470": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2752,
        2781
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1471": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2752,
        2781
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1472": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2752,
        2781
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1473": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2791,
        2811
      ],
      "op": "SWAP5",
      "path": "14",
      "statement": 16
    },
    "1474": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2791,
        2811
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1475": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2791,
        2811
      ],
      "op": "AND",
      "path": "14"
    },
    "1476": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2791,
        2811
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1477": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2791,
        2811
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1478": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2791,
        2804
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "1480": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2791,
        2811
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1481": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2791,
        2811
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1482": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2791,
        2811
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1483": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2791,
        2811
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1484": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2791,
        2811
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1485": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2791,
        2826
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1486": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2791,
        2826
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1487": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2791,
        2826
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1488": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2791,
        2826
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "1489": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2791,
        2826
      ],
      "op": "AND",
      "path": "14"
    },
    "1490": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2791,
        2826
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1491": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2791,
        2826
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "1492": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2791,
        2826
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1493": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2836,
        2843
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 17,
      "value": "0x9"
    },
    "1495": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2836,
        2850
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1496": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2836,
        2850
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1497": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2836,
        2850
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1498": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2836,
        2850
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1499": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2836,
        2850
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1500": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2836,
        2850
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1501": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2836,
        2858
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1502": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2836,
        2858
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1503": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1505": {
      "op": "NOT"
    },
    "1506": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2836,
        2858
      ],
      "op": "AND",
      "path": "14"
    },
    "1507": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2836,
        2858
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1508": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2836,
        2858
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1509": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2873,
        2893
      ],
      "op": "SWAP2",
      "path": "14",
      "statement": 18
    },
    "1510": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2873,
        2893
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1511": {
      "op": "SWAP1"
    },
    "1512": {
      "op": "DUP2"
    },
    "1513": {
      "op": "MSTORE"
    },
    "1514": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2873,
        2893
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0xE71F3A50E5AD81964F352C411F1D45E35438ECD1ACECEF59AC81D9FBBF6CBC0A"
    },
    "1547": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2873,
        2893
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1548": {
      "op": "ADD"
    },
    "1549": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2873,
        2893
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1551": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2873,
        2893
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1552": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2873,
        2893
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1553": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2873,
        2893
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1554": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2873,
        2893
      ],
      "op": "SUB",
      "path": "14"
    },
    "1555": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2873,
        2893
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1556": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2873,
        2893
      ],
      "op": "LOG1",
      "path": "14"
    },
    "1557": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2610,
        2900
      ],
      "op": "POP",
      "path": "14"
    },
    "1558": {
      "fn": "Registry.removeVaultFromRewards",
      "offset": [
        2543,
        2900
      ],
      "op": "POP",
      "path": "14"
    },
    "1559": {
      "fn": "Registry.removeVaultFromRewards",
      "jump": "o",
      "offset": [
        2543,
        2900
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1560": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1561": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1563": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1570": {
      "op": "SHL"
    },
    "1571": {
      "op": "SUB"
    },
    "1572": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1573": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1574": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1575": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x642"
    },
    "1578": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1579": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1581": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1582": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1586": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1588": {
      "op": "SHL"
    },
    "1589": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1590": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1591": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1593": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1594": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x295"
    },
    "1597": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1598": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B2"
    },
    "1601": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1602": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1607": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1609": {
      "op": "SHL"
    },
    "1610": {
      "op": "SUB"
    },
    "1611": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 19
    },
    "1612": {
      "branch": 40,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "1613": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A7"
    },
    "1616": {
      "branch": 40,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1617": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1619": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1620": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1624": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1626": {
      "op": "SHL"
    },
    "1627": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1628": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1629": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1631": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1633": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1634": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "1635": {
      "op": "MSTORE"
    },
    "1636": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1638": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1640": {
      "op": "DUP3"
    },
    "1641": {
      "op": "ADD"
    },
    "1642": {
      "op": "MSTORE"
    },
    "1643": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "1676": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1678": {
      "op": "DUP3"
    },
    "1679": {
      "op": "ADD"
    },
    "1680": {
      "op": "MSTORE"
    },
    "1681": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "1688": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1690": {
      "op": "SHL"
    },
    "1691": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1693": {
      "op": "DUP3"
    },
    "1694": {
      "op": "ADD"
    },
    "1695": {
      "op": "MSTORE"
    },
    "1696": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1698": {
      "op": "ADD"
    },
    "1699": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x295"
    },
    "1702": {
      "op": "JUMP"
    },
    "1703": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1704": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 20,
      "value": "0x6B0"
    },
    "1707": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1708": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6E5"
    },
    "1711": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1712": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1713": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "1714": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1715": {
      "fn": "EnumerableSet.values",
      "offset": [
        9566,
        9823
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1716": {
      "fn": "EnumerableSet.values",
      "offset": [
        9629,
        9645
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x60"
    },
    "1718": {
      "fn": "EnumerableSet.values",
      "offset": [
        9657,
        9679
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1720": {
      "fn": "EnumerableSet.values",
      "offset": [
        9682,
        9701
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x6C0"
    },
    "1723": {
      "fn": "EnumerableSet.values",
      "offset": [
        9690,
        9693
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1724": {
      "fn": "EnumerableSet.values",
      "offset": [
        9682,
        9689
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x74A"
    },
    "1727": {
      "fn": "EnumerableSet.values",
      "jump": "i",
      "offset": [
        9682,
        9701
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1728": {
      "fn": "EnumerableSet.values",
      "offset": [
        9682,
        9701
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1729": {
      "fn": "EnumerableSet.values",
      "offset": [
        9657,
        9701
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "1730": {
      "fn": "EnumerableSet.values",
      "offset": [
        9566,
        9823
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1731": {
      "op": "POP"
    },
    "1732": {
      "op": "POP"
    },
    "1733": {
      "op": "POP"
    },
    "1734": {
      "fn": "EnumerableSet.values",
      "jump": "o",
      "offset": [
        9566,
        9823
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1735": {
      "fn": "EnumerableSet.add",
      "offset": [
        7612,
        7762
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1736": {
      "fn": "EnumerableSet.add",
      "offset": [
        7682,
        7686
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1738": {
      "fn": "EnumerableSet.add",
      "offset": [
        7705,
        7755
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 21,
      "value": "0x6DC"
    },
    "1741": {
      "fn": "EnumerableSet.add",
      "offset": [
        7710,
        7713
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1748": {
      "op": "SHL"
    },
    "1749": {
      "op": "SUB"
    },
    "1750": {
      "fn": "EnumerableSet.add",
      "offset": [
        7730,
        7753
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1751": {
      "fn": "EnumerableSet.add",
      "offset": [
        7730,
        7753
      ],
      "op": "AND",
      "path": "9"
    },
    "1752": {
      "fn": "EnumerableSet.add",
      "offset": [
        7705,
        7709
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x7A6"
    },
    "1755": {
      "fn": "EnumerableSet.add",
      "jump": "i",
      "offset": [
        7705,
        7755
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1756": {
      "fn": "EnumerableSet.add",
      "offset": [
        7705,
        7755
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1757": {
      "fn": "EnumerableSet.add",
      "offset": [
        7698,
        7755
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1758": {
      "fn": "EnumerableSet.add",
      "offset": [
        7698,
        7755
      ],
      "op": "POP",
      "path": "9"
    },
    "1759": {
      "fn": "EnumerableSet.add",
      "offset": [
        7612,
        7762
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1760": {
      "fn": "EnumerableSet.add",
      "offset": [
        7612,
        7762
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1761": {
      "fn": "EnumerableSet.add",
      "offset": [
        7612,
        7762
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1762": {
      "fn": "EnumerableSet.add",
      "offset": [
        7612,
        7762
      ],
      "op": "POP",
      "path": "9"
    },
    "1763": {
      "fn": "EnumerableSet.add",
      "offset": [
        7612,
        7762
      ],
      "op": "POP",
      "path": "9"
    },
    "1764": {
      "fn": "EnumerableSet.add",
      "jump": "o",
      "offset": [
        7612,
        7762
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1765": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1766": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1768": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1769": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1774": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1776": {
      "op": "SHL"
    },
    "1777": {
      "op": "SUB"
    },
    "1778": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 22
    },
    "1779": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1780": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "1781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1785": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1787": {
      "op": "SHL"
    },
    "1788": {
      "op": "SUB"
    },
    "1789": {
      "op": "NOT"
    },
    "1790": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1791": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "1792": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1793": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "1794": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1795": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1796": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 23,
      "value": "0x40"
    },
    "1798": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1799": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1800": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1801": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1802": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "1803": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1804": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1805": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1806": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1839": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1840": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1841": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1842": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "1843": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "1844": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1845": {
      "fn": "EnumerableSet.remove",
      "offset": [
        7930,
        8086
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1846": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8003,
        8007
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1848": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8026,
        8079
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 24,
      "value": "0x6DC"
    },
    "1851": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8034,
        8037
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1856": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1858": {
      "op": "SHL"
    },
    "1859": {
      "op": "SUB"
    },
    "1860": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8054,
        8077
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1861": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8054,
        8077
      ],
      "op": "AND",
      "path": "9"
    },
    "1862": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8026,
        8033
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x7F5"
    },
    "1865": {
      "fn": "EnumerableSet.remove",
      "jump": "i",
      "offset": [
        8026,
        8079
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1866": {
      "fn": "EnumerableSet._values",
      "offset": [
        5053,
        5162
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1867": {
      "fn": "EnumerableSet._values",
      "offset": [
        5109,
        5125
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x60"
    },
    "1869": {
      "fn": "EnumerableSet._values",
      "offset": [
        5144,
        5147
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 25
    },
    "1870": {
      "fn": "EnumerableSet._values",
      "offset": [
        5144,
        5155
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1872": {
      "fn": "EnumerableSet._values",
      "offset": [
        5144,
        5155
      ],
      "op": "ADD",
      "path": "9"
    },
    "1873": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1874": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1875": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1876": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1878": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "MUL",
      "path": "9"
    },
    "1879": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1881": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "ADD",
      "path": "9"
    },
    "1882": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1884": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1885": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1886": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1887": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "ADD",
      "path": "9"
    },
    "1888": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1890": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1891": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1892": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1893": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1894": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1895": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1896": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1897": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1898": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1900": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "ADD",
      "path": "9"
    },
    "1901": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1902": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1903": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1904": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1905": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1906": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x79A"
    },
    "1909": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1910": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1912": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "MUL",
      "path": "9"
    },
    "1913": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1914": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "ADD",
      "path": "9"
    },
    "1915": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1916": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1917": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1919": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1920": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1922": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1924": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1925": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1926": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1927": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1928": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1929": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1930": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1931": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1933": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "ADD",
      "path": "9"
    },
    "1934": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1935": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1937": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "ADD",
      "path": "9"
    },
    "1938": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1939": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1940": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1941": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "GT",
      "path": "9"
    },
    "1942": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x786"
    },
    "1945": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1946": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1947": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "POP",
      "path": "9"
    },
    "1948": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "POP",
      "path": "9"
    },
    "1949": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "POP",
      "path": "9"
    },
    "1950": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "POP",
      "path": "9"
    },
    "1951": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "POP",
      "path": "9"
    },
    "1952": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1953": {
      "fn": "EnumerableSet._values",
      "offset": [
        5137,
        5155
      ],
      "op": "POP",
      "path": "9"
    },
    "1954": {
      "fn": "EnumerableSet._values",
      "offset": [
        5053,
        5162
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1955": {
      "fn": "EnumerableSet._values",
      "offset": [
        5053,
        5162
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1956": {
      "fn": "EnumerableSet._values",
      "offset": [
        5053,
        5162
      ],
      "op": "POP",
      "path": "9"
    },
    "1957": {
      "fn": "EnumerableSet._values",
      "jump": "o",
      "offset": [
        5053,
        5162
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1958": {
      "fn": "EnumerableSet._add",
      "offset": [
        1697,
        2101
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1959": {
      "fn": "EnumerableSet._add",
      "offset": [
        1760,
        1764
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1961": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3834,
        3853
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 26
    },
    "1962": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3834,
        3853
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1963": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3834,
        3853
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1964": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3834,
        3846
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1966": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3834,
        3846
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1967": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3834,
        3846
      ],
      "op": "ADD",
      "path": "9"
    },
    "1968": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3834,
        3853
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1970": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3834,
        3853
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1971": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3834,
        3853
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1973": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3834,
        3853
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1974": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3834,
        3853
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1975": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3834,
        3853
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1976": {
      "fn": "EnumerableSet._add",
      "offset": [
        1776,
        2095
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x7ED"
    },
    "1979": {
      "fn": "EnumerableSet._add",
      "offset": [
        1776,
        2095
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1980": {
      "op": "POP"
    },
    "1981": {
      "fn": "EnumerableSet._add",
      "offset": [
        1818,
        1841
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 27
    },
    "1982": {
      "fn": "EnumerableSet._add",
      "offset": [
        1818,
        1841
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1983": {
      "fn": "EnumerableSet._add",
      "offset": [
        1818,
        1841
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1985": {
      "fn": "EnumerableSet._add",
      "offset": [
        1818,
        1841
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1986": {
      "fn": "EnumerableSet._add",
      "offset": [
        1818,
        1841
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1987": {
      "fn": "EnumerableSet._add",
      "offset": [
        1818,
        1841
      ],
      "op": "ADD",
      "path": "9"
    },
    "1988": {
      "fn": "EnumerableSet._add",
      "offset": [
        1818,
        1841
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1989": {
      "fn": "EnumerableSet._add",
      "offset": [
        1818,
        1841
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "1990": {
      "fn": "EnumerableSet._add",
      "offset": [
        1818,
        1829
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1992": {
      "fn": "EnumerableSet._add",
      "offset": [
        1818,
        1841
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1993": {
      "fn": "EnumerableSet._add",
      "offset": [
        1818,
        1841
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1994": {
      "fn": "EnumerableSet._add",
      "offset": [
        1818,
        1841
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1995": {
      "fn": "EnumerableSet._add",
      "offset": [
        1818,
        1841
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1997": {
      "fn": "EnumerableSet._add",
      "offset": [
        1818,
        1841
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1998": {
      "fn": "EnumerableSet._add",
      "offset": [
        1818,
        1841
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1999": {
      "fn": "EnumerableSet._add",
      "offset": [
        1818,
        1841
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "2000": {
      "fn": "EnumerableSet._add",
      "offset": [
        1818,
        1841
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2001": {
      "fn": "EnumerableSet._add",
      "offset": [
        1818,
        1841
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "2002": {
      "fn": "EnumerableSet._add",
      "offset": [
        1818,
        1841
      ],
      "op": "ADD",
      "path": "9"
    },
    "2003": {
      "fn": "EnumerableSet._add",
      "offset": [
        1818,
        1841
      ],
      "op": "DUP5",
      "path": "9"
    },
    "2004": {
      "fn": "EnumerableSet._add",
      "offset": [
        1818,
        1841
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2005": {
      "fn": "EnumerableSet._add",
      "offset": [
        1818,
        1841
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "2006": {
      "fn": "EnumerableSet._add",
      "offset": [
        1998,
        2016
      ],
      "op": "DUP5",
      "path": "9",
      "statement": 28
    },
    "2007": {
      "fn": "EnumerableSet._add",
      "offset": [
        1998,
        2016
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2008": {
      "fn": "EnumerableSet._add",
      "offset": [
        1976,
        1995
      ],
      "op": "DUP5",
      "path": "9"
    },
    "2009": {
      "fn": "EnumerableSet._add",
      "offset": [
        1976,
        1995
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2010": {
      "fn": "EnumerableSet._add",
      "offset": [
        1976,
        1995
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2011": {
      "fn": "EnumerableSet._add",
      "offset": [
        1976,
        1988
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2012": {
      "fn": "EnumerableSet._add",
      "offset": [
        1976,
        1988
      ],
      "op": "DUP7",
      "path": "9"
    },
    "2013": {
      "fn": "EnumerableSet._add",
      "offset": [
        1976,
        1988
      ],
      "op": "ADD",
      "path": "9"
    },
    "2014": {
      "fn": "EnumerableSet._add",
      "offset": [
        1976,
        1995
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2015": {
      "fn": "EnumerableSet._add",
      "offset": [
        1976,
        1995
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "2016": {
      "fn": "EnumerableSet._add",
      "offset": [
        1976,
        1995
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2017": {
      "fn": "EnumerableSet._add",
      "offset": [
        1976,
        1995
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2019": {
      "fn": "EnumerableSet._add",
      "offset": [
        1976,
        1995
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2020": {
      "fn": "EnumerableSet._add",
      "offset": [
        1976,
        1995
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "2021": {
      "fn": "EnumerableSet._add",
      "offset": [
        1976,
        2016
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2022": {
      "fn": "EnumerableSet._add",
      "offset": [
        1976,
        2016
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2023": {
      "fn": "EnumerableSet._add",
      "offset": [
        1976,
        2016
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2024": {
      "fn": "EnumerableSet._add",
      "offset": [
        1976,
        2016
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "2025": {
      "fn": "EnumerableSet._add",
      "offset": [
        2030,
        2041
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 29,
      "value": "0x6DF"
    },
    "2028": {
      "fn": "EnumerableSet._add",
      "offset": [
        2030,
        2041
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2029": {
      "fn": "EnumerableSet._add",
      "offset": [
        1776,
        2095
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2030": {
      "op": "POP"
    },
    "2031": {
      "fn": "EnumerableSet._add",
      "offset": [
        2079,
        2084
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 30,
      "value": "0x0"
    },
    "2033": {
      "fn": "EnumerableSet._add",
      "offset": [
        2072,
        2084
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x6DF"
    },
    "2036": {
      "fn": "EnumerableSet._add",
      "offset": [
        2072,
        2084
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2037": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2269,
        3657
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2038": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2335,
        2339
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2040": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2472,
        2491
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2041": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2472,
        2491
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2042": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2472,
        2491
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2043": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2472,
        2484
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2045": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2472,
        2484
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2046": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2472,
        2484
      ],
      "op": "ADD",
      "path": "9"
    },
    "2047": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2472,
        2491
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2049": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2472,
        2491
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2050": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2472,
        2491
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2052": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2472,
        2491
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2053": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2472,
        2491
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "2054": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2472,
        2491
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2055": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2506,
        2521
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2056": {
      "branch": 38,
      "fn": "EnumerableSet._remove",
      "offset": [
        2506,
        2521
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2057": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2502,
        3651
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x8DE"
    },
    "2060": {
      "branch": 38,
      "fn": "EnumerableSet._remove",
      "offset": [
        2502,
        3651
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2061": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2875,
        2896
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2063": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2899,
        2913
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x819"
    },
    "2066": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2912,
        2913
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2068": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2899,
        2909
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2069": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2899,
        2913
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA04"
    },
    "2072": {
      "fn": "EnumerableSet._remove",
      "jump": "i",
      "offset": [
        2899,
        2913
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2073": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2899,
        2913
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2074": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2947,
        2965
      ],
      "op": "DUP6",
      "path": "9"
    },
    "2075": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2947,
        2965
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2076": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2875,
        2913
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2077": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2875,
        2913
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2078": {
      "op": "POP"
    },
    "2079": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2927,
        2944
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2081": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2927,
        2944
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2082": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2947,
        2969
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x82D"
    },
    "2085": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2947,
        2969
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2086": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2968,
        2969
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2088": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2968,
        2969
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2089": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2947,
        2969
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA04"
    },
    "2092": {
      "fn": "EnumerableSet._remove",
      "jump": "i",
      "offset": [
        2947,
        2969
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2093": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2947,
        2969
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2094": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2927,
        2969
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2095": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2927,
        2969
      ],
      "op": "POP",
      "path": "9"
    },
    "2096": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3001,
        3014
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2097": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2988,
        2997
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2098": {
      "branch": 39,
      "fn": "EnumerableSet._remove",
      "offset": [
        2988,
        3014
      ],
      "op": "EQ",
      "path": "9"
    },
    "2099": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2984,
        3382
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x892"
    },
    "2102": {
      "branch": 39,
      "fn": "EnumerableSet._remove",
      "offset": [
        2984,
        3382
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2103": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3034,
        3051
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2105": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3054,
        3057
      ],
      "op": "DUP7",
      "path": "9"
    },
    "2106": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3054,
        3065
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2108": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3054,
        3065
      ],
      "op": "ADD",
      "path": "9"
    },
    "2109": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3066,
        3075
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2110": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3054,
        3076
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2111": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3054,
        3076
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2112": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3054,
        3076
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2113": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3054,
        3076
      ],
      "op": "LT",
      "path": "9"
    },
    "2114": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3054,
        3076
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x84D"
    },
    "2117": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3054,
        3076
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2118": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3054,
        3076
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x84D"
    },
    "2121": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3054,
        3076
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA29"
    },
    "2124": {
      "fn": "EnumerableSet._remove",
      "jump": "i",
      "offset": [
        3054,
        3076
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2125": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3054,
        3076
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2126": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3054,
        3076
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2127": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3054,
        3076
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2129": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3054,
        3076
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2130": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3054,
        3076
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2132": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3054,
        3076
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2134": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3054,
        3076
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "2135": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3054,
        3076
      ],
      "op": "ADD",
      "path": "9"
    },
    "2136": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3054,
        3076
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2137": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3034,
        3076
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2138": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3034,
        3076
      ],
      "op": "POP",
      "path": "9"
    },
    "2139": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3205,
        3214
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 31
    },
    "2140": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3176,
        3179
      ],
      "op": "DUP8",
      "path": "9"
    },
    "2141": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3176,
        3187
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2143": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3176,
        3187
      ],
      "op": "ADD",
      "path": "9"
    },
    "2144": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3188,
        3201
      ],
      "op": "DUP5",
      "path": "9"
    },
    "2145": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3176,
        3202
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2146": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3176,
        3202
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2147": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3176,
        3202
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2148": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3176,
        3202
      ],
      "op": "LT",
      "path": "9"
    },
    "2149": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3176,
        3202
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x870"
    },
    "2152": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3176,
        3202
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2153": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3176,
        3202
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x870"
    },
    "2156": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3176,
        3202
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA29"
    },
    "2159": {
      "fn": "EnumerableSet._remove",
      "jump": "i",
      "offset": [
        3176,
        3202
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2160": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3176,
        3202
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2161": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3176,
        3202
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2163": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3176,
        3202
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2164": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3176,
        3202
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2165": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3176,
        3202
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2166": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3176,
        3202
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2168": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3176,
        3202
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2169": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3176,
        3202
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2170": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3176,
        3202
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "2171": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3176,
        3202
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2172": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3176,
        3202
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2173": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3176,
        3202
      ],
      "op": "ADD",
      "path": "9"
    },
    "2174": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3176,
        3214
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2175": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3176,
        3214
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2176": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3176,
        3214
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2177": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3176,
        3214
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "2178": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3288,
        3311
      ],
      "op": "SWAP2",
      "path": "9",
      "statement": 32
    },
    "2179": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3288,
        3311
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2180": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3288,
        3311
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2181": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3288,
        3300
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2183": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3288,
        3300
      ],
      "op": "DUP9",
      "path": "9"
    },
    "2184": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3288,
        3300
      ],
      "op": "ADD",
      "path": "9"
    },
    "2185": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3288,
        3311
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2186": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3288,
        3311
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2187": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3288,
        3311
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2189": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3288,
        3311
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2190": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3288,
        3311
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "2191": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3288,
        3324
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2192": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3288,
        3324
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2193": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3288,
        3324
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "2194": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2984,
        3382
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2195": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3460,
        3477
      ],
      "op": "DUP6",
      "path": "9",
      "statement": 33
    },
    "2196": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3460,
        3477
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2197": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3460,
        3463
      ],
      "op": "DUP7",
      "path": "9"
    },
    "2198": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3460,
        3463
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2199": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3460,
        3477
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2200": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3460,
        3477
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x8A3"
    },
    "2203": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3460,
        3477
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2204": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3460,
        3477
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x8A3"
    },
    "2207": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3460,
        3477
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA3F"
    },
    "2210": {
      "fn": "EnumerableSet._remove",
      "jump": "i",
      "offset": [
        3460,
        3477
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2211": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3460,
        3477
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2212": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3460,
        3477
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2214": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3460,
        3477
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2215": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3460,
        3477
      ],
      "op": "SUB",
      "path": "9"
    },
    "2216": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3460,
        3477
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2217": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3460,
        3477
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2218": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3460,
        3477
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2219": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3460,
        3477
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2221": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3460,
        3477
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2222": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3460,
        3477
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2224": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3460,
        3477
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2226": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3460,
        3477
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "2227": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3460,
        3477
      ],
      "op": "ADD",
      "path": "9"
    },
    "2228": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3460,
        3477
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2230": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3460,
        3477
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2231": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3460,
        3477
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "2232": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3460,
        3477
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2233": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3460,
        3477
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "2234": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3552,
        3555
      ],
      "op": "DUP6",
      "path": "9",
      "statement": 34
    },
    "2235": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3552,
        3564
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2237": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3552,
        3564
      ],
      "op": "ADD",
      "path": "9"
    },
    "2238": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3552,
        3571
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2240": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3565,
        3570
      ],
      "op": "DUP7",
      "path": "9"
    },
    "2241": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3552,
        3571
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2242": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3552,
        3571
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2243": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3552,
        3571
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2245": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3552,
        3571
      ],
      "op": "ADD",
      "path": "9"
    },
    "2246": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3552,
        3571
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2247": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3552,
        3571
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2248": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3552,
        3571
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2249": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3552,
        3571
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2251": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3552,
        3571
      ],
      "op": "ADD",
      "path": "9"
    },
    "2252": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3552,
        3571
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2254": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3552,
        3571
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "2255": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3545,
        3571
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2257": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3545,
        3571
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2258": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3545,
        3571
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "2259": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3593,
        3597
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 35,
      "value": "0x1"
    },
    "2261": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3586,
        3597
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "2262": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3586,
        3597
      ],
      "op": "POP",
      "path": "9"
    },
    "2263": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3586,
        3597
      ],
      "op": "POP",
      "path": "9"
    },
    "2264": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3586,
        3597
      ],
      "op": "POP",
      "path": "9"
    },
    "2265": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3586,
        3597
      ],
      "op": "POP",
      "path": "9"
    },
    "2266": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3586,
        3597
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x6DF"
    },
    "2269": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3586,
        3597
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2270": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2502,
        3651
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2271": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3635,
        3640
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 36,
      "value": "0x0"
    },
    "2273": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3628,
        3640
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2274": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3628,
        3640
      ],
      "op": "POP",
      "path": "9"
    },
    "2275": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3628,
        3640
      ],
      "op": "POP",
      "path": "9"
    },
    "2276": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3628,
        3640
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x6DF"
    },
    "2279": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3628,
        3640
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2280": {
      "op": "JUMPDEST"
    },
    "2281": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2283": {
      "op": "DUP1"
    },
    "2284": {
      "op": "DUP3"
    },
    "2285": {
      "op": "MSTORE"
    },
    "2286": {
      "op": "DUP3"
    },
    "2287": {
      "op": "MLOAD"
    },
    "2288": {
      "op": "DUP3"
    },
    "2289": {
      "op": "DUP3"
    },
    "2290": {
      "op": "ADD"
    },
    "2291": {
      "op": "DUP2"
    },
    "2292": {
      "op": "SWAP1"
    },
    "2293": {
      "op": "MSTORE"
    },
    "2294": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2296": {
      "op": "SWAP2"
    },
    "2297": {
      "op": "SWAP1"
    },
    "2298": {
      "op": "DUP5"
    },
    "2299": {
      "op": "DUP3"
    },
    "2300": {
      "op": "ADD"
    },
    "2301": {
      "op": "SWAP1"
    },
    "2302": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2304": {
      "op": "DUP6"
    },
    "2305": {
      "op": "ADD"
    },
    "2306": {
      "op": "SWAP1"
    },
    "2307": {
      "op": "DUP5"
    },
    "2308": {
      "op": "JUMPDEST"
    },
    "2309": {
      "op": "DUP2"
    },
    "2310": {
      "op": "DUP2"
    },
    "2311": {
      "op": "LT"
    },
    "2312": {
      "op": "ISZERO"
    },
    "2313": {
      "op": "PUSH2",
      "value": "0x929"
    },
    "2316": {
      "op": "JUMPI"
    },
    "2317": {
      "op": "DUP4"
    },
    "2318": {
      "op": "MLOAD"
    },
    "2319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2323": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2325": {
      "op": "SHL"
    },
    "2326": {
      "op": "SUB"
    },
    "2327": {
      "op": "AND"
    },
    "2328": {
      "op": "DUP4"
    },
    "2329": {
      "op": "MSTORE"
    },
    "2330": {
      "op": "SWAP3"
    },
    "2331": {
      "op": "DUP5"
    },
    "2332": {
      "op": "ADD"
    },
    "2333": {
      "op": "SWAP3"
    },
    "2334": {
      "op": "SWAP2"
    },
    "2335": {
      "op": "DUP5"
    },
    "2336": {
      "op": "ADD"
    },
    "2337": {
      "op": "SWAP2"
    },
    "2338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2340": {
      "op": "ADD"
    },
    "2341": {
      "op": "PUSH2",
      "value": "0x904"
    },
    "2344": {
      "op": "JUMP"
    },
    "2345": {
      "op": "JUMPDEST"
    },
    "2346": {
      "op": "POP"
    },
    "2347": {
      "op": "SWAP1"
    },
    "2348": {
      "op": "SWAP7"
    },
    "2349": {
      "op": "SWAP6"
    },
    "2350": {
      "op": "POP"
    },
    "2351": {
      "op": "POP"
    },
    "2352": {
      "op": "POP"
    },
    "2353": {
      "op": "POP"
    },
    "2354": {
      "op": "POP"
    },
    "2355": {
      "op": "POP"
    },
    "2356": {
      "jump": "o",
      "op": "JUMP"
    },
    "2357": {
      "op": "JUMPDEST"
    },
    "2358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2362": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2364": {
      "op": "SHL"
    },
    "2365": {
      "op": "SUB"
    },
    "2366": {
      "op": "DUP2"
    },
    "2367": {
      "op": "AND"
    },
    "2368": {
      "op": "DUP2"
    },
    "2369": {
      "op": "EQ"
    },
    "2370": {
      "op": "PUSH2",
      "value": "0x6B0"
    },
    "2373": {
      "op": "JUMPI"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2376": {
      "op": "DUP1"
    },
    "2377": {
      "op": "REVERT"
    },
    "2378": {
      "op": "JUMPDEST"
    },
    "2379": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2381": {
      "op": "DUP1"
    },
    "2382": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2384": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2386": {
      "op": "DUP5"
    },
    "2387": {
      "op": "DUP7"
    },
    "2388": {
      "op": "SUB"
    },
    "2389": {
      "op": "SLT"
    },
    "2390": {
      "op": "ISZERO"
    },
    "2391": {
      "op": "PUSH2",
      "value": "0x95F"
    },
    "2394": {
      "op": "JUMPI"
    },
    "2395": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2397": {
      "op": "DUP1"
    },
    "2398": {
      "op": "REVERT"
    },
    "2399": {
      "op": "JUMPDEST"
    },
    "2400": {
      "op": "DUP4"
    },
    "2401": {
      "op": "CALLDATALOAD"
    },
    "2402": {
      "op": "PUSH2",
      "value": "0x96A"
    },
    "2405": {
      "op": "DUP2"
    },
    "2406": {
      "op": "PUSH2",
      "value": "0x935"
    },
    "2409": {
      "jump": "i",
      "op": "JUMP"
    },
    "2410": {
      "op": "JUMPDEST"
    },
    "2411": {
      "op": "SWAP3"
    },
    "2412": {
      "op": "POP"
    },
    "2413": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2415": {
      "op": "DUP5"
    },
    "2416": {
      "op": "ADD"
    },
    "2417": {
      "op": "CALLDATALOAD"
    },
    "2418": {
      "op": "PUSH2",
      "value": "0x97A"
    },
    "2421": {
      "op": "DUP2"
    },
    "2422": {
      "op": "PUSH2",
      "value": "0x935"
    },
    "2425": {
      "jump": "i",
      "op": "JUMP"
    },
    "2426": {
      "op": "JUMPDEST"
    },
    "2427": {
      "op": "SWAP2"
    },
    "2428": {
      "op": "POP"
    },
    "2429": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2431": {
      "op": "DUP5"
    },
    "2432": {
      "op": "ADD"
    },
    "2433": {
      "op": "CALLDATALOAD"
    },
    "2434": {
      "op": "PUSH2",
      "value": "0x98A"
    },
    "2437": {
      "op": "DUP2"
    },
    "2438": {
      "op": "PUSH2",
      "value": "0x935"
    },
    "2441": {
      "jump": "i",
      "op": "JUMP"
    },
    "2442": {
      "op": "JUMPDEST"
    },
    "2443": {
      "op": "DUP1"
    },
    "2444": {
      "op": "SWAP2"
    },
    "2445": {
      "op": "POP"
    },
    "2446": {
      "op": "POP"
    },
    "2447": {
      "op": "SWAP3"
    },
    "2448": {
      "op": "POP"
    },
    "2449": {
      "op": "SWAP3"
    },
    "2450": {
      "op": "POP"
    },
    "2451": {
      "op": "SWAP3"
    },
    "2452": {
      "jump": "o",
      "op": "JUMP"
    },
    "2453": {
      "op": "JUMPDEST"
    },
    "2454": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2456": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2458": {
      "op": "DUP3"
    },
    "2459": {
      "op": "DUP5"
    },
    "2460": {
      "op": "SUB"
    },
    "2461": {
      "op": "SLT"
    },
    "2462": {
      "op": "ISZERO"
    },
    "2463": {
      "op": "PUSH2",
      "value": "0x9A7"
    },
    "2466": {
      "op": "JUMPI"
    },
    "2467": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2469": {
      "op": "DUP1"
    },
    "2470": {
      "op": "REVERT"
    },
    "2471": {
      "op": "JUMPDEST"
    },
    "2472": {
      "op": "DUP2"
    },
    "2473": {
      "op": "CALLDATALOAD"
    },
    "2474": {
      "op": "PUSH2",
      "value": "0x6C0"
    },
    "2477": {
      "op": "DUP2"
    },
    "2478": {
      "op": "PUSH2",
      "value": "0x935"
    },
    "2481": {
      "jump": "i",
      "op": "JUMP"
    },
    "2482": {
      "op": "JUMPDEST"
    },
    "2483": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2485": {
      "op": "DUP1"
    },
    "2486": {
      "op": "DUP3"
    },
    "2487": {
      "op": "MSTORE"
    },
    "2488": {
      "op": "DUP2"
    },
    "2489": {
      "op": "DUP2"
    },
    "2490": {
      "op": "ADD"
    },
    "2491": {
      "op": "MSTORE"
    },
    "2492": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "2525": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2527": {
      "op": "DUP3"
    },
    "2528": {
      "op": "ADD"
    },
    "2529": {
      "op": "MSTORE"
    },
    "2530": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2532": {
      "op": "ADD"
    },
    "2533": {
      "op": "SWAP1"
    },
    "2534": {
      "jump": "o",
      "op": "JUMP"
    },
    "2535": {
      "op": "JUMPDEST"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2538": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2540": {
      "op": "DUP3"
    },
    "2541": {
      "op": "DUP5"
    },
    "2542": {
      "op": "SUB"
    },
    "2543": {
      "op": "SLT"
    },
    "2544": {
      "op": "ISZERO"
    },
    "2545": {
      "op": "PUSH2",
      "value": "0x9F9"
    },
    "2548": {
      "op": "JUMPI"
    },
    "2549": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2551": {
      "op": "DUP1"
    },
    "2552": {
      "op": "REVERT"
    },
    "2553": {
      "op": "JUMPDEST"
    },
    "2554": {
      "op": "DUP2"
    },
    "2555": {
      "op": "MLOAD"
    },
    "2556": {
      "op": "PUSH2",
      "value": "0x6C0"
    },
    "2559": {
      "op": "DUP2"
    },
    "2560": {
      "op": "PUSH2",
      "value": "0x935"
    },
    "2563": {
      "jump": "i",
      "op": "JUMP"
    },
    "2564": {
      "op": "JUMPDEST"
    },
    "2565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2567": {
      "op": "DUP3"
    },
    "2568": {
      "op": "DUP3"
    },
    "2569": {
      "op": "LT"
    },
    "2570": {
      "op": "ISZERO"
    },
    "2571": {
      "op": "PUSH2",
      "value": "0xA24"
    },
    "2574": {
      "op": "JUMPI"
    },
    "2575": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2580": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2582": {
      "op": "SHL"
    },
    "2583": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2585": {
      "op": "MSTORE"
    },
    "2586": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2588": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2590": {
      "op": "MSTORE"
    },
    "2591": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2593": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2595": {
      "op": "REVERT"
    },
    "2596": {
      "op": "JUMPDEST"
    },
    "2597": {
      "op": "POP"
    },
    "2598": {
      "op": "SUB"
    },
    "2599": {
      "op": "SWAP1"
    },
    "2600": {
      "jump": "o",
      "op": "JUMP"
    },
    "2601": {
      "op": "JUMPDEST"
    },
    "2602": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2607": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2609": {
      "op": "SHL"
    },
    "2610": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2612": {
      "op": "MSTORE"
    },
    "2613": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2617": {
      "op": "MSTORE"
    },
    "2618": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2620": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2622": {
      "op": "REVERT"
    },
    "2623": {
      "op": "JUMPDEST"
    },
    "2624": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2629": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2631": {
      "op": "SHL"
    },
    "2632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2634": {
      "op": "MSTORE"
    },
    "2635": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "2637": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2639": {
      "op": "MSTORE"
    },
    "2640": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2642": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2644": {
      "op": "REVERT"
    }
  },
  "sha1": "469a2ba05008a7729ad2486f9ce2062df3a9e8c4",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.12;\nimport \"./interfaces/IVotingEscrow.sol\";\nimport \"./interfaces/IGaugeFactory.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\n\n/** @title Voter\n    @notice veYFI holders will vote for gauge allocation to vault tokens.\n */\n\ncontract Registry is Ownable {\n    using EnumerableSet for EnumerableSet.AddressSet;\n    address public veToken; // the ve token that governs these contracts\n    address public yfi; // immutable // reward token\n    address public veYfiRewardPool; // immutable\n    address public gaugefactory; // immutable\n\n    EnumerableSet.AddressSet private vaults;\n    mapping(address => address) public gauges; // vault => gauge\n    mapping(address => address) public vaultForGauge; // gauge => vault\n    mapping(address => bool) public isGauge;\n\n    event VaultAdded(address vault);\n    event VaultRemoved(address vault);\n    event UpdatedVeToken(address ve);\n\n    constructor(\n        address _ve,\n        address _yfi,\n        address _gaugefactory,\n        address _veYfiRewardPool\n    ) {\n        veToken = _ve;\n        yfi = _yfi;\n        gaugefactory = _gaugefactory;\n        veYfiRewardPool = _veYfiRewardPool;\n    }\n\n    function setVe(address _ve) external onlyOwner {\n        veToken = _ve;\n        emit UpdatedVeToken(_ve);\n    }\n\n    /** \n    @return The list of vaults with gauge that are possible to vote for.\n    */\n    function getVaults() external view returns (address[] memory) {\n        return vaults.values();\n    }\n\n    /** \n    @notice Add a vault to the list of vaults that recieves rewards.\n    @param _vault vault address\n    @param _owner owner.\n    @param _rewardManager address in charge of managing additional rewards\n    */\n    function addVaultToRewards(\n        address _vault,\n        address _owner,\n        address _rewardManager\n    ) external onlyOwner returns (address) {\n        require(gauges[_vault] == address(0x0), \"exist\");\n\n        address _gauge = IGaugeFactory(gaugefactory).createGauge(\n            _vault,\n            yfi,\n            _owner,\n            _rewardManager,\n            veToken,\n            veYfiRewardPool\n        );\n        gauges[_vault] = _gauge;\n        vaultForGauge[_gauge] = _vault;\n        isGauge[_gauge] = true;\n        vaults.add(_vault);\n        emit VaultAdded(_vault);\n        return _gauge;\n    }\n\n    /** \n    @notice Remove a vault from the list of vaults recieving rewards.\n    @param _vault vault address\n    */\n    function removeVaultFromRewards(address _vault) external onlyOwner {\n        require(gauges[_vault] != address(0x0), \"!exist\");\n        address gauge = gauges[_vault];\n\n        vaults.remove(_vault);\n\n        gauges[_vault] = address(0x0);\n        vaultForGauge[gauge] = address(0x0);\n        isGauge[gauge] = false;\n        emit VaultRemoved(_vault);\n    }\n}\n",
  "sourceMap": "355:2547:14:-:0;;;1009:258;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:7;921:18:0;:32::i;:::-;1145:7:14;:13;;-1:-1:-1;;;;;1145:13:14;;;-1:-1:-1;;;;;;1145:13:14;;;;;;;1168:3;:10;;;;;;;;;;;;;;;1188:12;:28;;;;;;;;;;;;;;;1226:15;:34;;;;;;;;;;;355:2547;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:177:25:-;93:13;;-1:-1:-1;;;;;135:31:25;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:464::-;293:6;301;309;317;370:3;358:9;349:7;345:23;341:33;338:53;;;387:1;384;377:12;338:53;410:40;440:9;410:40;:::i;:::-;400:50;;469:49;514:2;503:9;499:18;469:49;:::i;:::-;459:59;;537:49;582:2;571:9;567:18;537:49;:::i;:::-;527:59;;605:49;650:2;639:9;635:18;605:49;:::i;:::-;595:59;;196:464;;;;;;;:::o;:::-;355:2547:14;;;;;;",
  "sourcePath": "contracts/Registry.sol",
  "type": "contract"
}