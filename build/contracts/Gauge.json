{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "reward",
          "type": "address"
        }
      ],
      "name": "AddedExtraReward",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "rewards",
          "type": "address[]"
        }
      ],
      "name": "DeletedExtraRewards",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardRate",
          "type": "uint256"
        }
      ],
      "name": "DurationUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "stakingToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "rewardToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "rewardManager",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "ve",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "veYfiRewardPool",
          "type": "address"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "reward",
          "type": "address"
        }
      ],
      "name": "RemovedExtraReward",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        }
      ],
      "name": "RewardPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "currentRewards",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lastUpdateTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "periodFinish",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "historicalRewards",
          "type": "uint256"
        }
      ],
      "name": "RewardsAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RewardsQueued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Staked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Sweep",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "rewardManager",
          "type": "address"
        }
      ],
      "name": "UpdatedRewardManager",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardPerTokenStored",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lastUpdateTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewards",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "userRewardPerTokenPaid",
          "type": "uint256"
        }
      ],
      "name": "UpdatedRewards",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "ve",
          "type": "address"
        }
      ],
      "name": "UpdatedVeToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "GRACE_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_LOCK",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PRECISON_FACTOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_extraReward",
          "type": "address"
        }
      ],
      "name": "addExtraReward",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "boostedBalanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "clearExtraRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_for",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositFor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "duration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "earned",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "extraRewards",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "extraRewardsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReward",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_lock",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_claimExtras",
          "type": "bool"
        }
      ],
      "name": "getReward",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_lock",
          "type": "bool"
        }
      ],
      "name": "getReward",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_claimExtras",
          "type": "bool"
        }
      ],
      "name": "getRewardFor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "historicalRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rewardToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rewardManager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_ve",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_veYfiRewardPool",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastTimeRewardApplicable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastUpdateTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "lockingRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "periodFinish",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "queueNewRewards",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "queuedPenalty",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "queuedRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_extraReward",
          "type": "address"
        }
      ],
      "name": "removeExtraReward",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardPerToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardPerTokenStored",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "rewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newDuration",
          "type": "uint256"
        }
      ],
      "name": "setDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rewardManager",
          "type": "address"
        }
      ],
      "name": "setRewardManager",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ve",
          "type": "address"
        }
      ],
      "name": "setVe",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "sweep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transferQueuedPenalty",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userRewardPerTokenPaid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "veToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "veYfiRewardPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_claim",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_lock",
          "type": "bool"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_claim",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_lock",
          "type": "bool"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_claim",
          "type": "bool"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/demo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "1": "/Users/demo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/proxy/utils/Initializable.sol",
    "10": "contracts/Gauge.sol",
    "13": "contracts/interfaces/IBaseGauge.sol",
    "14": "contracts/interfaces/IExtraReward.sol",
    "15": "contracts/interfaces/IGauge.sol",
    "16": "contracts/interfaces/IVeYfiRewardPool.sol",
    "17": "contracts/interfaces/IVotingEscrow.sol",
    "3": "/Users/demo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "5": "/Users/demo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "6": "/Users/demo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol",
    "7": "/Users/demo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "8": "/Users/demo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/Math.sol",
    "9": "contracts/BaseGauge.sol"
  },
  "ast": {
    "absolutePath": "contracts/Gauge.sol",
    "exportedSymbols": {
      "Address": [
        15531
      ],
      "BaseGauge": [
        3737
      ],
      "Context": [
        15651
      ],
      "Gauge": [
        1317
      ],
      "IBaseGauge": [
        15629
      ],
      "IERC20": [
        2943
      ],
      "IExtraReward": [
        3772
      ],
      "IGauge": [
        3812
      ],
      "IVeYfiRewardPool": [
        3822
      ],
      "IVotingEscrow": [
        2074
      ],
      "Initializable": [
        15605
      ],
      "Math": [
        3255
      ],
      "Ownable": [
        3927
      ],
      "SafeERC20": [
        3167
      ]
    },
    "id": 1318,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:10"
      },
      {
        "absolutePath": "contracts/interfaces/IExtraReward.sol",
        "file": "./interfaces/IExtraReward.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1318,
        "sourceUnit": 3773,
        "src": "57:39:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/demo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1318,
        "sourceUnit": 2944,
        "src": "97:56:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/demo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1318,
        "sourceUnit": 3168,
        "src": "154:65:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/demo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/Math.sol",
        "file": "@openzeppelin/contracts/utils/math/Math.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1318,
        "sourceUnit": 3256,
        "src": "220:53:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IGauge.sol",
        "file": "./interfaces/IGauge.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1318,
        "sourceUnit": 3813,
        "src": "274:33:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IVeYfiRewardPool.sol",
        "file": "./interfaces/IVeYfiRewardPool.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1318,
        "sourceUnit": 3823,
        "src": "308:43:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/BaseGauge.sol",
        "file": "./BaseGauge.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1318,
        "sourceUnit": 3738,
        "src": "352:25:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IVotingEscrow.sol",
        "file": "./interfaces/IVotingEscrow.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1318,
        "sourceUnit": 2075,
        "src": "379:40:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11,
              "name": "BaseGauge",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3737,
              "src": "723:9:10"
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "723:9:10"
          },
          {
            "baseName": {
              "id": 13,
              "name": "IGauge",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3812,
              "src": "734:6:10"
            },
            "id": 14,
            "nodeType": "InheritanceSpecifier",
            "src": "734:6:10"
          }
        ],
        "canonicalName": "Gauge",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 10,
          "nodeType": "StructuredDocumentation",
          "src": "421:282:10",
          "text": "@title  Gauge stake vault token get YFI rewards\n@notice Deposit your vault token (one gauge per vault).\nYFI are paid based on the amount of vault tokens, the veYFI balance and the duration of the lock.\n@dev this contract is used behind multiple delegate proxies."
        },
        "fullyImplemented": true,
        "id": 1317,
        "linearizedBaseContracts": [
          1317,
          3812,
          3737,
          15605,
          3927,
          15651,
          15629
        ],
        "name": "Gauge",
        "nameLocation": "714:5:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 18,
            "libraryName": {
              "id": 15,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3167,
              "src": "753:9:10"
            },
            "nodeType": "UsingForDirective",
            "src": "747:27:10",
            "typeName": {
              "id": 17,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 16,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2943,
                "src": "767:6:10"
              },
              "referencedDeclaration": 2943,
              "src": "767:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2943",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "72f702f3",
            "id": 21,
            "mutability": "mutable",
            "name": "stakingToken",
            "nameLocation": "794:12:10",
            "nodeType": "VariableDeclaration",
            "scope": 1317,
            "src": "780:26:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$2943",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 20,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 19,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2943,
                "src": "780:6:10"
              },
              "referencedDeclaration": 2943,
              "src": "780:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2943",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3b92eb23",
            "id": 23,
            "mutability": "mutable",
            "name": "veToken",
            "nameLocation": "850:7:10",
            "nodeType": "VariableDeclaration",
            "scope": 1317,
            "src": "835:22:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 22,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "835:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9e15977f",
            "id": 25,
            "mutability": "mutable",
            "name": "veYfiRewardPool",
            "nameLocation": "957:15:10",
            "nodeType": "VariableDeclaration",
            "scope": 1317,
            "src": "942:30:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 24,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "942:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "65a5d5f0",
            "id": 32,
            "mutability": "constant",
            "name": "MAX_LOCK",
            "nameLocation": "1057:8:10",
            "nodeType": "VariableDeclaration",
            "scope": 1317,
            "src": "1033:50:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 26,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1033:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_126144000_by_1",
                "typeString": "int_const 126144000"
              },
              "id": 31,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_1460_by_1",
                  "typeString": "int_const 1460"
                },
                "id": 29,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "34",
                  "id": 27,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1068:1:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_4_by_1",
                    "typeString": "int_const 4"
                  },
                  "value": "4"
                },
                "nodeType": "BinaryOperation",
                "operator": "*",
                "rightExpression": {
                  "hexValue": "333635",
                  "id": 28,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1072:3:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_365_by_1",
                    "typeString": "int_const 365"
                  },
                  "value": "365"
                },
                "src": "1068:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1460_by_1",
                  "typeString": "int_const 1460"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "3836343030",
                "id": 30,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1078:5:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_86400_by_1",
                  "typeString": "int_const 86400"
                },
                "value": "86400"
              },
              "src": "1068:15:10",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_126144000_by_1",
                "typeString": "int_const 126144000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "920e8217",
            "id": 37,
            "mutability": "constant",
            "name": "PRECISON_FACTOR",
            "nameLocation": "1113:15:10",
            "nodeType": "VariableDeclaration",
            "scope": 1317,
            "src": "1089:47:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 33,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1089:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              },
              "id": 36,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 34,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1131:2:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "hexValue": "36",
                "id": 35,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1135:1:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_6_by_1",
                  "typeString": "int_const 6"
                },
                "value": "6"
              },
              "src": "1131:5:10",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "c1a287e2",
            "id": 40,
            "mutability": "constant",
            "name": "GRACE_PERIOD",
            "nameLocation": "1235:12:10",
            "nodeType": "VariableDeclaration",
            "scope": 1317,
            "src": "1211:46:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 38,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1211:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3330",
              "id": 39,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1250:7:10",
              "subdenomination": "days",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2592000_by_1",
                "typeString": "int_const 2592000"
              },
              "value": "30"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0f4ef8a6",
            "id": 42,
            "mutability": "mutable",
            "name": "rewardManager",
            "nameLocation": "1361:13:10",
            "nodeType": "VariableDeclaration",
            "scope": 1317,
            "src": "1346:28:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 41,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1346:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 43,
              "nodeType": "StructuredDocumentation",
              "src": "1381:168:10",
              "text": "@notice penalty queued to be transfer later to veYfiRewardPool using `transferQueuedPenalty`\n@dev rewards are queued when an account `_updateReward`."
            },
            "functionSelector": "42886b67",
            "id": 45,
            "mutability": "mutable",
            "name": "queuedPenalty",
            "nameLocation": "1569:13:10",
            "nodeType": "VariableDeclaration",
            "scope": 1317,
            "src": "1554:28:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 44,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1554:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 47,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "1604:12:10",
            "nodeType": "VariableDeclaration",
            "scope": 1317,
            "src": "1588:28:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 46,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1588:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 51,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1658:9:10",
            "nodeType": "VariableDeclaration",
            "scope": 1317,
            "src": "1622:45:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 50,
              "keyType": {
                "id": 48,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1630:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1622:27:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 49,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1641:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "40c35446",
            "id": 54,
            "mutability": "mutable",
            "name": "extraRewards",
            "nameLocation": "1735:12:10",
            "nodeType": "VariableDeclaration",
            "scope": 1317,
            "src": "1718:29:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 52,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1718:7:10",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 53,
              "nodeType": "ArrayTypeName",
              "src": "1718:9:10",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 60,
            "name": "Staked",
            "nameLocation": "1760:6:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1783:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "1767:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1767:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1797:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "1789:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1789:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1766:38:10"
            },
            "src": "1754:51:10"
          },
          {
            "anonymous": false,
            "id": 66,
            "name": "Withdrawn",
            "nameLocation": "1816:9:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1842:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "1826:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1826:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1856:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "1848:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1848:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1825:38:10"
            },
            "src": "1810:54:10"
          },
          {
            "anonymous": false,
            "id": 70,
            "name": "AddedExtraReward",
            "nameLocation": "1875:16:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "reward",
                  "nameLocation": "1900:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "1892:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1892:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1891:16:10"
            },
            "src": "1869:39:10"
          },
          {
            "anonymous": false,
            "id": 75,
            "name": "DeletedExtraRewards",
            "nameLocation": "1919:19:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rewards",
                  "nameLocation": "1949:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "1939:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 71,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1939:7:10",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 72,
                    "nodeType": "ArrayTypeName",
                    "src": "1939:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1938:19:10"
            },
            "src": "1913:45:10"
          },
          {
            "anonymous": false,
            "id": 79,
            "name": "RemovedExtraReward",
            "nameLocation": "1969:18:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "reward",
                  "nameLocation": "1996:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "1988:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1988:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1987:16:10"
            },
            "src": "1963:41:10"
          },
          {
            "anonymous": false,
            "id": 83,
            "name": "UpdatedRewardManager",
            "nameLocation": "2015:20:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rewardManager",
                  "nameLocation": "2044:13:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "2036:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2036:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2035:23:10"
            },
            "src": "2009:50:10"
          },
          {
            "anonymous": false,
            "id": 87,
            "name": "UpdatedVeToken",
            "nameLocation": "2070:14:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ve",
                  "nameLocation": "2093:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "2085:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2085:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2084:12:10"
            },
            "src": "2064:33:10"
          },
          {
            "anonymous": false,
            "id": 101,
            "name": "Initialized",
            "nameLocation": "2108:11:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "stakingToken",
                  "nameLocation": "2137:12:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "2129:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2129:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rewardToken",
                  "nameLocation": "2167:11:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "2159:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2159:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2196:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "2188:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2188:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 95,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rewardManager",
                  "nameLocation": "2219:13:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "2211:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2211:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ve",
                  "nameLocation": "2250:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "2242:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2242:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "veYfiRewardPool",
                  "nameLocation": "2270:15:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "2262:23:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2262:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2119:172:10"
            },
            "src": "2102:190:10"
          },
          {
            "baseFunctions": [
              3792
            ],
            "body": {
              "id": 190,
              "nodeType": "Block",
              "src": "2903:702:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 122,
                              "name": "_stakingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 104,
                              "src": "2942:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2934:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 120,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2934:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2934:22:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 126,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2968:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2960:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 124,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2960:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2960:12:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2934:38:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5f7374616b696e67546f6b656e203078302061646472657373",
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2986:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8708b98a4e18254a018efd48ef7b6aa1779d5825bfe2b8be7177a4a906549b2c",
                          "typeString": "literal_string \"_stakingToken 0x0 address\""
                        },
                        "value": "_stakingToken 0x0 address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8708b98a4e18254a018efd48ef7b6aa1779d5825bfe2b8be7177a4a906549b2c",
                          "typeString": "literal_string \"_stakingToken 0x0 address\""
                        }
                      ],
                      "id": 119,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2913:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2913:110:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "2913:110:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 135,
                              "name": "_ve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 112,
                              "src": "3049:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3041:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 133,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3041:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3041:12:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 139,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3065:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3057:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 137,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3057:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3057:12:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3041:28:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5f7665203078302061646472657373",
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3071:17:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a10646e9742cf7d23f40c6aa54f1329e16cba81560bc80b80a74217f6da5bb96",
                          "typeString": "literal_string \"_ve 0x0 address\""
                        },
                        "value": "_ve 0x0 address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a10646e9742cf7d23f40c6aa54f1329e16cba81560bc80b80a74217f6da5bb96",
                          "typeString": "literal_string \"_ve 0x0 address\""
                        }
                      ],
                      "id": 132,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3033:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3033:56:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "3033:56:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 148,
                              "name": "_veYfiRewardPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 114,
                              "src": "3128:16:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3120:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 146,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3120:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3120:25:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 152,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3157:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3149:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 150,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3149:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3149:12:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3120:41:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5f7665596669526577617264506f6f6c203078302061646472657373",
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3175:30:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d72682e0ba07d06208e150df831d9ce0ba0c449f3d7312f1ec9ea8e238afda9f",
                          "typeString": "literal_string \"_veYfiRewardPool 0x0 address\""
                        },
                        "value": "_veYfiRewardPool 0x0 address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d72682e0ba07d06208e150df831d9ce0ba0c449f3d7312f1ec9ea8e238afda9f",
                          "typeString": "literal_string \"_veYfiRewardPool 0x0 address\""
                        }
                      ],
                      "id": 145,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3099:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3099:116:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "3099:116:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 159,
                        "name": "_rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "3239:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 160,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "3253:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 158,
                      "name": "__initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3408,
                      "src": "3226:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3226:34:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "3226:34:10"
                },
                {
                  "expression": {
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 163,
                      "name": "stakingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "3270:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2943",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 165,
                          "name": "_stakingToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 104,
                          "src": "3292:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 164,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2943,
                        "src": "3285:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$2943_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3285:21:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2943",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "3270:36:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2943",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "3270:36:10"
                },
                {
                  "expression": {
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 169,
                      "name": "veToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "3316:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 170,
                      "name": "_ve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 112,
                      "src": "3326:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3316:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 172,
                  "nodeType": "ExpressionStatement",
                  "src": "3316:13:10"
                },
                {
                  "expression": {
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 173,
                      "name": "rewardManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "3339:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 174,
                      "name": "_rewardManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110,
                      "src": "3355:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3339:30:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "3339:30:10"
                },
                {
                  "expression": {
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 177,
                      "name": "veYfiRewardPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "3379:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 178,
                      "name": "_veYfiRewardPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 114,
                      "src": "3397:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3379:34:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 180,
                  "nodeType": "ExpressionStatement",
                  "src": "3379:34:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 182,
                        "name": "_stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104,
                        "src": "3454:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 183,
                        "name": "_rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "3481:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 184,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "3507:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 185,
                        "name": "_rewardManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110,
                        "src": "3527:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 186,
                        "name": "_ve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "3555:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 187,
                        "name": "_veYfiRewardPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 114,
                        "src": "3572:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 181,
                      "name": "Initialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "3429:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,address,address,address)"
                      }
                    },
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3429:169:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 189,
                  "nodeType": "EmitStatement",
                  "src": "3424:174:10"
                }
              ]
            },
            "documentation": {
              "id": 102,
              "nodeType": "StructuredDocumentation",
              "src": "2298:381:10",
              "text": "@notice initialize the contract\n  @dev Initialize called after contract is cloned.\n  @param _stakingToken The vault token to stake\n  @param _rewardToken the reward token YFI\n  @param _owner owner address\n  @param _rewardManager reward manager address\n  @param _ve veYFI address\n  @param _veYfiRewardPool veYfiRewardPool address"
            },
            "functionSelector": "cc2a9a5b",
            "id": 191,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 117,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 116,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15579,
                  "src": "2891:11:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "2891:11:10"
              }
            ],
            "name": "initialize",
            "nameLocation": "2693:10:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104,
                  "mutability": "mutable",
                  "name": "_stakingToken",
                  "nameLocation": "2721:13:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "2713:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2713:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 106,
                  "mutability": "mutable",
                  "name": "_rewardToken",
                  "nameLocation": "2752:12:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "2744:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2744:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 108,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "2782:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "2774:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2774:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 110,
                  "mutability": "mutable",
                  "name": "_rewardManager",
                  "nameLocation": "2806:14:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "2798:22:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2798:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 112,
                  "mutability": "mutable",
                  "name": "_ve",
                  "nameLocation": "2838:3:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "2830:11:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2830:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 114,
                  "mutability": "mutable",
                  "name": "_veYfiRewardPool",
                  "nameLocation": "2859:16:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "2851:24:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2851:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2703:178:10"
            },
            "returnParameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2903:0:10"
            },
            "scope": 1317,
            "src": "2684:921:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 206,
              "nodeType": "Block",
              "src": "3658:64:10",
              "statements": [
                {
                  "expression": {
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 198,
                      "name": "veToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "3668:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 199,
                      "name": "_ve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "3678:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3668:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "3668:13:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 203,
                        "name": "_ve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 193,
                        "src": "3711:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 202,
                      "name": "UpdatedVeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "3696:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3696:19:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 205,
                  "nodeType": "EmitStatement",
                  "src": "3691:24:10"
                }
              ]
            },
            "functionSelector": "7a238855",
            "id": 207,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 196,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 195,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3869,
                  "src": "3648:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "3648:9:10"
              }
            ],
            "name": "setVe",
            "nameLocation": "3620:5:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 193,
                  "mutability": "mutable",
                  "name": "_ve",
                  "nameLocation": "3634:3:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 207,
                  "src": "3626:11:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3626:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3625:13:10"
            },
            "returnParameters": {
              "id": 197,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3658:0:10"
            },
            "scope": 1317,
            "src": "3611:111:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3797
            ],
            "body": {
              "id": 215,
              "nodeType": "Block",
              "src": "3837:36:10",
              "statements": [
                {
                  "expression": {
                    "id": 213,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 47,
                    "src": "3854:12:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 212,
                  "id": 214,
                  "nodeType": "Return",
                  "src": "3847:19:10"
                }
              ]
            },
            "documentation": {
              "id": 208,
              "nodeType": "StructuredDocumentation",
              "src": "3728:51:10",
              "text": "@return total of the staked vault token"
            },
            "functionSelector": "18160ddd",
            "id": 216,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "3793:11:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3804:2:10"
            },
            "returnParameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 211,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 216,
                  "src": "3828:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3828:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3827:9:10"
            },
            "scope": 1317,
            "src": "3784:89:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3804
            ],
            "body": {
              "id": 229,
              "nodeType": "Block",
              "src": "4097:42:10",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 225,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "4114:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 227,
                    "indexExpression": {
                      "id": 226,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 219,
                      "src": "4124:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4114:18:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 224,
                  "id": 228,
                  "nodeType": "Return",
                  "src": "4107:25:10"
                }
              ]
            },
            "documentation": {
              "id": 217,
              "nodeType": "StructuredDocumentation",
              "src": "3879:100:10",
              "text": "@param account to look balance for\n  @return amount of staked token for an account"
            },
            "functionSelector": "70a08231",
            "id": 230,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "3993:9:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 221,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4058:8:10"
            },
            "parameters": {
              "id": 220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 219,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4011:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 230,
                  "src": "4003:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 218,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4003:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4002:17:10"
            },
            "returnParameters": {
              "id": 224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 223,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 230,
                  "src": "4084:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 222,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4084:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4083:9:10"
            },
            "scope": 1317,
            "src": "3984:155:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 239,
              "nodeType": "Block",
              "src": "4264:43:10",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 236,
                      "name": "extraRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "4281:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "4281:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 235,
                  "id": 238,
                  "nodeType": "Return",
                  "src": "4274:26:10"
                }
              ]
            },
            "documentation": {
              "id": 231,
              "nodeType": "StructuredDocumentation",
              "src": "4145:52:10",
              "text": "@return the number of extra rewards pool"
            },
            "functionSelector": "d55a23f4",
            "id": 240,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "extraRewardsLength",
            "nameLocation": "4211:18:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4229:2:10"
            },
            "returnParameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 234,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "4255:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 233,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4255:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4254:9:10"
            },
            "scope": 1317,
            "src": "4202:105:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 278,
              "nodeType": "Block",
              "src": "4567:239:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 249,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4585:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4585:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 251,
                          "name": "rewardManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "4599:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4585:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "21617574686f72697a6564",
                        "id": 253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4614:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        },
                        "value": "!authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        }
                      ],
                      "id": 248,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4577:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4577:51:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 255,
                  "nodeType": "ExpressionStatement",
                  "src": "4577:51:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 257,
                          "name": "_extraReward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 243,
                          "src": "4646:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 260,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4670:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 259,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4662:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 258,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4662:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4662:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4646:26:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "217265776172642073657474696e67",
                        "id": 263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4674:17:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_858e46e0e9ba8ebaaa499ce77d3f78d179ce723da6012aa81625e2c24d59a111",
                          "typeString": "literal_string \"!reward setting\""
                        },
                        "value": "!reward setting"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_858e46e0e9ba8ebaaa499ce77d3f78d179ce723da6012aa81625e2c24d59a111",
                          "typeString": "literal_string \"!reward setting\""
                        }
                      ],
                      "id": 256,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4638:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4638:54:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 265,
                  "nodeType": "ExpressionStatement",
                  "src": "4638:54:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 267,
                        "name": "_extraReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 243,
                        "src": "4724:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 266,
                      "name": "AddedExtraReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "4707:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4707:30:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 269,
                  "nodeType": "EmitStatement",
                  "src": "4702:35:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 273,
                        "name": "_extraReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 243,
                        "src": "4765:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 270,
                        "name": "extraRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "4747:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4747:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4747:31:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 275,
                  "nodeType": "ExpressionStatement",
                  "src": "4747:31:10"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4795:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 247,
                  "id": 277,
                  "nodeType": "Return",
                  "src": "4788:11:10"
                }
              ]
            },
            "documentation": {
              "id": 241,
              "nodeType": "StructuredDocumentation",
              "src": "4313:179:10",
              "text": "@notice add extra rewards to the gauge\n  @dev can only be done by rewardManager\n  @param _extraReward the ExtraReward contract address\n  @return true"
            },
            "functionSelector": "5e43c47b",
            "id": 279,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addExtraReward",
            "nameLocation": "4506:14:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 243,
                  "mutability": "mutable",
                  "name": "_extraReward",
                  "nameLocation": "4529:12:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "4521:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 242,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4521:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4520:22:10"
            },
            "returnParameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 246,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "4561:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 245,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4561:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4560:6:10"
            },
            "scope": 1317,
            "src": "4497:309:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 365,
              "nodeType": "Block",
              "src": "5053:565:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 288,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5071:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5071:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 290,
                          "name": "rewardManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "5085:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5071:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "21617574686f72697a6564",
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5100:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        },
                        "value": "!authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        }
                      ],
                      "id": 287,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5063:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5063:51:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "5063:51:10"
                },
                {
                  "assignments": [
                    296
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 296,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "5132:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 365,
                      "src": "5124:13:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 295,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5124:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 302,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5145:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 298,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "5145:7:10",
                            "typeDescriptions": {}
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          }
                        ],
                        "id": 297,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -27,
                        "src": "5140:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5140:13:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_uint256",
                        "typeString": "type(uint256)"
                      }
                    },
                    "id": 301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "max",
                    "nodeType": "MemberAccess",
                    "src": "5140:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5124:33:10"
                },
                {
                  "assignments": [
                    304
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 304,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "5175:6:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 365,
                      "src": "5167:14:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 303,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5167:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 307,
                  "initialValue": {
                    "expression": {
                      "id": 305,
                      "name": "extraRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "5184:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "5184:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5167:36:10"
                },
                {
                  "body": {
                    "id": 330,
                    "nodeType": "Block",
                    "src": "5250:126:10",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 318,
                              "name": "extraRewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "5268:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 320,
                            "indexExpression": {
                              "id": 319,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 309,
                              "src": "5281:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5268:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 321,
                            "name": "_extraReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 282,
                            "src": "5287:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5268:31:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 329,
                        "nodeType": "IfStatement",
                        "src": "5264:102:10",
                        "trueBody": {
                          "id": 328,
                          "nodeType": "Block",
                          "src": "5301:65:10",
                          "statements": [
                            {
                              "expression": {
                                "id": 325,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 323,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 296,
                                  "src": "5319:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 324,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 309,
                                  "src": "5327:1:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5319:9:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 326,
                              "nodeType": "ExpressionStatement",
                              "src": "5319:9:10"
                            },
                            {
                              "id": 327,
                              "nodeType": "Break",
                              "src": "5346:5:10"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 312,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 309,
                      "src": "5233:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 313,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 304,
                      "src": "5237:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5233:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 331,
                  "initializationExpression": {
                    "assignments": [
                      309
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 309,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5226:1:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 331,
                        "src": "5218:9:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 308,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5218:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 311,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5230:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5218:13:10"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5245:3:10",
                      "subExpression": {
                        "id": 315,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 309,
                        "src": "5245:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 317,
                    "nodeType": "ExpressionStatement",
                    "src": "5245:3:10"
                  },
                  "nodeType": "ForStatement",
                  "src": "5213:163:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 333,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 296,
                          "src": "5393:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 336,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5407:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 335,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5407:7:10",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                }
                              ],
                              "id": 334,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "5402:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5402:13:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint256",
                              "typeString": "type(uint256)"
                            }
                          },
                          "id": 338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "5402:17:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5393:26:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "657874726120726577617264206e6f7420666f756e64",
                        "id": 340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5421:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_06de903938396d91a829d022ec59a44901460ccf28a90f0af741a20b5af6aa3a",
                          "typeString": "literal_string \"extra reward not found\""
                        },
                        "value": "extra reward not found"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_06de903938396d91a829d022ec59a44901460ccf28a90f0af741a20b5af6aa3a",
                          "typeString": "literal_string \"extra reward not found\""
                        }
                      ],
                      "id": 332,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5385:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5385:61:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 342,
                  "nodeType": "ExpressionStatement",
                  "src": "5385:61:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 344,
                        "name": "_extraReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 282,
                        "src": "5480:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 343,
                      "name": "RemovedExtraReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "5461:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5461:32:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 346,
                  "nodeType": "EmitStatement",
                  "src": "5456:37:10"
                },
                {
                  "expression": {
                    "id": 356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 347,
                        "name": "extraRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "5503:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 349,
                      "indexExpression": {
                        "id": 348,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 296,
                        "src": "5516:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5503:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 350,
                        "name": "extraRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "5525:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 355,
                      "indexExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 351,
                            "name": "extraRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "5538:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "5538:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5560:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5538:23:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5525:37:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5503:59:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 357,
                  "nodeType": "ExpressionStatement",
                  "src": "5503:59:10"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 358,
                        "name": "extraRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "5572:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "pop",
                      "nodeType": "MemberAccess",
                      "src": "5572:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer)"
                      }
                    },
                    "id": 361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5572:18:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 362,
                  "nodeType": "ExpressionStatement",
                  "src": "5572:18:10"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5607:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 286,
                  "id": 364,
                  "nodeType": "Return",
                  "src": "5600:11:10"
                }
              ]
            },
            "documentation": {
              "id": 280,
              "nodeType": "StructuredDocumentation",
              "src": "4812:163:10",
              "text": "@notice remove extra rewards from the gauge\n  @dev can only be done by rewardManager\n  @param _extraReward the ExtraReward contract address"
            },
            "functionSelector": "a80ff90a",
            "id": 366,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeExtraReward",
            "nameLocation": "4989:17:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 282,
                  "mutability": "mutable",
                  "name": "_extraReward",
                  "nameLocation": "5015:12:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 366,
                  "src": "5007:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5007:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5006:22:10"
            },
            "returnParameters": {
              "id": 286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 285,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 366,
                  "src": "5047:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 284,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5047:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5046:6:10"
            },
            "scope": 1317,
            "src": "4980:638:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 385,
              "nodeType": "Block",
              "src": "5754:145:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 371,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5772:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5772:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 373,
                          "name": "rewardManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "5786:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5772:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "21617574686f72697a6564",
                        "id": 375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5801:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        },
                        "value": "!authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        }
                      ],
                      "id": 370,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5764:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5764:51:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 377,
                  "nodeType": "ExpressionStatement",
                  "src": "5764:51:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 379,
                        "name": "extraRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "5850:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      ],
                      "id": 378,
                      "name": "DeletedExtraRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "5830:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5830:33:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 381,
                  "nodeType": "EmitStatement",
                  "src": "5825:38:10"
                },
                {
                  "expression": {
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "5873:19:10",
                    "subExpression": {
                      "id": 382,
                      "name": "extraRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "5880:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 384,
                  "nodeType": "ExpressionStatement",
                  "src": "5873:19:10"
                }
              ]
            },
            "documentation": {
              "id": 367,
              "nodeType": "StructuredDocumentation",
              "src": "5624:87:10",
              "text": "@notice remove extra rewards\n  @dev can only be done by rewardManager"
            },
            "functionSelector": "0569d388",
            "id": 386,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "clearExtraRewards",
            "nameLocation": "5725:17:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 368,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5742:2:10"
            },
            "returnParameters": {
              "id": 369,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5754:0:10"
            },
            "scope": 1317,
            "src": "5716:183:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3358
            ],
            "body": {
              "id": 481,
              "nodeType": "Block",
              "src": "5963:1032:10",
              "statements": [
                {
                  "expression": {
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 392,
                      "name": "rewardPerTokenStored",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3283,
                      "src": "5973:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 393,
                        "name": "_rewardPerToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          588
                        ],
                        "referencedDeclaration": 588,
                        "src": "5996:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5996:17:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5973:40:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 396,
                  "nodeType": "ExpressionStatement",
                  "src": "5973:40:10"
                },
                {
                  "expression": {
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 397,
                      "name": "lastUpdateTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3281,
                      "src": "6023:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 398,
                        "name": "lastTimeRewardApplicable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3470,
                        "src": "6040:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6040:26:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6023:43:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 401,
                  "nodeType": "ExpressionStatement",
                  "src": "6023:43:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 402,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 388,
                      "src": "6080:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6099:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6091:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 403,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6091:7:10",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6091:10:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6080:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 480,
                  "nodeType": "IfStatement",
                  "src": "6076:913:10",
                  "trueBody": {
                    "id": 479,
                    "nodeType": "Block",
                    "src": "6103:886:10",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 408,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51,
                              "src": "6121:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 410,
                            "indexExpression": {
                              "id": 409,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 388,
                              "src": "6131:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6121:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6143:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6121:23:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 460,
                        "nodeType": "IfStatement",
                        "src": "6117:569:10",
                        "trueBody": {
                          "id": 459,
                          "nodeType": "Block",
                          "src": "6146:540:10",
                          "statements": [
                            {
                              "assignments": [
                                414
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 414,
                                  "mutability": "mutable",
                                  "name": "newEarning",
                                  "nameLocation": "6172:10:10",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 459,
                                  "src": "6164:18:10",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 413,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6164:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 418,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 416,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 388,
                                    "src": "6197:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 415,
                                  "name": "_newEarning",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    643
                                  ],
                                  "referencedDeclaration": 643,
                                  "src": "6185:11:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view returns (uint256)"
                                  }
                                },
                                "id": 417,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6185:20:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6164:41:10"
                            },
                            {
                              "assignments": [
                                420
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 420,
                                  "mutability": "mutable",
                                  "name": "maxEarning",
                                  "nameLocation": "6231:10:10",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 459,
                                  "src": "6223:18:10",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 419,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6223:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 424,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 422,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 388,
                                    "src": "6256:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 421,
                                  "name": "_maxEarning",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 666,
                                  "src": "6244:11:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view returns (uint256)"
                                  }
                                },
                                "id": 423,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6244:20:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6223:41:10"
                            },
                            {
                              "assignments": [
                                426
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 426,
                                  "mutability": "mutable",
                                  "name": "penalty",
                                  "nameLocation": "6291:7:10",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 459,
                                  "src": "6283:15:10",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 425,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6283:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 438,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 437,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 434,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 431,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 427,
                                              "name": "PRECISON_FACTOR",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 37,
                                              "src": "6303:15:10",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "-",
                                            "rightExpression": {
                                              "arguments": [
                                                {
                                                  "id": 429,
                                                  "name": "account",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 388,
                                                  "src": "6335:7:10",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                ],
                                                "id": 428,
                                                "name": "_lockingRatio",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 556,
                                                "src": "6321:13:10",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                                  "typeString": "function (address) view returns (uint256)"
                                                }
                                              },
                                              "id": 430,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "6321:22:10",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "6303:40:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 432,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "6302:42:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 433,
                                        "name": "newEarning",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 414,
                                        "src": "6367:10:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6302:75:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 435,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "6301:77:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "id": 436,
                                  "name": "PRECISON_FACTOR",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37,
                                  "src": "6381:15:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6301:95:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6283:113:10"
                            },
                            {
                              "expression": {
                                "id": 446,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 439,
                                    "name": "rewards",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3298,
                                    "src": "6415:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 441,
                                  "indexExpression": {
                                    "id": 440,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 388,
                                    "src": "6423:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "6415:16:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 444,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 442,
                                        "name": "newEarning",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 414,
                                        "src": "6436:10:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 443,
                                        "name": "penalty",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 426,
                                        "src": "6449:7:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6436:20:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 445,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "6435:22:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6415:42:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 447,
                              "nodeType": "ExpressionStatement",
                              "src": "6415:42:10"
                            },
                            {
                              "expression": {
                                "id": 450,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 448,
                                  "name": "queuedPenalty",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45,
                                  "src": "6475:13:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 449,
                                  "name": "penalty",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 426,
                                  "src": "6492:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6475:24:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 451,
                              "nodeType": "ExpressionStatement",
                              "src": "6475:24:10"
                            },
                            {
                              "expression": {
                                "id": 457,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 452,
                                  "name": "queuedRewards",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3286,
                                  "src": "6629:13:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 455,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 453,
                                        "name": "maxEarning",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 420,
                                        "src": "6647:10:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 454,
                                        "name": "newEarning",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 414,
                                        "src": "6660:10:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6647:23:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 456,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "6646:25:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6629:42:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 458,
                              "nodeType": "ExpressionStatement",
                              "src": "6629:42:10"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 461,
                              "name": "userRewardPerTokenPaid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3294,
                              "src": "6699:22:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 463,
                            "indexExpression": {
                              "id": 462,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 388,
                              "src": "6722:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6699:31:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 464,
                            "name": "rewardPerTokenStored",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3283,
                            "src": "6733:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6699:54:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 466,
                        "nodeType": "ExpressionStatement",
                        "src": "6699:54:10"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 468,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 388,
                              "src": "6804:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 469,
                              "name": "rewardPerTokenStored",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3283,
                              "src": "6829:20:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 470,
                              "name": "lastUpdateTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3281,
                              "src": "6867:14:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 471,
                                "name": "rewards",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3298,
                                "src": "6899:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 473,
                              "indexExpression": {
                                "id": 472,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 388,
                                "src": "6907:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6899:16:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 474,
                                "name": "userRewardPerTokenPaid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3294,
                                "src": "6933:22:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 476,
                              "indexExpression": {
                                "id": 475,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 388,
                                "src": "6956:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6933:31:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 467,
                            "name": "UpdatedRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3334,
                            "src": "6772:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256,uint256,uint256)"
                            }
                          },
                          "id": 477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6772:206:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 478,
                        "nodeType": "EmitStatement",
                        "src": "6767:211:10"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 482,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateReward",
            "nameLocation": "5914:13:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 390,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5954:8:10"
            },
            "parameters": {
              "id": 389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 388,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "5936:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 482,
                  "src": "5928:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 387,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5928:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5927:17:10"
            },
            "returnParameters": {
              "id": 391,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5963:0:10"
            },
            "scope": 1317,
            "src": "5905:1090:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 494,
              "nodeType": "Block",
              "src": "7266:46:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 491,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 485,
                        "src": "7297:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 490,
                      "name": "_lockingRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 556,
                      "src": "7283:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7283:22:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 489,
                  "id": 493,
                  "nodeType": "Return",
                  "src": "7276:29:10"
                }
              ]
            },
            "documentation": {
              "id": 483,
              "nodeType": "StructuredDocumentation",
              "src": "7001:189:10",
              "text": "@notice give the lockingRatio\n @dev locking ratio is expressed in PRECISON_FACTOR, it's used to calculate the penalty due to the lock duration.\n @return lockingRatio"
            },
            "functionSelector": "deee8e54",
            "id": 495,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lockingRatio",
            "nameLocation": "7204:12:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 485,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7225:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 495,
                  "src": "7217:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 484,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7217:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7216:17:10"
            },
            "returnParameters": {
              "id": 489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 488,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 495,
                  "src": "7257:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 487,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7257:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7256:9:10"
            },
            "scope": 1317,
            "src": "7195:117:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 555,
              "nodeType": "Block",
              "src": "7391:490:10",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 503,
                            "name": "veToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23,
                            "src": "7419:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 502,
                          "name": "IVotingEscrow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2074,
                          "src": "7405:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVotingEscrow_$2074_$",
                            "typeString": "type(contract IVotingEscrow)"
                          }
                        },
                        "id": 504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7405:22:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVotingEscrow_$2074",
                          "typeString": "contract IVotingEscrow"
                        }
                      },
                      "id": 505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "migration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2051,
                      "src": "7405:32:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                        "typeString": "function () view external returns (bool)"
                      }
                    },
                    "id": 506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7405:34:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 510,
                  "nodeType": "IfStatement",
                  "src": "7401:87:10",
                  "trueBody": {
                    "id": 509,
                    "nodeType": "Block",
                    "src": "7441:47:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 507,
                          "name": "PRECISON_FACTOR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "7462:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 501,
                        "id": 508,
                        "nodeType": "Return",
                        "src": "7455:22:10"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    512
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 512,
                      "mutability": "mutable",
                      "name": "lockedUntil",
                      "nameLocation": "7506:11:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 555,
                      "src": "7498:19:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 511,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7498:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 519,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 517,
                        "name": "acccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 497,
                        "src": "7555:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 514,
                            "name": "veToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23,
                            "src": "7534:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 513,
                          "name": "IVotingEscrow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2074,
                          "src": "7520:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVotingEscrow_$2074_$",
                            "typeString": "type(contract IVotingEscrow)"
                          }
                        },
                        "id": 515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7520:22:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVotingEscrow_$2074",
                          "typeString": "contract IVotingEscrow"
                        }
                      },
                      "id": 516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "locked__end",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2031,
                      "src": "7520:34:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7520:44:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7498:66:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 520,
                        "name": "lockedUntil",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 512,
                        "src": "7578:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7593:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7578:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 523,
                        "name": "lockedUntil",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 512,
                        "src": "7598:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "expression": {
                          "id": 524,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "7613:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "7613:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7598:30:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7578:50:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 531,
                  "nodeType": "IfStatement",
                  "src": "7574:89:10",
                  "trueBody": {
                    "id": 530,
                    "nodeType": "Block",
                    "src": "7630:33:10",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7651:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 501,
                        "id": 529,
                        "nodeType": "Return",
                        "src": "7644:8:10"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    533
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 533,
                      "mutability": "mutable",
                      "name": "timeLeft",
                      "nameLocation": "7681:8:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 555,
                      "src": "7673:16:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 532,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7673:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 538,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 534,
                      "name": "lockedUntil",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 512,
                      "src": "7692:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "expression": {
                        "id": 535,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "7706:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "7706:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7692:29:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7673:48:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 539,
                        "name": "MAX_LOCK",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "7735:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 540,
                        "name": "timeLeft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 533,
                        "src": "7746:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7735:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 542,
                      "name": "GRACE_PERIOD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "7757:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7735:34:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 547,
                  "nodeType": "IfStatement",
                  "src": "7731:87:10",
                  "trueBody": {
                    "id": 546,
                    "nodeType": "Block",
                    "src": "7771:47:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 544,
                          "name": "PRECISON_FACTOR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "7792:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 501,
                        "id": 545,
                        "nodeType": "Return",
                        "src": "7785:22:10"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 548,
                            "name": "PRECISON_FACTOR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "7836:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 549,
                            "name": "timeLeft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 533,
                            "src": "7854:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7836:26:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 551,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7835:28:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 552,
                      "name": "MAX_LOCK",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "7866:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7835:39:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 501,
                  "id": 554,
                  "nodeType": "Return",
                  "src": "7828:46:10"
                }
              ]
            },
            "id": 556,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_lockingRatio",
            "nameLocation": "7327:13:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 497,
                  "mutability": "mutable",
                  "name": "acccount",
                  "nameLocation": "7349:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "7341:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 496,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7341:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7340:18:10"
            },
            "returnParameters": {
              "id": 501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 500,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "7382:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 499,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7382:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7381:9:10"
            },
            "scope": 1317,
            "src": "7318:563:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3363
            ],
            "body": {
              "id": 587,
              "nodeType": "Block",
              "src": "7955:273:10",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 562,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 216,
                        "src": "7969:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7969:13:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7986:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7969:18:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 569,
                  "nodeType": "IfStatement",
                  "src": "7965:76:10",
                  "trueBody": {
                    "id": 568,
                    "nodeType": "Block",
                    "src": "7989:52:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 566,
                          "name": "rewardPerTokenStored",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3283,
                          "src": "8010:20:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 561,
                        "id": 567,
                        "nodeType": "Return",
                        "src": "8003:27:10"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 570,
                      "name": "rewardPerTokenStored",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3283,
                      "src": "8069:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 579,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 577,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 574,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "arguments": [],
                                          "expression": {
                                            "argumentTypes": [],
                                            "id": 571,
                                            "name": "lastTimeRewardApplicable",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3470,
                                            "src": "8107:24:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                              "typeString": "function () view returns (uint256)"
                                            }
                                          },
                                          "id": 572,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "8107:26:10",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 573,
                                          "name": "lastUpdateTime",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3281,
                                          "src": "8136:14:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "8107:43:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 575,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "8106:45:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 576,
                                    "name": "rewardRate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3279,
                                    "src": "8170:10:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "8106:74:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "31653138",
                                  "id": 578,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8199:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "value": "1e18"
                                },
                                "src": "8106:97:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 580,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "8105:99:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 581,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 216,
                              "src": "8207:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8207:13:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8105:115:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 584,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8104:117:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8069:152:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 561,
                  "id": 586,
                  "nodeType": "Return",
                  "src": "8050:171:10"
                }
              ]
            },
            "id": 588,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_rewardPerToken",
            "nameLocation": "7896:15:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 558,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7928:8:10"
            },
            "parameters": {
              "id": 557,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7911:2:10"
            },
            "returnParameters": {
              "id": 561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 560,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 588,
                  "src": "7946:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 559,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7946:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7945:9:10"
            },
            "scope": 1317,
            "src": "7887:341:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3555,
              15628
            ],
            "body": {
              "id": 618,
              "nodeType": "Block",
              "src": "8512:186:10",
              "statements": [
                {
                  "assignments": [
                    600
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 600,
                      "mutability": "mutable",
                      "name": "newEarning",
                      "nameLocation": "8530:10:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 618,
                      "src": "8522:18:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 599,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8522:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 604,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 602,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 591,
                        "src": "8555:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 601,
                      "name": "_newEarning",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        643
                      ],
                      "referencedDeclaration": 643,
                      "src": "8543:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8543:20:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8522:41:10"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 609,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 606,
                                  "name": "account",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 591,
                                  "src": "8608:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 605,
                                "name": "_lockingRatio",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 556,
                                "src": "8594:13:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 607,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8594:22:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 608,
                              "name": "newEarning",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 600,
                              "src": "8619:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8594:35:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 610,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "8593:37:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 611,
                        "name": "PRECISON_FACTOR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "8645:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8593:67:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 613,
                        "name": "rewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3298,
                        "src": "8675:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 615,
                      "indexExpression": {
                        "id": 614,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 591,
                        "src": "8683:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8675:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8593:98:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 598,
                  "id": 617,
                  "nodeType": "Return",
                  "src": "8574:117:10"
                }
              ]
            },
            "documentation": {
              "id": 589,
              "nodeType": "StructuredDocumentation",
              "src": "8234:140:10",
              "text": "@notice earning for an account\n  @dev earning are based on lock duration and boost\n  @return amount of tokens earned"
            },
            "functionSelector": "008cc262",
            "id": 619,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "earned",
            "nameLocation": "8388:6:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 595,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 593,
                  "name": "BaseGauge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3737,
                  "src": "8459:9:10"
                },
                {
                  "id": 594,
                  "name": "IBaseGauge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15629,
                  "src": "8470:10:10"
                }
              ],
              "src": "8450:31:10"
            },
            "parameters": {
              "id": 592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 591,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8403:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 619,
                  "src": "8395:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 590,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8395:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8394:17:10"
            },
            "returnParameters": {
              "id": 598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 597,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 619,
                  "src": "8499:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 596,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8499:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8498:9:10"
            },
            "scope": 1317,
            "src": "8379:319:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3353
            ],
            "body": {
              "id": 642,
              "nodeType": "Block",
              "src": "8819:143:10",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 628,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 621,
                                "src": "8867:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 627,
                              "name": "_boostedBalanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 736,
                              "src": "8849:17:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8849:26:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 635,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 630,
                                    "name": "_rewardPerToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      588
                                    ],
                                    "referencedDeclaration": 588,
                                    "src": "8895:15:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view returns (uint256)"
                                    }
                                  },
                                  "id": 631,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8895:17:10",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "baseExpression": {
                                    "id": 632,
                                    "name": "userRewardPerTokenPaid",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3294,
                                    "src": "8915:22:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 634,
                                  "indexExpression": {
                                    "id": 633,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 621,
                                    "src": "8938:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8915:31:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8895:51:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 636,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "8894:53:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8849:98:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 638,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8848:100:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31653138",
                      "id": 639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8951:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "src": "8848:107:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 626,
                  "id": 641,
                  "nodeType": "Return",
                  "src": "8829:126:10"
                }
              ]
            },
            "id": 643,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_newEarning",
            "nameLocation": "8713:11:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 623,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8780:8:10"
            },
            "parameters": {
              "id": 622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 621,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8733:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 643,
                  "src": "8725:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 620,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8725:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8724:17:10"
            },
            "returnParameters": {
              "id": 626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 625,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 643,
                  "src": "8806:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 624,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8806:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8805:9:10"
            },
            "scope": 1317,
            "src": "8704:258:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 665,
              "nodeType": "Block",
              "src": "9038:135:10",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 650,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51,
                              "src": "9068:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 652,
                            "indexExpression": {
                              "id": 651,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 645,
                              "src": "9078:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9068:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 658,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 653,
                                    "name": "_rewardPerToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      588
                                    ],
                                    "referencedDeclaration": 588,
                                    "src": "9106:15:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view returns (uint256)"
                                    }
                                  },
                                  "id": 654,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9106:17:10",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "baseExpression": {
                                    "id": 655,
                                    "name": "userRewardPerTokenPaid",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3294,
                                    "src": "9126:22:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 657,
                                  "indexExpression": {
                                    "id": 656,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 645,
                                    "src": "9149:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9126:31:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9106:51:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 659,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9105:53:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9068:90:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 661,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9067:92:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31653138",
                      "id": 662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9162:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "src": "9067:99:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 649,
                  "id": 664,
                  "nodeType": "Return",
                  "src": "9048:118:10"
                }
              ]
            },
            "id": 666,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_maxEarning",
            "nameLocation": "8977:11:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 646,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 645,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8997:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 666,
                  "src": "8989:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 644,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8989:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8988:17:10"
            },
            "returnParameters": {
              "id": 649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 648,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 666,
                  "src": "9029:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 647,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9029:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9028:9:10"
            },
            "scope": 1317,
            "src": "8968:205:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3811
            ],
            "body": {
              "id": 678,
              "nodeType": "Block",
              "src": "9445:50:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 675,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 669,
                        "src": "9480:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 674,
                      "name": "_boostedBalanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 736,
                      "src": "9462:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9462:26:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 673,
                  "id": 677,
                  "nodeType": "Return",
                  "src": "9455:33:10"
                }
              ]
            },
            "documentation": {
              "id": 667,
              "nodeType": "StructuredDocumentation",
              "src": "9179:188:10",
              "text": "@notice boosted balance of based on veYFI balance\n  @dev min(balance * 0.4 + totalSupply * veYFIBalance / veYFITotalSypply * 0.6, balance)\n  @return boosted balance"
            },
            "functionSelector": "1beabcd2",
            "id": 679,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "boostedBalanceOf",
            "nameLocation": "9381:16:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 669,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "9406:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 679,
                  "src": "9398:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 668,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9398:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9397:17:10"
            },
            "returnParameters": {
              "id": 673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 672,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 679,
                  "src": "9436:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 671,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9436:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9435:9:10"
            },
            "scope": 1317,
            "src": "9372:123:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 735,
              "nodeType": "Block",
              "src": "9605:453:10",
              "statements": [
                {
                  "assignments": [
                    687
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 687,
                      "mutability": "mutable",
                      "name": "veTotalSupply",
                      "nameLocation": "9623:13:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 735,
                      "src": "9615:21:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 686,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9615:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 693,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 689,
                            "name": "veToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23,
                            "src": "9653:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 688,
                          "name": "IVotingEscrow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2074,
                          "src": "9639:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVotingEscrow_$2074_$",
                            "typeString": "type(contract IVotingEscrow)"
                          }
                        },
                        "id": 690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9639:22:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVotingEscrow_$2074",
                          "typeString": "contract IVotingEscrow"
                        }
                      },
                      "id": 691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2024,
                      "src": "9639:34:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9639:36:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9615:60:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 694,
                      "name": "veTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 687,
                      "src": "9689:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 695,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9706:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9689:18:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 702,
                  "nodeType": "IfStatement",
                  "src": "9685:74:10",
                  "trueBody": {
                    "id": 701,
                    "nodeType": "Block",
                    "src": "9709:50:10",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 697,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51,
                            "src": "9730:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 699,
                          "indexExpression": {
                            "id": 698,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 681,
                            "src": "9740:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9730:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 685,
                        "id": 700,
                        "nodeType": "Return",
                        "src": "9723:25:10"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 726,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 709,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 705,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 51,
                                        "src": "9816:9:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 707,
                                      "indexExpression": {
                                        "id": 706,
                                        "name": "account",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 681,
                                        "src": "9826:7:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9816:18:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "hexValue": "3430",
                                      "id": 708,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9837:2:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_40_by_1",
                                        "typeString": "int_const 40"
                                      },
                                      "value": "40"
                                    },
                                    "src": "9816:23:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 710,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "9815:25:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 724,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 721,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "components": [
                                              {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 718,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "id": 711,
                                                  "name": "_totalSupply",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 47,
                                                  "src": "9866:12:10",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "*",
                                                "rightExpression": {
                                                  "arguments": [
                                                    {
                                                      "id": 716,
                                                      "name": "account",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 681,
                                                      "src": "9938:7:10",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "arguments": [
                                                        {
                                                          "id": 713,
                                                          "name": "veToken",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 23,
                                                          "src": "9919:7:10",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                          }
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": [
                                                          {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                          }
                                                        ],
                                                        "id": 712,
                                                        "name": "IVotingEscrow",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2074,
                                                        "src": "9905:13:10",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_type$_t_contract$_IVotingEscrow_$2074_$",
                                                          "typeString": "type(contract IVotingEscrow)"
                                                        }
                                                      },
                                                      "id": 714,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "kind": "typeConversion",
                                                      "lValueRequested": false,
                                                      "names": [],
                                                      "nodeType": "FunctionCall",
                                                      "src": "9905:22:10",
                                                      "tryCall": false,
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_IVotingEscrow_$2074",
                                                        "typeString": "contract IVotingEscrow"
                                                      }
                                                    },
                                                    "id": 715,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "balanceOf",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 2882,
                                                    "src": "9905:32:10",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                      "typeString": "function (address) view external returns (uint256)"
                                                    }
                                                  },
                                                  "id": 717,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "9905:41:10",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "src": "9866:80:10",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "id": 719,
                                            "isConstant": false,
                                            "isInlineArray": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "TupleExpression",
                                            "src": "9865:82:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "/",
                                          "rightExpression": {
                                            "id": 720,
                                            "name": "veTotalSupply",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 687,
                                            "src": "9974:13:10",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "9865:122:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 722,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "9864:124:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "hexValue": "3630",
                                      "id": 723,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9991:2:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_60_by_1",
                                        "typeString": "int_const 60"
                                      },
                                      "value": "60"
                                    },
                                    "src": "9864:129:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 725,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "9863:131:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9815:179:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 727,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "9814:181:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9998:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "9814:187:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 730,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51,
                          "src": "10019:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 732,
                        "indexExpression": {
                          "id": 731,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 681,
                          "src": "10029:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10019:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 703,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3255,
                        "src": "9788:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$3255_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "min",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3206,
                      "src": "9788:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9788:263:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 685,
                  "id": 734,
                  "nodeType": "Return",
                  "src": "9769:282:10"
                }
              ]
            },
            "id": 736,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_boostedBalanceOf",
            "nameLocation": "9510:17:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 681,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "9536:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 736,
                  "src": "9528:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 680,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9528:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9527:17:10"
            },
            "returnParameters": {
              "id": 685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 684,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 736,
                  "src": "9592:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 683,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9592:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9591:9:10"
            },
            "scope": 1317,
            "src": "9501:557:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 752,
              "nodeType": "Block",
              "src": "10336:67:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 745,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10355:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10355:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 747,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 739,
                        "src": "10367:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 744,
                      "name": "_deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 883,
                      "src": "10346:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10346:29:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 749,
                  "nodeType": "ExpressionStatement",
                  "src": "10346:29:10"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10392:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 743,
                  "id": 751,
                  "nodeType": "Return",
                  "src": "10385:11:10"
                }
              ]
            },
            "documentation": {
              "id": 737,
              "nodeType": "StructuredDocumentation",
              "src": "10064:211:10",
              "text": "@notice deposit vault tokens into the gauge\n @dev a user without a veYFI should not lock.\n @dev This call update claimable rewards\n @param _amount of vault token\n @return true"
            },
            "functionSelector": "b6b55f25",
            "id": 753,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "10289:7:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 739,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "10305:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 753,
                  "src": "10297:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 738,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10297:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10296:17:10"
            },
            "returnParameters": {
              "id": 743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 742,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 753,
                  "src": "10330:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 741,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10330:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10329:6:10"
            },
            "scope": 1317,
            "src": "10280:123:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 787,
              "nodeType": "Block",
              "src": "10711:224:10",
              "statements": [
                {
                  "assignments": [
                    760
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 760,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "10729:7:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 787,
                      "src": "10721:15:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 759,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10721:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 778,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 765,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10784:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 766,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "10784:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 763,
                            "name": "stakingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "10761:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$2943",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2882,
                          "src": "10761:22:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10761:34:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 770,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10832:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 771,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "10832:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 774,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "10852:4:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Gauge_$1317",
                                  "typeString": "contract Gauge"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Gauge_$1317",
                                  "typeString": "contract Gauge"
                                }
                              ],
                              "id": 773,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10844:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 772,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10844:7:10",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 775,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10844:13:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 768,
                            "name": "stakingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "10809:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$2943",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "allowance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2902,
                          "src": "10809:22:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address,address) view external returns (uint256)"
                          }
                        },
                        "id": 776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10809:49:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 761,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3255,
                        "src": "10739:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$3255_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "min",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3206,
                      "src": "10739:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10739:129:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10721:147:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 780,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10887:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10887:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 782,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 760,
                        "src": "10899:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 779,
                      "name": "_deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 883,
                      "src": "10878:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10878:29:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 784,
                  "nodeType": "ExpressionStatement",
                  "src": "10878:29:10"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10924:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 758,
                  "id": 786,
                  "nodeType": "Return",
                  "src": "10917:11:10"
                }
              ]
            },
            "documentation": {
              "id": 754,
              "nodeType": "StructuredDocumentation",
              "src": "10409:254:10",
              "text": "@notice deposit vault tokens into the gauge\n   @dev a user without a veYFI should not lock.\n   @dev will deposit the min betwwen user balance and user approval\n   @dev This call update claimable rewards\n   @return true"
            },
            "functionSelector": "d0e30db0",
            "id": 788,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "10677:7:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 755,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10684:2:10"
            },
            "returnParameters": {
              "id": 758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 757,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 788,
                  "src": "10705:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 756,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10705:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10704:6:10"
            },
            "scope": 1317,
            "src": "10668:267:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 805,
              "nodeType": "Block",
              "src": "11297:61:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 799,
                        "name": "_for",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 791,
                        "src": "11316:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 800,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 793,
                        "src": "11322:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 798,
                      "name": "_deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 883,
                      "src": "11307:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11307:23:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 802,
                  "nodeType": "ExpressionStatement",
                  "src": "11307:23:10"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11347:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 797,
                  "id": 804,
                  "nodeType": "Return",
                  "src": "11340:11:10"
                }
              ]
            },
            "documentation": {
              "id": 789,
              "nodeType": "StructuredDocumentation",
              "src": "10941:276:10",
              "text": "@notice deposit vault tokens into the gauge for a user\n   @dev vault token is taken from msg.sender\n   @dev This call update  `_for` claimable rewards\n   @param _for account to deposit to\n    @param _amount to deposit\n    @return true"
            },
            "functionSelector": "2f4f21e2",
            "id": 806,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositFor",
            "nameLocation": "11231:10:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 794,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 791,
                  "mutability": "mutable",
                  "name": "_for",
                  "nameLocation": "11250:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 806,
                  "src": "11242:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 790,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11242:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 793,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "11264:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 806,
                  "src": "11256:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 792,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11256:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11241:31:10"
            },
            "returnParameters": {
              "id": 797,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 796,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 806,
                  "src": "11291:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 795,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11291:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11290:6:10"
            },
            "scope": 1317,
            "src": "11222:136:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 882,
              "nodeType": "Block",
              "src": "11461:549:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 817,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 810,
                          "src": "11479:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11489:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11479:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526577617264506f6f6c203a2043616e6e6f74206465706f7369742030",
                        "id": 820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11492:31:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e76b345e7307fc14f0b1231ff506f9b72b9c3814cb98c621ca293e4c96205a76",
                          "typeString": "literal_string \"RewardPool : Cannot deposit 0\""
                        },
                        "value": "RewardPool : Cannot deposit 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e76b345e7307fc14f0b1231ff506f9b72b9c3814cb98c621ca293e4c96205a76",
                          "typeString": "literal_string \"RewardPool : Cannot deposit 0\""
                        }
                      ],
                      "id": 816,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11471:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11471:53:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 822,
                  "nodeType": "ExpressionStatement",
                  "src": "11471:53:10"
                },
                {
                  "assignments": [
                    824
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 824,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "11584:6:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 882,
                      "src": "11576:14:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 823,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11576:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 827,
                  "initialValue": {
                    "expression": {
                      "id": 825,
                      "name": "extraRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "11593:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "11593:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11576:36:10"
                },
                {
                  "body": {
                    "id": 847,
                    "nodeType": "Block",
                    "src": "11659:77:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 844,
                              "name": "_for",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 808,
                              "src": "11720:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 839,
                                    "name": "extraRewards",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 54,
                                    "src": "11686:12:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 841,
                                  "indexExpression": {
                                    "id": 840,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 829,
                                    "src": "11699:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11686:15:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 838,
                                "name": "IExtraReward",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3772,
                                "src": "11673:12:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IExtraReward_$3772_$",
                                  "typeString": "type(contract IExtraReward)"
                                }
                              },
                              "id": 842,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11673:29:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IExtraReward_$3772",
                                "typeString": "contract IExtraReward"
                              }
                            },
                            "id": 843,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rewardCheckpoint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3759,
                            "src": "11673:46:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) external returns (bool)"
                            }
                          },
                          "id": 845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11673:52:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 846,
                        "nodeType": "ExpressionStatement",
                        "src": "11673:52:10"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 832,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 829,
                      "src": "11642:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 833,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 824,
                      "src": "11646:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11642:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 848,
                  "initializationExpression": {
                    "assignments": [
                      829
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 829,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "11635:1:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 848,
                        "src": "11627:9:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 828,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11627:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 831,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11639:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11627:13:10"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11654:3:10",
                      "subExpression": {
                        "id": 835,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 829,
                        "src": "11654:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 837,
                    "nodeType": "ExpressionStatement",
                    "src": "11654:3:10"
                  },
                  "nodeType": "ForStatement",
                  "src": "11622:114:10"
                },
                {
                  "expression": {
                    "id": 853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 849,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "11769:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 850,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "11784:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 851,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 810,
                        "src": "11799:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "11784:22:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11769:37:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 854,
                  "nodeType": "ExpressionStatement",
                  "src": "11769:37:10"
                },
                {
                  "expression": {
                    "id": 863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 855,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "11816:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 857,
                      "indexExpression": {
                        "id": 856,
                        "name": "_for",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 808,
                        "src": "11826:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11816:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 858,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51,
                          "src": "11834:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 860,
                        "indexExpression": {
                          "id": 859,
                          "name": "_for",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 808,
                          "src": "11844:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11834:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 861,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 810,
                        "src": "11852:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "11834:25:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11816:43:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 864,
                  "nodeType": "ExpressionStatement",
                  "src": "11816:43:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 868,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "11932:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11932:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 872,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11952:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Gauge_$1317",
                              "typeString": "contract Gauge"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Gauge_$1317",
                              "typeString": "contract Gauge"
                            }
                          ],
                          "id": 871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11944:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 870,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11944:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11944:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 874,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 810,
                        "src": "11959:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 865,
                        "name": "stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "11902:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2943",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3000,
                      "src": "11902:29:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2943_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2943_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11902:65:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 876,
                  "nodeType": "ExpressionStatement",
                  "src": "11902:65:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 878,
                        "name": "_for",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 808,
                        "src": "11989:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 879,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 810,
                        "src": "11995:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 877,
                      "name": "Staked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "11982:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11982:21:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 881,
                  "nodeType": "EmitStatement",
                  "src": "11977:26:10"
                }
              ]
            },
            "id": 883,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 813,
                    "name": "_for",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 808,
                    "src": "11451:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 814,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 812,
                  "name": "updateReward",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3373,
                  "src": "11438:12:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "11438:18:10"
              }
            ],
            "name": "_deposit",
            "nameLocation": "11373:8:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 808,
                  "mutability": "mutable",
                  "name": "_for",
                  "nameLocation": "11390:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 883,
                  "src": "11382:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 807,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11382:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 810,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "11404:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 883,
                  "src": "11396:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 809,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11396:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11381:31:10"
            },
            "returnParameters": {
              "id": 815,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11461:0:10"
            },
            "scope": 1317,
            "src": "11364:646:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 977,
              "nodeType": "Block",
              "src": "12462:610:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 900,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 886,
                          "src": "12480:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12490:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12480:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526577617264506f6f6c203a2043616e6e6f742077697468647261772030",
                        "id": 903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12493:32:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_64aa37ddb31e154d007d0dfd471fd4c2da015058fa9c8808df90f0cc24eedff1",
                          "typeString": "literal_string \"RewardPool : Cannot withdraw 0\""
                        },
                        "value": "RewardPool : Cannot withdraw 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_64aa37ddb31e154d007d0dfd471fd4c2da015058fa9c8808df90f0cc24eedff1",
                          "typeString": "literal_string \"RewardPool : Cannot withdraw 0\""
                        }
                      ],
                      "id": 899,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12472:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12472:54:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 905,
                  "nodeType": "ExpressionStatement",
                  "src": "12472:54:10"
                },
                {
                  "assignments": [
                    907
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 907,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "12589:6:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 977,
                      "src": "12581:14:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 906,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12581:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 910,
                  "initialValue": {
                    "expression": {
                      "id": 908,
                      "name": "extraRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "12598:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "12598:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12581:36:10"
                },
                {
                  "body": {
                    "id": 931,
                    "nodeType": "Block",
                    "src": "12664:83:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 927,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "12725:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 928,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "12725:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 922,
                                    "name": "extraRewards",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 54,
                                    "src": "12691:12:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 924,
                                  "indexExpression": {
                                    "id": 923,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 912,
                                    "src": "12704:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "12691:15:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 921,
                                "name": "IExtraReward",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3772,
                                "src": "12678:12:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IExtraReward_$3772_$",
                                  "typeString": "type(contract IExtraReward)"
                                }
                              },
                              "id": 925,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12678:29:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IExtraReward_$3772",
                                "typeString": "contract IExtraReward"
                              }
                            },
                            "id": 926,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rewardCheckpoint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3759,
                            "src": "12678:46:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) external returns (bool)"
                            }
                          },
                          "id": 929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12678:58:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 930,
                        "nodeType": "ExpressionStatement",
                        "src": "12678:58:10"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 915,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 912,
                      "src": "12647:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 916,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 907,
                      "src": "12651:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12647:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 932,
                  "initializationExpression": {
                    "assignments": [
                      912
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 912,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "12640:1:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 932,
                        "src": "12632:9:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 911,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12632:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 914,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12644:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "12632:13:10"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 919,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "12659:3:10",
                      "subExpression": {
                        "id": 918,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 912,
                        "src": "12659:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 920,
                    "nodeType": "ExpressionStatement",
                    "src": "12659:3:10"
                  },
                  "nodeType": "ForStatement",
                  "src": "12627:120:10"
                },
                {
                  "expression": {
                    "id": 937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 933,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "12757:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 936,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 934,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "12772:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 935,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 886,
                        "src": "12787:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "12772:22:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12757:37:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 938,
                  "nodeType": "ExpressionStatement",
                  "src": "12757:37:10"
                },
                {
                  "expression": {
                    "id": 949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 939,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "12804:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 942,
                      "indexExpression": {
                        "expression": {
                          "id": 940,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12814:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12814:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12804:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 943,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51,
                          "src": "12828:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 946,
                        "indexExpression": {
                          "expression": {
                            "id": 944,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "12838:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "12838:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12828:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 947,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 886,
                        "src": "12852:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "12828:31:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12804:55:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 950,
                  "nodeType": "ExpressionStatement",
                  "src": "12804:55:10"
                },
                {
                  "condition": {
                    "id": 951,
                    "name": "_claim",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 888,
                    "src": "12874:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 960,
                  "nodeType": "IfStatement",
                  "src": "12870:72:10",
                  "trueBody": {
                    "id": 959,
                    "nodeType": "Block",
                    "src": "12882:60:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 953,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "12907:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 954,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "12907:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 955,
                              "name": "_lock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 890,
                              "src": "12919:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 956,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12926:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 952,
                            "name": "_getReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1218,
                            "src": "12896:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$_t_bool_$returns$__$",
                              "typeString": "function (address,bool,bool)"
                            }
                          },
                          "id": 957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12896:35:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 958,
                        "nodeType": "ExpressionStatement",
                        "src": "12896:35:10"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 964,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12978:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12978:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 966,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 886,
                        "src": "12990:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 961,
                        "name": "stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "12952:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2943",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2974,
                      "src": "12952:25:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2943_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2943_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12952:46:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 968,
                  "nodeType": "ExpressionStatement",
                  "src": "12952:46:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 970,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13023:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13023:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 972,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 886,
                        "src": "13035:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 969,
                      "name": "Withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "13013:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13013:30:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 974,
                  "nodeType": "EmitStatement",
                  "src": "13008:35:10"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13061:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 898,
                  "id": 976,
                  "nodeType": "Return",
                  "src": "13054:11:10"
                }
              ]
            },
            "documentation": {
              "id": 884,
              "nodeType": "StructuredDocumentation",
              "src": "12016:304:10",
              "text": "@notice withdraw vault token from the gauge\n @dev This call update claimable rewards\n  @param _amount amount to withdraw\n   @param _claim claimm veYFI and aditional reward\n   @param _lock should the claimed rewards be locked in veYFI for the user\n   @return true"
            },
            "functionSelector": "92930b45",
            "id": 978,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 893,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "12435:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "12435:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 895,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 892,
                  "name": "updateReward",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3373,
                  "src": "12422:12:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "12422:24:10"
              }
            ],
            "name": "withdraw",
            "nameLocation": "12334:8:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 886,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "12360:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 978,
                  "src": "12352:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 885,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12352:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 888,
                  "mutability": "mutable",
                  "name": "_claim",
                  "nameLocation": "12382:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 978,
                  "src": "12377:11:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 887,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12377:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 890,
                  "mutability": "mutable",
                  "name": "_lock",
                  "nameLocation": "12403:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 978,
                  "src": "12398:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 889,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12398:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12342:72:10"
            },
            "returnParameters": {
              "id": 898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 897,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 978,
                  "src": "12456:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 896,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12456:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12455:6:10"
            },
            "scope": 1317,
            "src": "12325:747:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 999,
              "nodeType": "Block",
              "src": "13414:84:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 989,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51,
                          "src": "13433:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 992,
                        "indexExpression": {
                          "expression": {
                            "id": 990,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "13443:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "13443:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13433:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 993,
                        "name": "_claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 981,
                        "src": "13456:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 994,
                        "name": "_lock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 983,
                        "src": "13464:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 988,
                      "name": "withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 978,
                      "src": "13424:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$_t_bool_$returns$_t_bool_$",
                        "typeString": "function (uint256,bool,bool) returns (bool)"
                      }
                    },
                    "id": 995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13424:46:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 996,
                  "nodeType": "ExpressionStatement",
                  "src": "13424:46:10"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13487:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 987,
                  "id": 998,
                  "nodeType": "Return",
                  "src": "13480:11:10"
                }
              ]
            },
            "documentation": {
              "id": 979,
              "nodeType": "StructuredDocumentation",
              "src": "13078:264:10",
              "text": "@notice withdraw all vault token from gauge\n   @dev This call update claimable rewards\n   @param _claim claim veYFI and additional reward\n   @param _lock should the claimed rewards be locked in veYFI for the user\n   @return true"
            },
            "functionSelector": "6a4ac73b",
            "id": 1000,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "13356:8:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 981,
                  "mutability": "mutable",
                  "name": "_claim",
                  "nameLocation": "13370:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1000,
                  "src": "13365:11:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 980,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13365:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 983,
                  "mutability": "mutable",
                  "name": "_lock",
                  "nameLocation": "13383:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1000,
                  "src": "13378:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 982,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13378:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13364:25:10"
            },
            "returnParameters": {
              "id": 987,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 986,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1000,
                  "src": "13408:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 985,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13408:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13407:6:10"
            },
            "scope": 1317,
            "src": "13347:151:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1019,
              "nodeType": "Block",
              "src": "13744:84:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1009,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51,
                          "src": "13763:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1012,
                        "indexExpression": {
                          "expression": {
                            "id": 1010,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "13773:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "13773:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13763:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1013,
                        "name": "_claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1003,
                        "src": "13786:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 1014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13794:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1008,
                      "name": "withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 978,
                      "src": "13754:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$_t_bool_$returns$_t_bool_$",
                        "typeString": "function (uint256,bool,bool) returns (bool)"
                      }
                    },
                    "id": 1015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13754:46:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1016,
                  "nodeType": "ExpressionStatement",
                  "src": "13754:46:10"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13817:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1007,
                  "id": 1018,
                  "nodeType": "Return",
                  "src": "13810:11:10"
                }
              ]
            },
            "documentation": {
              "id": 1001,
              "nodeType": "StructuredDocumentation",
              "src": "13504:180:10",
              "text": "@notice withdraw all vault token from gauge\n  @dev This call update claimable rewards\n  @param _claim claim veYFI and additional reward\n  @return true"
            },
            "functionSelector": "a810a54c",
            "id": 1020,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "13698:8:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1003,
                  "mutability": "mutable",
                  "name": "_claim",
                  "nameLocation": "13712:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1020,
                  "src": "13707:11:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1002,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13707:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13706:13:10"
            },
            "returnParameters": {
              "id": 1007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1006,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1020,
                  "src": "13738:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1005,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13738:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13737:6:10"
            },
            "scope": 1317,
            "src": "13689:139:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1037,
              "nodeType": "Block",
              "src": "14006:83:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1027,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51,
                          "src": "14025:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1030,
                        "indexExpression": {
                          "expression": {
                            "id": 1028,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "14035:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "14035:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14025:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 1031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14048:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 1032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14055:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1026,
                      "name": "withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 978,
                      "src": "14016:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$_t_bool_$returns$_t_bool_$",
                        "typeString": "function (uint256,bool,bool) returns (bool)"
                      }
                    },
                    "id": 1033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14016:45:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1034,
                  "nodeType": "ExpressionStatement",
                  "src": "14016:45:10"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14078:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1025,
                  "id": 1036,
                  "nodeType": "Return",
                  "src": "14071:11:10"
                }
              ]
            },
            "documentation": {
              "id": 1021,
              "nodeType": "StructuredDocumentation",
              "src": "13834:123:10",
              "text": "@notice withdraw all vault token from gauge\n@dev This call update claimable rewards\n@return true"
            },
            "functionSelector": "3ccfd60b",
            "id": 1038,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "13971:8:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1022,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13979:2:10"
            },
            "returnParameters": {
              "id": 1025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1024,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1038,
                  "src": "14000:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1023,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14000:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13999:6:10"
            },
            "scope": 1317,
            "src": "13962:127:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1061,
              "nodeType": "Block",
              "src": "14394:81:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1053,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "14415:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14415:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1055,
                        "name": "_lock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1041,
                        "src": "14427:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 1056,
                        "name": "_claimExtras",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1043,
                        "src": "14434:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1052,
                      "name": "_getReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1218,
                      "src": "14404:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool,bool)"
                      }
                    },
                    "id": 1057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14404:43:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1058,
                  "nodeType": "ExpressionStatement",
                  "src": "14404:43:10"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14464:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1051,
                  "id": 1060,
                  "nodeType": "Return",
                  "src": "14457:11:10"
                }
              ]
            },
            "documentation": {
              "id": 1039,
              "nodeType": "StructuredDocumentation",
              "src": "14095:167:10",
              "text": " @notice\n  Get rewards\n @param _lock should the yfi be locked in veYFI\n @param _claimExtras claim extra rewards\n @return true"
            },
            "functionSelector": "425b6e2f",
            "id": 1062,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 1046,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "14355:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "14355:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1048,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1045,
                  "name": "updateReward",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3373,
                  "src": "14342:12:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "14342:24:10"
              }
            ],
            "name": "getReward",
            "nameLocation": "14276:9:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1041,
                  "mutability": "mutable",
                  "name": "_lock",
                  "nameLocation": "14291:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1062,
                  "src": "14286:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1040,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14286:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1043,
                  "mutability": "mutable",
                  "name": "_claimExtras",
                  "nameLocation": "14303:12:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1062,
                  "src": "14298:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1042,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14298:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14285:31:10"
            },
            "returnParameters": {
              "id": 1051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1050,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1062,
                  "src": "14384:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1049,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14384:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14383:6:10"
            },
            "scope": 1317,
            "src": "14267:208:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1083,
              "nodeType": "Block",
              "src": "14740:73:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1075,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "14761:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14761:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1077,
                        "name": "_lock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1065,
                        "src": "14773:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 1078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14780:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1074,
                      "name": "_getReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1218,
                      "src": "14750:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool,bool)"
                      }
                    },
                    "id": 1079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14750:35:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1080,
                  "nodeType": "ExpressionStatement",
                  "src": "14750:35:10"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14802:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1073,
                  "id": 1082,
                  "nodeType": "Return",
                  "src": "14795:11:10"
                }
              ]
            },
            "documentation": {
              "id": 1063,
              "nodeType": "StructuredDocumentation",
              "src": "14481:146:10",
              "text": " @notice\n  Get rewards and claim extra rewards\n  @param _lock should the yfi be locked in veYFI\n  @return true"
            },
            "functionSelector": "a4698feb",
            "id": 1084,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 1068,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "14701:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "14701:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1070,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1067,
                  "name": "updateReward",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3373,
                  "src": "14688:12:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "14688:24:10"
              }
            ],
            "name": "getReward",
            "nameLocation": "14641:9:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1065,
                  "mutability": "mutable",
                  "name": "_lock",
                  "nameLocation": "14656:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1084,
                  "src": "14651:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1064,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14651:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14650:12:10"
            },
            "returnParameters": {
              "id": 1073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1072,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1084,
                  "src": "14730:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1071,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14730:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14729:6:10"
            },
            "scope": 1317,
            "src": "14632:181:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1103,
              "nodeType": "Block",
              "src": "15009:73:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1095,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "15030:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "15030:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 1097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15042:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 1098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15049:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1094,
                      "name": "_getReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1218,
                      "src": "15019:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool,bool)"
                      }
                    },
                    "id": 1099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15019:35:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1100,
                  "nodeType": "ExpressionStatement",
                  "src": "15019:35:10"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "15071:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1093,
                  "id": 1102,
                  "nodeType": "Return",
                  "src": "15064:11:10"
                }
              ]
            },
            "documentation": {
              "id": 1085,
              "nodeType": "StructuredDocumentation",
              "src": "14819:115:10",
              "text": " @notice\n  Get rewards and claim extra rewards, do not lock YFI earned\n  @return true"
            },
            "functionSelector": "3d18b912",
            "id": 1104,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 1088,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "14982:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "14982:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1090,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1087,
                  "name": "updateReward",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3373,
                  "src": "14969:12:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "14969:24:10"
              }
            ],
            "name": "getReward",
            "nameLocation": "14948:9:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1086,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14957:2:10"
            },
            "returnParameters": {
              "id": 1093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1092,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1104,
                  "src": "15003:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1091,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15003:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15002:6:10"
            },
            "scope": 1317,
            "src": "14939:143:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1125,
              "nodeType": "Block",
              "src": "15444:79:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1118,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1107,
                        "src": "15465:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 1119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15475:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "id": 1120,
                        "name": "_claimExtras",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1109,
                        "src": "15482:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1117,
                      "name": "_getReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1218,
                      "src": "15454:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool,bool)"
                      }
                    },
                    "id": 1121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15454:41:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1122,
                  "nodeType": "ExpressionStatement",
                  "src": "15454:41:10"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "15512:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1116,
                  "id": 1124,
                  "nodeType": "Return",
                  "src": "15505:11:10"
                }
              ]
            },
            "documentation": {
              "id": 1105,
              "nodeType": "StructuredDocumentation",
              "src": "15088:217:10",
              "text": " @notice\n  Get rewards for an account\n @dev rewards are transfer to _account\n @param _account to claim rewards for\n @param _claimExtras claim extra rewards\n @return true"
            },
            "functionSelector": "f579513f",
            "id": 1126,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1112,
                    "name": "_account",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1107,
                    "src": "15407:8:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1113,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1111,
                  "name": "updateReward",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3373,
                  "src": "15394:12:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "15394:22:10"
              }
            ],
            "name": "getRewardFor",
            "nameLocation": "15319:12:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1107,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "15340:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1126,
                  "src": "15332:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15332:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1109,
                  "mutability": "mutable",
                  "name": "_claimExtras",
                  "nameLocation": "15355:12:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1126,
                  "src": "15350:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1108,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15350:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15331:37:10"
            },
            "returnParameters": {
              "id": 1116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1115,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1126,
                  "src": "15434:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1114,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15434:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15433:6:10"
            },
            "scope": 1317,
            "src": "15310:213:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1217,
              "nodeType": "Block",
              "src": "15637:697:10",
              "statements": [
                {
                  "assignments": [
                    1136
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1136,
                      "mutability": "mutable",
                      "name": "reward",
                      "nameLocation": "15655:6:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1217,
                      "src": "15647:14:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1135,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15647:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1140,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1137,
                      "name": "rewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3298,
                      "src": "15664:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1139,
                    "indexExpression": {
                      "id": 1138,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1128,
                      "src": "15672:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "15664:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15647:34:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1141,
                      "name": "reward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1136,
                      "src": "15695:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15704:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "15695:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1186,
                  "nodeType": "IfStatement",
                  "src": "15691:365:10",
                  "trueBody": {
                    "id": 1185,
                    "nodeType": "Block",
                    "src": "15707:349:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1144,
                              "name": "rewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3298,
                              "src": "15721:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1146,
                            "indexExpression": {
                              "id": 1145,
                              "name": "_account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1128,
                              "src": "15729:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "15721:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15741:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "15721:21:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1149,
                        "nodeType": "ExpressionStatement",
                        "src": "15721:21:10"
                      },
                      {
                        "condition": {
                          "id": 1150,
                          "name": "_lock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1130,
                          "src": "15760:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1178,
                          "nodeType": "Block",
                          "src": "15923:75:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1174,
                                    "name": "_account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1128,
                                    "src": "15966:8:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1175,
                                    "name": "reward",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1136,
                                    "src": "15976:6:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1171,
                                    "name": "rewardToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3273,
                                    "src": "15941:11:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$2943",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1173,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2974,
                                  "src": "15941:24:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2943_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2943_$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 1176,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15941:42:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1177,
                              "nodeType": "ExpressionStatement",
                              "src": "15941:42:10"
                            }
                          ]
                        },
                        "id": 1179,
                        "nodeType": "IfStatement",
                        "src": "15756:242:10",
                        "trueBody": {
                          "id": 1170,
                          "nodeType": "Block",
                          "src": "15767:150:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 1156,
                                        "name": "veToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 23,
                                        "src": "15813:7:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1155,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "15805:7:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1154,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "15805:7:10",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1157,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "15805:16:10",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1158,
                                    "name": "reward",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1136,
                                    "src": "15823:6:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1151,
                                    "name": "rewardToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3273,
                                    "src": "15785:11:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$2943",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1153,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "approve",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2912,
                                  "src": "15785:19:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 1159,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15785:45:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1160,
                              "nodeType": "ExpressionStatement",
                              "src": "15785:45:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1165,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "15883:3:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1166,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "15883:10:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1167,
                                    "name": "reward",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1136,
                                    "src": "15895:6:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1162,
                                        "name": "veToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 23,
                                        "src": "15862:7:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1161,
                                      "name": "IVotingEscrow",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2074,
                                      "src": "15848:13:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IVotingEscrow_$2074_$",
                                        "typeString": "type(contract IVotingEscrow)"
                                      }
                                    },
                                    "id": 1163,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "15848:22:10",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IVotingEscrow_$2074",
                                      "typeString": "contract IVotingEscrow"
                                    }
                                  },
                                  "id": 1164,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "deposit_for",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2046,
                                  "src": "15848:34:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256) external"
                                  }
                                },
                                "id": 1168,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15848:54:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1169,
                              "nodeType": "ExpressionStatement",
                              "src": "15848:54:10"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1181,
                              "name": "_account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1128,
                              "src": "16028:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1182,
                              "name": "reward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1136,
                              "src": "16038:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1180,
                            "name": "RewardPaid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3322,
                            "src": "16017:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16017:28:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1184,
                        "nodeType": "EmitStatement",
                        "src": "16012:33:10"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 1187,
                    "name": "_claimExtras",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1132,
                    "src": "16116:12:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1216,
                  "nodeType": "IfStatement",
                  "src": "16112:216:10",
                  "trueBody": {
                    "id": 1215,
                    "nodeType": "Block",
                    "src": "16130:198:10",
                    "statements": [
                      {
                        "assignments": [
                          1189
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1189,
                            "mutability": "mutable",
                            "name": "length",
                            "nameLocation": "16152:6:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1215,
                            "src": "16144:14:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1188,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "16144:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1192,
                        "initialValue": {
                          "expression": {
                            "id": 1190,
                            "name": "extraRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "16161:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 1191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "16161:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16144:36:10"
                      },
                      {
                        "body": {
                          "id": 1213,
                          "nodeType": "Block",
                          "src": "16231:87:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1209,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "16292:3:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1210,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "16292:10:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "id": 1204,
                                          "name": "extraRewards",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 54,
                                          "src": "16262:12:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 1206,
                                        "indexExpression": {
                                          "id": 1205,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1194,
                                          "src": "16275:1:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "16262:15:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1203,
                                      "name": "IExtraReward",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3772,
                                      "src": "16249:12:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IExtraReward_$3772_$",
                                        "typeString": "type(contract IExtraReward)"
                                      }
                                    },
                                    "id": 1207,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "16249:29:10",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IExtraReward_$3772",
                                      "typeString": "contract IExtraReward"
                                    }
                                  },
                                  "id": 1208,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getRewardFor",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3766,
                                  "src": "16249:42:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (address) external returns (bool)"
                                  }
                                },
                                "id": 1211,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16249:54:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1212,
                              "nodeType": "ExpressionStatement",
                              "src": "16249:54:10"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1197,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1194,
                            "src": "16214:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1198,
                            "name": "length",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1189,
                            "src": "16218:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16214:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1214,
                        "initializationExpression": {
                          "assignments": [
                            1194
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1194,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "16207:1:10",
                              "nodeType": "VariableDeclaration",
                              "scope": 1214,
                              "src": "16199:9:10",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1193,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "16199:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1196,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16211:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "16199:13:10"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "16226:3:10",
                            "subExpression": {
                              "id": 1200,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1194,
                              "src": "16226:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1202,
                          "nodeType": "ExpressionStatement",
                          "src": "16226:3:10"
                        },
                        "nodeType": "ForStatement",
                        "src": "16194:124:10"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 1218,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getReward",
            "nameLocation": "15538:10:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1128,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "15566:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1218,
                  "src": "15558:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1127,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15558:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1130,
                  "mutability": "mutable",
                  "name": "_lock",
                  "nameLocation": "15589:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1218,
                  "src": "15584:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1129,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15584:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1132,
                  "mutability": "mutable",
                  "name": "_claimExtras",
                  "nameLocation": "15609:12:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1218,
                  "src": "15604:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1131,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15604:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15548:79:10"
            },
            "returnParameters": {
              "id": 1134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15637:0:10"
            },
            "scope": 1317,
            "src": "15529:805:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1249,
              "nodeType": "Block",
              "src": "16548:237:10",
              "statements": [
                {
                  "assignments": [
                    1225
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1225,
                      "mutability": "mutable",
                      "name": "toTransfer",
                      "nameLocation": "16566:10:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1249,
                      "src": "16558:18:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1224,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16558:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1227,
                  "initialValue": {
                    "id": 1226,
                    "name": "queuedPenalty",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 45,
                    "src": "16579:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16558:34:10"
                },
                {
                  "expression": {
                    "id": 1230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1228,
                      "name": "queuedPenalty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "16602:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16618:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "16602:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1231,
                  "nodeType": "ExpressionStatement",
                  "src": "16602:17:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1236,
                        "name": "veYfiRewardPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "16658:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1237,
                        "name": "toTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1225,
                        "src": "16675:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1233,
                            "name": "rewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3273,
                            "src": "16637:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$2943",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$2943",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 1232,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2943,
                          "src": "16630:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$2943_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16630:19:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2943",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2912,
                      "src": "16630:27:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16630:56:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1239,
                  "nodeType": "ExpressionStatement",
                  "src": "16630:56:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1244,
                        "name": "toTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1225,
                        "src": "16746:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1241,
                            "name": "veYfiRewardPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "16713:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1240,
                          "name": "IVeYfiRewardPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3822,
                          "src": "16696:16:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVeYfiRewardPool_$3822_$",
                            "typeString": "type(contract IVeYfiRewardPool)"
                          }
                        },
                        "id": 1242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16696:33:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVeYfiRewardPool_$3822",
                          "typeString": "contract IVeYfiRewardPool"
                        }
                      },
                      "id": 1243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "queueNewRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3821,
                      "src": "16696:49:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) external returns (bool)"
                      }
                    },
                    "id": 1245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16696:61:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1246,
                  "nodeType": "ExpressionStatement",
                  "src": "16696:61:10"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "16774:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1223,
                  "id": 1248,
                  "nodeType": "Return",
                  "src": "16767:11:10"
                }
              ]
            },
            "documentation": {
              "id": 1219,
              "nodeType": "StructuredDocumentation",
              "src": "16340:146:10",
              "text": " @notice\n Transfer penalty to the veYFIRewardContract\n @dev Penalty are queued in this contract.\n @return true"
            },
            "functionSelector": "26f553e9",
            "id": 1250,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferQueuedPenalty",
            "nameLocation": "16500:21:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16521:2:10"
            },
            "returnParameters": {
              "id": 1223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1222,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1250,
                  "src": "16542:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1221,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "16542:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16541:6:10"
            },
            "scope": 1317,
            "src": "16491:294:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1292,
              "nodeType": "Block",
              "src": "17042:316:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1259,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "17073:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "17073:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1261,
                            "name": "rewardManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "17087:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "17073:27:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1263,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "17104:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "17104:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1265,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3855,
                              "src": "17118:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17118:7:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "17104:21:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "17073:52:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "21617574686f72697a6564",
                        "id": 1269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17139:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        },
                        "value": "!authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7031b85265729c6983ea6d4e363a4efb2dd08bdad971b2517bc786f89231cb6",
                          "typeString": "literal_string \"!authorized\""
                        }
                      ],
                      "id": 1258,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17052:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17052:110:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1271,
                  "nodeType": "ExpressionStatement",
                  "src": "17052:110:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1273,
                          "name": "_rewardManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1253,
                          "src": "17181:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17207:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "17199:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1274,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "17199:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17199:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "17181:28:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5f7265776172644d616e61676572203078302061646472657373",
                        "id": 1279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17211:28:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dc26200552adbf1ec52efdaeb894dabbcc9d530fd746d2f52e6bdfd7d47e23c6",
                          "typeString": "literal_string \"_rewardManager 0x0 address\""
                        },
                        "value": "_rewardManager 0x0 address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dc26200552adbf1ec52efdaeb894dabbcc9d530fd746d2f52e6bdfd7d47e23c6",
                          "typeString": "literal_string \"_rewardManager 0x0 address\""
                        }
                      ],
                      "id": 1272,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17173:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17173:67:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1281,
                  "nodeType": "ExpressionStatement",
                  "src": "17173:67:10"
                },
                {
                  "expression": {
                    "id": 1284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1282,
                      "name": "rewardManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "17250:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1283,
                      "name": "_rewardManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1253,
                      "src": "17266:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "17250:30:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1285,
                  "nodeType": "ExpressionStatement",
                  "src": "17250:30:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1287,
                        "name": "rewardManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "17316:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1286,
                      "name": "UpdatedRewardManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "17295:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17295:35:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1289,
                  "nodeType": "EmitStatement",
                  "src": "17290:40:10"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "17347:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1257,
                  "id": 1291,
                  "nodeType": "Return",
                  "src": "17340:11:10"
                }
              ]
            },
            "documentation": {
              "id": 1251,
              "nodeType": "StructuredDocumentation",
              "src": "16791:172:10",
              "text": " @notice\n set reward manager\n @dev Can be called by rewardManager or owner\n @param _rewardManager new reward manager\n @return true"
            },
            "functionSelector": "153ee554",
            "id": 1293,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setRewardManager",
            "nameLocation": "16977:16:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1253,
                  "mutability": "mutable",
                  "name": "_rewardManager",
                  "nameLocation": "17002:14:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1293,
                  "src": "16994:22:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1252,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16994:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16993:24:10"
            },
            "returnParameters": {
              "id": 1257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1256,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1293,
                  "src": "17036:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1255,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17036:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17035:6:10"
            },
            "scope": 1317,
            "src": "16968:390:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3495
            ],
            "body": {
              "id": 1315,
              "nodeType": "Block",
              "src": "17483:101:10",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1301,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1295,
                        "src": "17512:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 1304,
                            "name": "rewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3273,
                            "src": "17530:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$2943",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$2943",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 1303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17522:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1302,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17522:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17522:20:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "17512:30:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1307,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1295,
                        "src": "17546:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 1310,
                            "name": "stakingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "17564:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$2943",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$2943",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 1309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17556:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1308,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17556:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17556:21:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "17546:31:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "17512:65:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1300,
                  "id": 1314,
                  "nodeType": "Return",
                  "src": "17493:84:10"
                }
              ]
            },
            "id": 1316,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_notProtectedTokens",
            "nameLocation": "17373:19:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1297,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "17447:8:10"
            },
            "parameters": {
              "id": 1296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1295,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "17401:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1316,
                  "src": "17393:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1294,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17393:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17392:16:10"
            },
            "returnParameters": {
              "id": 1300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1299,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1316,
                  "src": "17473:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1298,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17473:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17472:6:10"
            },
            "scope": 1317,
            "src": "17364:220:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1318,
        "src": "705:16881:10",
        "usedErrors": []
      }
    ],
    "src": "32:17555:10"
  },
  "bytecode": "608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61291b8061007e6000396000f3fe608060405234801561001057600080fd5b506004361061030b5760003560e01c80637a2388551161019d578063c1a287e2116100e9578063deee8e54116100a2578063f2fde38b1161007c578063f2fde38b14610629578063f579513f1461063c578063f6be71d11461064f578063f7c618c11461066257600080fd5b8063deee8e5414610604578063df136d6514610617578063ebe2b12b1461062057600080fd5b8063c1a287e2146105c6578063c8f33c91146105d0578063cc2a9a5b146105d9578063cd3daf9d146105ec578063d0e30db0146105f4578063d55a23f4146105fc57600080fd5b8063920e821711610156578063a4698feb11610130578063a4698feb1461057a578063a80ff90a1461058d578063a810a54c146105a0578063b6b55f25146105b357600080fd5b8063920e82171461054a57806392930b45146105545780639e15977f1461056757600080fd5b80637a238855146104ec5780637b0a47ee146104ff57806380faa57d146105085780638b876347146105105780638da5cb5b14610530578063901a7d531461054157600080fd5b80633ccfd60b1161025c5780635e43c47b116102155780636a4ac73b116101ef5780636a4ac73b1461049557806370a08231146104a8578063715018a6146104d157806372f702f3146104d957600080fd5b80635e43c47b1461046e57806363d38c3b1461048157806365a5d5f01461048a57600080fd5b80633ccfd60b1461041c5780633d18b9121461042457806340c354461461042c578063425b6e2f1461043f57806342886b6714610452578063590a41f51461045b57600080fd5b8063153ee554116102c9578063262d3d6d116102a3578063262d3d6d146103e557806326f553e9146103ee5780632f4f21e2146103f65780633b92eb231461040957600080fd5b8063153ee554146103b757806318160ddd146103ca5780631beabcd2146103d257600080fd5b80628cc2621461031057806301681a62146103365780630569d388146103595780630700037d146103635780630f4ef8a6146103835780630fb5a6b4146103ae575b600080fd5b61032361031e366004612529565b610675565b6040519081526020015b60405180910390f35b610349610344366004612529565b6106d0565b604051901515815260200161032d565b610361610821565b005b610323610371366004612529565b600b6020526000908152604090205481565b600f54610396906001600160a01b031681565b6040516001600160a01b03909116815260200161032d565b61032360025481565b6103496103c5366004612529565b610891565b601154610323565b6103236103e0366004612529565b610982565b61032360095481565b610349610993565b610349610404366004612544565b610a8f565b600d54610396906001600160a01b031681565b610349610aa4565b610349610ac7565b61039661043a36600461256e565b610ae9565b61034961044d366004612595565b610b13565b61032360105481565b61034961046936600461256e565b610b34565b61034961047c366004612529565b610c53565b61032360075481565b610323630784ce0081565b6103496104a3366004612595565b610d5a565b6103236104b6366004612529565b6001600160a01b031660009081526012602052604090205490565b610361610d75565b600c54610396906001600160a01b031681565b6103616104fa366004612529565b610da9565b61032360045481565b610323610e28565b61032361051e366004612529565b600a6020526000908152604090205481565b6000546001600160a01b0316610396565b61032360085481565b610323620f424081565b6103496105623660046125ce565b610e3b565b600e54610396906001600160a01b031681565b610349610588366004612610565b610fe9565b61034961059b366004612529565b611001565b6103496105ae366004612610565b6111d1565b6103496105c136600461256e565b6111ec565b61032362278d0081565b61032360055481565b6103616105e736600461262d565b611200565b610323611473565b61034961147d565b601354610323565b610323610612366004612529565b611573565b61032360065481565b61032360035481565b610361610637366004612529565b61157e565b61034961064a3660046126a1565b611619565b61036161065d36600461256e565b611631565b600154610396906001600160a01b031681565b600080610681836116eb565b6001600160a01b0384166000908152600b6020526040902054909150620f4240826106ab8661173d565b6106b591906126d3565b6106bf91906126f2565b6106c99190612714565b9392505050565b600080546001600160a01b031633146107045760405162461bcd60e51b81526004016106fb9061272c565b60405180910390fd5b61070d8261189c565b61074b5760405162461bcd60e51b815260206004820152600f60248201526e383937ba32b1ba32b2103a37b5b2b760891b60448201526064016106fb565b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa158015610792573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b69190612761565b90506107d4836107ce6000546001600160a01b031690565b836118ce565b604080516001600160a01b0385168152602081018390527fab2246061d7b0dd3631d037e3f6da75782ae489eeb9f6af878a4b25df9b07c77910160405180910390a160019150505b919050565b600f546001600160a01b0316331461084b5760405162461bcd60e51b81526004016106fb9061277a565b7f90503a14a60f24042ca91fabb5544c78b3845cf06963fb78adac5538b9138111601360405161087b919061279f565b60405180910390a161088f601360006124e4565b565b600f546000906001600160a01b03163314806108b757506000546001600160a01b031633145b6108d35760405162461bcd60e51b81526004016106fb9061277a565b6001600160a01b0382166109295760405162461bcd60e51b815260206004820152601a60248201527f5f7265776172644d616e6167657220307830206164647265737300000000000060448201526064016106fb565b600f80546001600160a01b0319166001600160a01b0384169081179091556040519081527f79ecf8371e520ae99bd7ba1f0e87dcc921a946d9ca58230eef986803e0ac9c459060200160405180910390a1506001919050565b600061098d82611936565b92915050565b60108054600091829055600154600e5460405163095ea7b360e01b81526001600160a01b0391821660048201526024810184905291169063095ea7b3906044016020604051808303816000875af11580156109f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1691906127ef565b50600e5460405163590a41f560e01b8152600481018390526001600160a01b039091169063590a41f5906024016020604051808303816000875af1158015610a62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8691906127ef565b50600191505090565b6000610a9b8383611ac3565b50600192915050565b33600090815260126020526040812054610abf908280610e3b565b506001905090565b600033610ad381611c76565b610ae03360006001611df3565b600191505b5090565b60138181548110610af957600080fd5b6000918252602090912001546001600160a01b0316905081565b600033610b1f81611c76565b610b2a338585611df3565b5060019392505050565b600081610b695760405162461bcd60e51b815260206004820152600360248201526203d3d360ec1b60448201526064016106fb565b600154610b81906001600160a01b0316333085612029565b60408051338152602081018490527f1c88aa9a39b1a6357a85c97a3bd4e2b0738e74c68b92928276bc85f495b2450b910160405180910390a1600754610bc79083612714565b91506003544210610be757610bdb82612061565b50506000600755600190565b6000600254600354610bf9919061280c565b610c03904261280c565b9050600060045482610c1591906126d3565b905083600a610c2583600c6126d3565b610c2f91906126f2565b1015610c4857610c3e84612061565b6000600755610b2a565b505050600755600190565b600f546000906001600160a01b03163314610c805760405162461bcd60e51b81526004016106fb9061277a565b6001600160a01b038216610cc85760405162461bcd60e51b815260206004820152600f60248201526e217265776172642073657474696e6760881b60448201526064016106fb565b6040516001600160a01b03831681527f7a486d506196e4ae0e0b063acca8cb3e3128c1ba505cd447ed148222c2d0b1539060200160405180910390a15060138054600180820183556000929092527f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a0900180546001600160a01b0319166001600160a01b03939093169290921790915590565b33600090815260126020526040812054610b2a908484610e3b565b6000546001600160a01b03163314610d9f5760405162461bcd60e51b81526004016106fb9061272c565b61088f6000612157565b6000546001600160a01b03163314610dd35760405162461bcd60e51b81526004016106fb9061272c565b600d80546001600160a01b0319166001600160a01b0383169081179091556040519081527f0f382d8404a45286f6180665c3eb5574df3e6efdd99ad2e652d8f5d904f264f0906020015b60405180910390a150565b6000610e36426003546121a7565b905090565b600033610e4781611c76565b60008511610e975760405162461bcd60e51b815260206004820152601e60248201527f526577617264506f6f6c203a2043616e6e6f742077697468647261772030000060448201526064016106fb565b60135460005b81811015610f425760138181548110610eb857610eb8612823565b6000918252602090912001546040516314640f3760e31b81523360048201526001600160a01b039091169063a32079b8906024016020604051808303816000875af1158015610f0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2f91906127ef565b5080610f3a81612839565b915050610e9d565b5085601154610f51919061280c565b60115533600090815260126020526040902054610f6f90879061280c565b336000908152601260205260409020558415610f9157610f9133856001611df3565b600c54610fa8906001600160a01b031633886118ce565b60405186815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d59060200160405180910390a250600195945050505050565b600033610ff581611c76565b610a9b33846001611df3565b600f546000906001600160a01b0316331461102e5760405162461bcd60e51b81526004016106fb9061277a565b6013546000199060005b8181101561109257846001600160a01b03166013828154811061105d5761105d612823565b6000918252602090912001546001600160a01b0316141561108057809250611092565b8061108a81612839565b915050611038565b506000198214156110de5760405162461bcd60e51b8152602060048201526016602482015275195e1d1c98481c995dd85c99081b9bdd08199bdd5b9960521b60448201526064016106fb565b6040516001600160a01b03851681527f8b6e4849b65ba893304022bd0f251b5584e334b1e08550e629e83d733745ed469060200160405180910390a16013805461112a9060019061280c565b8154811061113a5761113a612823565b600091825260209091200154601380546001600160a01b03909216918490811061116657611166612823565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060138054806111a5576111a5612854565b600082815260209020810160001990810180546001600160a01b03191690550190555060019392505050565b33600090815260126020526040812054610a9b908383610e3b565b60006111f83383611ac3565b506001919050565b600054600160a81b900460ff1661122457600054600160a01b900460ff1615611228565b303b155b61128b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106fb565b600054600160a81b900460ff161580156112b5576000805461ffff60a01b191661010160a01b1790555b6001600160a01b03871661130b5760405162461bcd60e51b815260206004820152601960248201527f5f7374616b696e67546f6b656e2030783020616464726573730000000000000060448201526064016106fb565b6001600160a01b0383166113535760405162461bcd60e51b815260206004820152600f60248201526e5f766520307830206164647265737360881b60448201526064016106fb565b6001600160a01b0382166113a95760405162461bcd60e51b815260206004820152601c60248201527f5f7665596669526577617264506f6f6c2030783020616464726573730000000060448201526064016106fb565b6113b386866121bd565b600c80546001600160a01b038981166001600160a01b03199283168117909355600d80548783169084168117909155600f80548984169085168117909155600e8054888516951685179055604080519586528b84166020870152928a16928501929092526060840191909152608083015260a08201527f58ca036ed94ee2b2004adac9f54a88961a882010564179aefa6106f7977102a99060c00160405180910390a1801561146a576000805460ff60a81b191690555b50505050505050565b6000610e36612242565b600c546040516370a0823160e01b81523360048201526000918291611567916001600160a01b0316906370a0823190602401602060405180830381865afa1580156114cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114f09190612761565b600c54604051636eb1769f60e11b81523360048201523060248201526001600160a01b039091169063dd62ed3e90604401602060405180830381865afa15801561153e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115629190612761565b6121a7565b9050610ae03382611ac3565b600061098d8261173d565b6000546001600160a01b031633146115a85760405162461bcd60e51b81526004016106fb9061272c565b6001600160a01b03811661160d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106fb565b61161681612157565b50565b60008261162581611c76565b610b2a84600085611df3565b6000546001600160a01b0316331461165b5760405162461bcd60e51b81526004016106fb9061272c565b600061166681611c76565b6003544210156116a457600042600354611680919061280c565b905060006004548261169291906126d3565b905061169e84826126f2565b60045550505b60028290556004546040805184815260208101929092527ff899c6d536e6cda78c5f4dce43ca0e8c47167deb2875ea8b777f21cc85899b1f91015b60405180910390a15050565b6001600160a01b0381166000908152600a6020526040812054670de0b6b3a764000090611716612242565b611720919061280c565b61172984611936565b61173391906126d3565b61098d91906126f2565b600d5460408051631705a3bd60e01b815290516000926001600160a01b031691631705a3bd9160048083019260209291908290030181865afa158015611787573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ab91906127ef565b156117ba5750620f4240919050565b600d5460405163adc6358960e01b81526001600160a01b038481166004830152600092169063adc6358990602401602060405180830381865afa158015611805573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118299190612761565b90508015806118385750428111155b156118465750600092915050565b6000611852428361280c565b905062278d0061186682630784ce0061280c565b10156118785750620f42409392505050565b630784ce0061188a82620f42406126d3565b61189491906126f2565b949350505050565b6001546000906001600160a01b0383811691161480159061098d575050600c546001600160a01b039081169116141590565b6040516001600160a01b03831660248201526044810182905261193190849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526122a6565b505050565b600080600d60009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561198c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119b09190612761565b9050806119d45750506001600160a01b031660009081526012602052604090205490565b600d546040516370a0823160e01b81526001600160a01b0385811660048301526106c9926064928592909116906370a0823190602401602060405180830381865afa158015611a27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a4b9190612761565b601154611a5891906126d3565b611a6291906126f2565b611a6d90603c6126d3565b6001600160a01b038616600090815260126020526040902054611a919060286126d3565b611a9b9190612714565b611aa591906126f2565b6001600160a01b0385166000908152601260205260409020546121a7565b81611acd81611c76565b60008211611b1d5760405162461bcd60e51b815260206004820152601d60248201527f526577617264506f6f6c203a2043616e6e6f74206465706f736974203000000060448201526064016106fb565b60135460005b81811015611bca5760138181548110611b3e57611b3e612823565b6000918252602090912001546040516314640f3760e31b81526001600160a01b0387811660048301529091169063a32079b8906024016020604051808303816000875af1158015611b93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bb791906127ef565b5080611bc281612839565b915050611b23565b5082601154611bd99190612714565b6011556001600160a01b038416600090815260126020526040902054611c00908490612714565b6001600160a01b03808616600090815260126020526040902091909155600c54611c2d9116333086612029565b836001600160a01b03167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d84604051611c6891815260200190565b60405180910390a250505050565b611c7e612242565b600655611c89610e28565b6005556001600160a01b03811615611616576001600160a01b03811660009081526012602052604090205415611d7b576000611cc4826116eb565b90506000611cd183612378565b90506000620f424083611ce38661173d565b611cf090620f424061280c565b611cfa91906126d3565b611d0491906126f2565b9050611d10818461280c565b6001600160a01b0385166000908152600b602052604081208054909190611d38908490612714565b925050819055508060106000828254611d519190612714565b90915550611d619050838361280c565b60076000828254611d729190612714565b90915550505050505b6006546001600160a01b0382166000818152600a60208181526040808420869055600554600b835293819020549282528051948552908401859052830191909152606082015260808101919091527ffbe590c835e1c07f8e971c36021d1be46f43f7b0b6dc5413dbd5753590569d589060a001610e1d565b6001600160a01b0383166000908152600b60205260409020548015611f6f576001600160a01b0384166000908152600b60205260408120558215611f1457600154600d5460405163095ea7b360e01b81526001600160a01b0391821660048201526024810184905291169063095ea7b3906044016020604051808303816000875af1158015611e86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eaa91906127ef565b50600d54604051631d23139f60e11b8152336004820152602481018390526001600160a01b0390911690633a46273e90604401600060405180830381600087803b158015611ef757600080fd5b505af1158015611f0b573d6000803e3d6000fd5b50505050611f2b565b600154611f2b906001600160a01b031685836118ce565b836001600160a01b03167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e048682604051611f6691815260200190565b60405180910390a25b81156120235760135460005b818110156120205760138181548110611f9657611f96612823565b60009182526020909120015460405163055de27560e01b81523360048201526001600160a01b039091169063055de275906024016020604051808303816000875af1158015611fe9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061200d91906127ef565b508061201881612839565b915050611f7b565b50505b50505050565b6040516001600160a01b03808516602483015283166044820152606481018290526120239085906323b872dd60e01b906084016118fa565b600061206c81611c76565b8160095461207a9190612714565b600955600354421061209b5760025461209390836126f2565b6004556120df565b6000426003546120ab919061280c565b90506000600454826120bd91906126d3565b90506120c98185612714565b9350600254846120d991906126f2565b60045550505b60088290554260058190556002546120f691612714565b600381905560085460055460045460095460408051948552602085019390935291830193909352606082019290925260808101919091527f944ffd3678415a15cbfef07dd7d9f20cdc6f36d12588a4ba7e8eb440f32c61be9060a0016116df565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008183106121b657816106c9565b5090919050565b6001600160a01b0382166122135760405162461bcd60e51b815260206004820152601860248201527f5f726577617264546f6b656e203078302061646472657373000000000000000060448201526064016106fb565b600180546001600160a01b0319166001600160a01b03841617905562093a8060025561223e81612157565b5050565b600061224d60115490565b612258575060065490565b601154600454600554612269610e28565b612273919061280c565b61227d91906126d3565b61228f90670de0b6b3a76400006126d3565b61229991906126f2565b600654610e369190612714565b60006122fb826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166123d09092919063ffffffff16565b805190915015611931578080602001905181019061231991906127ef565b6119315760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016106fb565b6001600160a01b0381166000908152600a6020526040812054670de0b6b3a7640000906123a3612242565b6123ad919061280c565b6001600160a01b03841660009081526012602052604090205461173391906126d3565b60606118948484600085856001600160a01b0385163b6124325760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106fb565b600080866001600160a01b0316858760405161244e9190612896565b60006040518083038185875af1925050503d806000811461248b576040519150601f19603f3d011682016040523d82523d6000602084013e612490565b606091505b50915091506124a08282866124ab565b979650505050505050565b606083156124ba5750816106c9565b8251156124ca5782518084602001fd5b8160405162461bcd60e51b81526004016106fb91906128b2565b508054600082559060005260206000209081019061161691905b80821115610ae557600081556001016124fe565b80356001600160a01b038116811461081c57600080fd5b60006020828403121561253b57600080fd5b6106c982612512565b6000806040838503121561255757600080fd5b61256083612512565b946020939093013593505050565b60006020828403121561258057600080fd5b5035919050565b801515811461161657600080fd5b600080604083850312156125a857600080fd5b82356125b381612587565b915060208301356125c381612587565b809150509250929050565b6000806000606084860312156125e357600080fd5b8335925060208401356125f581612587565b9150604084013561260581612587565b809150509250925092565b60006020828403121561262257600080fd5b81356106c981612587565b60008060008060008060c0878903121561264657600080fd5b61264f87612512565b955061265d60208801612512565b945061266b60408801612512565b935061267960608801612512565b925061268760808801612512565b915061269560a08801612512565b90509295509295509295565b600080604083850312156126b457600080fd5b6125b383612512565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156126ed576126ed6126bd565b500290565b60008261270f57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115612727576127276126bd565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561277357600080fd5b5051919050565b6020808252600b908201526a08585d5d1a1bdc9a5e995960aa1b604082015260600190565b6020808252825482820181905260008481528281209092916040850190845b818110156127e35783546001600160a01b0316835260019384019392850192016127be565b50909695505050505050565b60006020828403121561280157600080fd5b81516106c981612587565b60008282101561281e5761281e6126bd565b500390565b634e487b7160e01b600052603260045260246000fd5b600060001982141561284d5761284d6126bd565b5060010190565b634e487b7160e01b600052603160045260246000fd5b60005b8381101561288557818101518382015260200161286d565b838111156120235750506000910152565b600082516128a881846020870161286a565b9190910192915050565b60208152600082518060208401526128d181604085016020870161286a565b601f01601f1916919091016040019291505056fea264697066735822122060d44fafd2a6f74cee023d9a1e77dc96b76d8320a93eaf21e2103e6fa367e9ac64736f6c634300080c0033",
  "bytecodeSha1": "268b2ccc9915d585125c70d5764d1284a9f03d6f",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "Gauge",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "180": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {
        "Gauge.initialize": {
          "177": [
            2358,
            2371,
            true
          ],
          "178": [
            2358,
            2406,
            true
          ]
        }
      },
      "10": {
        "Gauge._boostedBalanceOf": {
          "162": [
            9689,
            9707,
            false
          ]
        },
        "Gauge._deposit": {
          "163": [
            11479,
            11490,
            true
          ]
        },
        "Gauge._getReward": {
          "166": [
            15695,
            15705,
            false
          ],
          "167": [
            16116,
            16128,
            false
          ]
        },
        "Gauge._lockingRatio": {
          "158": [
            7405,
            7439,
            false
          ],
          "159": [
            7578,
            7594,
            true
          ],
          "160": [
            7598,
            7628,
            false
          ],
          "161": [
            7735,
            7769,
            false
          ]
        },
        "Gauge._updateReward": {
          "164": [
            6080,
            6101,
            false
          ],
          "165": [
            6121,
            6144,
            false
          ]
        },
        "Gauge.addExtraReward": {
          "149": [
            4585,
            4612,
            true
          ],
          "150": [
            4646,
            4672,
            true
          ]
        },
        "Gauge.clearExtraRewards": {
          "145": [
            5772,
            5799,
            true
          ]
        },
        "Gauge.initialize": {
          "155": [
            2934,
            2972,
            true
          ],
          "156": [
            3041,
            3069,
            true
          ],
          "157": [
            3120,
            3161,
            true
          ]
        },
        "Gauge.removeExtraReward": {
          "152": [
            5071,
            5098,
            true
          ],
          "153": [
            5268,
            5299,
            false
          ],
          "154": [
            5393,
            5419,
            true
          ]
        },
        "Gauge.setRewardManager": {
          "146": [
            17073,
            17100,
            true
          ],
          "147": [
            17104,
            17125,
            true
          ],
          "148": [
            17181,
            17209,
            true
          ]
        },
        "Gauge.withdraw": {
          "151": [
            12480,
            12491,
            true
          ]
        }
      },
      "13": {},
      "14": {},
      "15": {},
      "16": {},
      "17": {},
      "3": {},
      "5": {
        "SafeERC20._callOptionalReturn": {
          "181": [
            3735,
            3756,
            false
          ],
          "182": [
            3819,
            3849,
            true
          ]
        }
      },
      "6": {
        "Address.verifyCallResult": {
          "168": [
            7735,
            7742,
            false
          ],
          "169": [
            7876,
            7897,
            false
          ]
        }
      },
      "7": {},
      "8": {
        "Math.min": {
          "179": [
            545,
            550,
            true
          ]
        }
      },
      "9": {
        "BaseGauge.__initialize": {
          "176": [
            2118,
            2155,
            true
          ]
        },
        "BaseGauge._notifyRewardAmount": {
          "175": [
            5431,
            5462,
            false
          ]
        },
        "BaseGauge.queueNewRewards": {
          "171": [
            4357,
            4369,
            true
          ],
          "172": [
            4635,
            4666,
            false
          ],
          "173": [
            5051,
            5089,
            false
          ]
        },
        "BaseGauge.setDuration": {
          "174": [
            2453,
            2483,
            false
          ]
        },
        "BaseGauge.sweep": {
          "170": [
            3521,
            3548,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "129": [
            2378,
            2395
          ],
          "130": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "2": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "47": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "86": [
            1998,
            2071
          ],
          "87": [
            2081,
            2109
          ]
        }
      },
      "1": {
        "Initializable._isConstructor": {
          "72": [
            3090,
            3131
          ]
        }
      },
      "10": {
        "Gauge._boostedBalanceOf": {
          "97": [
            9723,
            9748
          ],
          "98": [
            9769,
            10051
          ]
        },
        "Gauge._deposit": {
          "99": [
            11471,
            11524
          ],
          "100": [
            11673,
            11725
          ],
          "101": [
            11654,
            11657
          ],
          "102": [
            11769,
            11806
          ],
          "103": [
            11816,
            11859
          ],
          "104": [
            11902,
            11967
          ],
          "105": [
            11977,
            12003
          ]
        },
        "Gauge._getReward": {
          "113": [
            15721,
            15742
          ],
          "114": [
            15785,
            15830
          ],
          "115": [
            15848,
            15902
          ],
          "116": [
            15941,
            15983
          ],
          "117": [
            16012,
            16045
          ],
          "118": [
            16249,
            16303
          ],
          "119": [
            16226,
            16229
          ]
        },
        "Gauge._lockingRatio": {
          "93": [
            7644,
            7652
          ],
          "94": [
            7828,
            7874
          ]
        },
        "Gauge._maxEarning": {
          "139": [
            9048,
            9166
          ]
        },
        "Gauge._newEarning": {
          "92": [
            8829,
            8955
          ]
        },
        "Gauge._notProtectedTokens": {
          "95": [
            17493,
            17577
          ]
        },
        "Gauge._rewardPerToken": {
          "136": [
            8003,
            8030
          ],
          "137": [
            8050,
            8221
          ]
        },
        "Gauge._updateReward": {
          "106": [
            5973,
            6013
          ],
          "107": [
            6023,
            6066
          ],
          "108": [
            6415,
            6457
          ],
          "109": [
            6475,
            6499
          ],
          "110": [
            6629,
            6671
          ],
          "111": [
            6699,
            6753
          ],
          "112": [
            6767,
            6978
          ]
        },
        "Gauge.addExtraReward": {
          "42": [
            4577,
            4628
          ],
          "43": [
            4638,
            4692
          ],
          "44": [
            4702,
            4737
          ],
          "45": [
            4747,
            4778
          ]
        },
        "Gauge.balanceOf": {
          "1": [
            4107,
            4132
          ]
        },
        "Gauge.boostedBalanceOf": {
          "18": [
            9455,
            9488
          ]
        },
        "Gauge.clearExtraRewards": {
          "10": [
            5764,
            5815
          ],
          "11": [
            5825,
            5863
          ],
          "12": [
            5873,
            5892
          ]
        },
        "Gauge.deposit": {
          "70": [
            10346,
            10375
          ],
          "71": [
            10385,
            10396
          ],
          "84": [
            10878,
            10907
          ]
        },
        "Gauge.depositFor": {
          "23": [
            11307,
            11330
          ],
          "24": [
            11340,
            11351
          ]
        },
        "Gauge.earned": {
          "4": [
            8574,
            8691
          ]
        },
        "Gauge.extraRewardsLength": {
          "3": [
            4274,
            4300
          ]
        },
        "Gauge.getReward": {
          "27": [
            15019,
            15054
          ],
          "28": [
            15064,
            15075
          ],
          "29": [
            14404,
            14447
          ],
          "30": [
            14457,
            14468
          ],
          "60": [
            14750,
            14785
          ]
        },
        "Gauge.getRewardFor": {
          "88": [
            15454,
            15495
          ]
        },
        "Gauge.initialize": {
          "74": [
            2913,
            3023
          ],
          "75": [
            3033,
            3089
          ],
          "76": [
            3099,
            3215
          ],
          "77": [
            3226,
            3260
          ],
          "78": [
            3270,
            3306
          ],
          "79": [
            3316,
            3329
          ],
          "80": [
            3339,
            3369
          ],
          "81": [
            3379,
            3413
          ],
          "82": [
            3424,
            3598
          ]
        },
        "Gauge.lockingRatio": {
          "85": [
            7276,
            7305
          ]
        },
        "Gauge.removeExtraReward": {
          "61": [
            5063,
            5114
          ],
          "62": [
            5319,
            5328
          ],
          "63": [
            5346,
            5351
          ],
          "64": [
            5245,
            5248
          ],
          "65": [
            5385,
            5446
          ],
          "66": [
            5456,
            5493
          ],
          "67": [
            5503,
            5562
          ],
          "68": [
            5572,
            5590
          ]
        },
        "Gauge.setRewardManager": {
          "13": [
            17052,
            17162
          ],
          "14": [
            17173,
            17240
          ],
          "15": [
            17250,
            17280
          ],
          "16": [
            17290,
            17330
          ],
          "17": [
            17340,
            17351
          ]
        },
        "Gauge.setVe": {
          "48": [
            3668,
            3681
          ],
          "49": [
            3691,
            3715
          ]
        },
        "Gauge.totalSupply": {
          "0": [
            3847,
            3866
          ]
        },
        "Gauge.transferQueuedPenalty": {
          "19": [
            16602,
            16619
          ],
          "20": [
            16630,
            16686
          ],
          "21": [
            16696,
            16757
          ],
          "22": [
            16767,
            16778
          ]
        },
        "Gauge.withdraw": {
          "25": [
            14016,
            14061
          ],
          "26": [
            14071,
            14082
          ],
          "46": [
            13424,
            13470
          ],
          "51": [
            12472,
            12526
          ],
          "52": [
            12678,
            12736
          ],
          "53": [
            12659,
            12662
          ],
          "54": [
            12757,
            12794
          ],
          "55": [
            12804,
            12859
          ],
          "56": [
            12896,
            12931
          ],
          "57": [
            12952,
            12998
          ],
          "58": [
            13008,
            13043
          ],
          "59": [
            13054,
            13065
          ],
          "69": [
            13754,
            13800
          ]
        }
      },
      "13": {},
      "14": {},
      "15": {},
      "16": {},
      "17": {},
      "3": {},
      "5": {
        "SafeERC20._callOptionalReturn": {
          "138": [
            3811,
            3896
          ]
        },
        "SafeERC20.safeTransfer": {
          "96": [
            813,
            899
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "120": [
            1050,
            1146
          ]
        }
      },
      "6": {
        "Address.functionCall": {
          "140": [
            4018,
            4077
          ]
        },
        "Address.functionCallWithValue": {
          "141": [
            5228,
            5288
          ],
          "142": [
            5382,
            5440
          ]
        },
        "Address.isContract": {
          "73": [
            1458,
            1488
          ]
        },
        "Address.verifyCallResult": {
          "143": [
            7758,
            7775
          ],
          "144": [
            8202,
            8222
          ]
        }
      },
      "7": {
        "Context._msgSender": {
          "5": [
            712,
            729
          ]
        }
      },
      "8": {
        "Math.min": {
          "131": [
            538,
            558
          ]
        }
      },
      "9": {
        "BaseGauge.__initialize": {
          "132": [
            2097,
            2205
          ],
          "133": [
            2215,
            2249
          ],
          "134": [
            2259,
            2276
          ],
          "135": [
            2286,
            2312
          ]
        },
        "BaseGauge._notifyRewardAmount": {
          "121": [
            5371,
            5417
          ],
          "122": [
            5478,
            5508
          ],
          "123": [
            5658,
            5684
          ],
          "124": [
            5698,
            5728
          ],
          "125": [
            5748,
            5771
          ],
          "126": [
            5781,
            5813
          ],
          "127": [
            5823,
            5864
          ],
          "128": [
            5874,
            6038
          ]
        },
        "BaseGauge.lastTimeRewardApplicable": {
          "50": [
            2911,
            2957
          ]
        },
        "BaseGauge.queueNewRewards": {
          "31": [
            4349,
            4377
          ],
          "32": [
            4387,
            4528
          ],
          "33": [
            4538,
            4577
          ],
          "34": [
            4587,
            4620
          ],
          "35": [
            4682,
            4710
          ],
          "36": [
            4724,
            4741
          ],
          "37": [
            4755,
            4766
          ],
          "38": [
            5105,
            5133
          ],
          "39": [
            5147,
            5164
          ],
          "40": [
            5195,
            5218
          ],
          "41": [
            5238,
            5249
          ]
        },
        "BaseGauge.rewardPerToken": {
          "83": [
            3223,
            3247
          ]
        },
        "BaseGauge.setDuration": {
          "89": [
            2618,
            2653
          ],
          "90": [
            2673,
            2695
          ],
          "91": [
            2705,
            2750
          ]
        },
        "BaseGauge.sweep": {
          "6": [
            3513,
            3568
          ],
          "7": [
            3645,
            3700
          ],
          "8": [
            3710,
            3736
          ],
          "9": [
            3746,
            3757
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Address",
    "BaseGauge",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "IBaseGauge",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "IExtraReward",
    "IGauge",
    "IVeYfiRewardPool",
    "IVotingEscrow",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Initializable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Math",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/SafeERC20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061030b5760003560e01c80637a2388551161019d578063c1a287e2116100e9578063deee8e54116100a2578063f2fde38b1161007c578063f2fde38b14610629578063f579513f1461063c578063f6be71d11461064f578063f7c618c11461066257600080fd5b8063deee8e5414610604578063df136d6514610617578063ebe2b12b1461062057600080fd5b8063c1a287e2146105c6578063c8f33c91146105d0578063cc2a9a5b146105d9578063cd3daf9d146105ec578063d0e30db0146105f4578063d55a23f4146105fc57600080fd5b8063920e821711610156578063a4698feb11610130578063a4698feb1461057a578063a80ff90a1461058d578063a810a54c146105a0578063b6b55f25146105b357600080fd5b8063920e82171461054a57806392930b45146105545780639e15977f1461056757600080fd5b80637a238855146104ec5780637b0a47ee146104ff57806380faa57d146105085780638b876347146105105780638da5cb5b14610530578063901a7d531461054157600080fd5b80633ccfd60b1161025c5780635e43c47b116102155780636a4ac73b116101ef5780636a4ac73b1461049557806370a08231146104a8578063715018a6146104d157806372f702f3146104d957600080fd5b80635e43c47b1461046e57806363d38c3b1461048157806365a5d5f01461048a57600080fd5b80633ccfd60b1461041c5780633d18b9121461042457806340c354461461042c578063425b6e2f1461043f57806342886b6714610452578063590a41f51461045b57600080fd5b8063153ee554116102c9578063262d3d6d116102a3578063262d3d6d146103e557806326f553e9146103ee5780632f4f21e2146103f65780633b92eb231461040957600080fd5b8063153ee554146103b757806318160ddd146103ca5780631beabcd2146103d257600080fd5b80628cc2621461031057806301681a62146103365780630569d388146103595780630700037d146103635780630f4ef8a6146103835780630fb5a6b4146103ae575b600080fd5b61032361031e366004612529565b610675565b6040519081526020015b60405180910390f35b610349610344366004612529565b6106d0565b604051901515815260200161032d565b610361610821565b005b610323610371366004612529565b600b6020526000908152604090205481565b600f54610396906001600160a01b031681565b6040516001600160a01b03909116815260200161032d565b61032360025481565b6103496103c5366004612529565b610891565b601154610323565b6103236103e0366004612529565b610982565b61032360095481565b610349610993565b610349610404366004612544565b610a8f565b600d54610396906001600160a01b031681565b610349610aa4565b610349610ac7565b61039661043a36600461256e565b610ae9565b61034961044d366004612595565b610b13565b61032360105481565b61034961046936600461256e565b610b34565b61034961047c366004612529565b610c53565b61032360075481565b610323630784ce0081565b6103496104a3366004612595565b610d5a565b6103236104b6366004612529565b6001600160a01b031660009081526012602052604090205490565b610361610d75565b600c54610396906001600160a01b031681565b6103616104fa366004612529565b610da9565b61032360045481565b610323610e28565b61032361051e366004612529565b600a6020526000908152604090205481565b6000546001600160a01b0316610396565b61032360085481565b610323620f424081565b6103496105623660046125ce565b610e3b565b600e54610396906001600160a01b031681565b610349610588366004612610565b610fe9565b61034961059b366004612529565b611001565b6103496105ae366004612610565b6111d1565b6103496105c136600461256e565b6111ec565b61032362278d0081565b61032360055481565b6103616105e736600461262d565b611200565b610323611473565b61034961147d565b601354610323565b610323610612366004612529565b611573565b61032360065481565b61032360035481565b610361610637366004612529565b61157e565b61034961064a3660046126a1565b611619565b61036161065d36600461256e565b611631565b600154610396906001600160a01b031681565b600080610681836116eb565b6001600160a01b0384166000908152600b6020526040902054909150620f4240826106ab8661173d565b6106b591906126d3565b6106bf91906126f2565b6106c99190612714565b9392505050565b600080546001600160a01b031633146107045760405162461bcd60e51b81526004016106fb9061272c565b60405180910390fd5b61070d8261189c565b61074b5760405162461bcd60e51b815260206004820152600f60248201526e383937ba32b1ba32b2103a37b5b2b760891b60448201526064016106fb565b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa158015610792573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b69190612761565b90506107d4836107ce6000546001600160a01b031690565b836118ce565b604080516001600160a01b0385168152602081018390527fab2246061d7b0dd3631d037e3f6da75782ae489eeb9f6af878a4b25df9b07c77910160405180910390a160019150505b919050565b600f546001600160a01b0316331461084b5760405162461bcd60e51b81526004016106fb9061277a565b7f90503a14a60f24042ca91fabb5544c78b3845cf06963fb78adac5538b9138111601360405161087b919061279f565b60405180910390a161088f601360006124e4565b565b600f546000906001600160a01b03163314806108b757506000546001600160a01b031633145b6108d35760405162461bcd60e51b81526004016106fb9061277a565b6001600160a01b0382166109295760405162461bcd60e51b815260206004820152601a60248201527f5f7265776172644d616e6167657220307830206164647265737300000000000060448201526064016106fb565b600f80546001600160a01b0319166001600160a01b0384169081179091556040519081527f79ecf8371e520ae99bd7ba1f0e87dcc921a946d9ca58230eef986803e0ac9c459060200160405180910390a1506001919050565b600061098d82611936565b92915050565b60108054600091829055600154600e5460405163095ea7b360e01b81526001600160a01b0391821660048201526024810184905291169063095ea7b3906044016020604051808303816000875af11580156109f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1691906127ef565b50600e5460405163590a41f560e01b8152600481018390526001600160a01b039091169063590a41f5906024016020604051808303816000875af1158015610a62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8691906127ef565b50600191505090565b6000610a9b8383611ac3565b50600192915050565b33600090815260126020526040812054610abf908280610e3b565b506001905090565b600033610ad381611c76565b610ae03360006001611df3565b600191505b5090565b60138181548110610af957600080fd5b6000918252602090912001546001600160a01b0316905081565b600033610b1f81611c76565b610b2a338585611df3565b5060019392505050565b600081610b695760405162461bcd60e51b815260206004820152600360248201526203d3d360ec1b60448201526064016106fb565b600154610b81906001600160a01b0316333085612029565b60408051338152602081018490527f1c88aa9a39b1a6357a85c97a3bd4e2b0738e74c68b92928276bc85f495b2450b910160405180910390a1600754610bc79083612714565b91506003544210610be757610bdb82612061565b50506000600755600190565b6000600254600354610bf9919061280c565b610c03904261280c565b9050600060045482610c1591906126d3565b905083600a610c2583600c6126d3565b610c2f91906126f2565b1015610c4857610c3e84612061565b6000600755610b2a565b505050600755600190565b600f546000906001600160a01b03163314610c805760405162461bcd60e51b81526004016106fb9061277a565b6001600160a01b038216610cc85760405162461bcd60e51b815260206004820152600f60248201526e217265776172642073657474696e6760881b60448201526064016106fb565b6040516001600160a01b03831681527f7a486d506196e4ae0e0b063acca8cb3e3128c1ba505cd447ed148222c2d0b1539060200160405180910390a15060138054600180820183556000929092527f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a0900180546001600160a01b0319166001600160a01b03939093169290921790915590565b33600090815260126020526040812054610b2a908484610e3b565b6000546001600160a01b03163314610d9f5760405162461bcd60e51b81526004016106fb9061272c565b61088f6000612157565b6000546001600160a01b03163314610dd35760405162461bcd60e51b81526004016106fb9061272c565b600d80546001600160a01b0319166001600160a01b0383169081179091556040519081527f0f382d8404a45286f6180665c3eb5574df3e6efdd99ad2e652d8f5d904f264f0906020015b60405180910390a150565b6000610e36426003546121a7565b905090565b600033610e4781611c76565b60008511610e975760405162461bcd60e51b815260206004820152601e60248201527f526577617264506f6f6c203a2043616e6e6f742077697468647261772030000060448201526064016106fb565b60135460005b81811015610f425760138181548110610eb857610eb8612823565b6000918252602090912001546040516314640f3760e31b81523360048201526001600160a01b039091169063a32079b8906024016020604051808303816000875af1158015610f0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2f91906127ef565b5080610f3a81612839565b915050610e9d565b5085601154610f51919061280c565b60115533600090815260126020526040902054610f6f90879061280c565b336000908152601260205260409020558415610f9157610f9133856001611df3565b600c54610fa8906001600160a01b031633886118ce565b60405186815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d59060200160405180910390a250600195945050505050565b600033610ff581611c76565b610a9b33846001611df3565b600f546000906001600160a01b0316331461102e5760405162461bcd60e51b81526004016106fb9061277a565b6013546000199060005b8181101561109257846001600160a01b03166013828154811061105d5761105d612823565b6000918252602090912001546001600160a01b0316141561108057809250611092565b8061108a81612839565b915050611038565b506000198214156110de5760405162461bcd60e51b8152602060048201526016602482015275195e1d1c98481c995dd85c99081b9bdd08199bdd5b9960521b60448201526064016106fb565b6040516001600160a01b03851681527f8b6e4849b65ba893304022bd0f251b5584e334b1e08550e629e83d733745ed469060200160405180910390a16013805461112a9060019061280c565b8154811061113a5761113a612823565b600091825260209091200154601380546001600160a01b03909216918490811061116657611166612823565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060138054806111a5576111a5612854565b600082815260209020810160001990810180546001600160a01b03191690550190555060019392505050565b33600090815260126020526040812054610a9b908383610e3b565b60006111f83383611ac3565b506001919050565b600054600160a81b900460ff1661122457600054600160a01b900460ff1615611228565b303b155b61128b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106fb565b600054600160a81b900460ff161580156112b5576000805461ffff60a01b191661010160a01b1790555b6001600160a01b03871661130b5760405162461bcd60e51b815260206004820152601960248201527f5f7374616b696e67546f6b656e2030783020616464726573730000000000000060448201526064016106fb565b6001600160a01b0383166113535760405162461bcd60e51b815260206004820152600f60248201526e5f766520307830206164647265737360881b60448201526064016106fb565b6001600160a01b0382166113a95760405162461bcd60e51b815260206004820152601c60248201527f5f7665596669526577617264506f6f6c2030783020616464726573730000000060448201526064016106fb565b6113b386866121bd565b600c80546001600160a01b038981166001600160a01b03199283168117909355600d80548783169084168117909155600f80548984169085168117909155600e8054888516951685179055604080519586528b84166020870152928a16928501929092526060840191909152608083015260a08201527f58ca036ed94ee2b2004adac9f54a88961a882010564179aefa6106f7977102a99060c00160405180910390a1801561146a576000805460ff60a81b191690555b50505050505050565b6000610e36612242565b600c546040516370a0823160e01b81523360048201526000918291611567916001600160a01b0316906370a0823190602401602060405180830381865afa1580156114cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114f09190612761565b600c54604051636eb1769f60e11b81523360048201523060248201526001600160a01b039091169063dd62ed3e90604401602060405180830381865afa15801561153e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115629190612761565b6121a7565b9050610ae03382611ac3565b600061098d8261173d565b6000546001600160a01b031633146115a85760405162461bcd60e51b81526004016106fb9061272c565b6001600160a01b03811661160d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106fb565b61161681612157565b50565b60008261162581611c76565b610b2a84600085611df3565b6000546001600160a01b0316331461165b5760405162461bcd60e51b81526004016106fb9061272c565b600061166681611c76565b6003544210156116a457600042600354611680919061280c565b905060006004548261169291906126d3565b905061169e84826126f2565b60045550505b60028290556004546040805184815260208101929092527ff899c6d536e6cda78c5f4dce43ca0e8c47167deb2875ea8b777f21cc85899b1f91015b60405180910390a15050565b6001600160a01b0381166000908152600a6020526040812054670de0b6b3a764000090611716612242565b611720919061280c565b61172984611936565b61173391906126d3565b61098d91906126f2565b600d5460408051631705a3bd60e01b815290516000926001600160a01b031691631705a3bd9160048083019260209291908290030181865afa158015611787573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ab91906127ef565b156117ba5750620f4240919050565b600d5460405163adc6358960e01b81526001600160a01b038481166004830152600092169063adc6358990602401602060405180830381865afa158015611805573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118299190612761565b90508015806118385750428111155b156118465750600092915050565b6000611852428361280c565b905062278d0061186682630784ce0061280c565b10156118785750620f42409392505050565b630784ce0061188a82620f42406126d3565b61189491906126f2565b949350505050565b6001546000906001600160a01b0383811691161480159061098d575050600c546001600160a01b039081169116141590565b6040516001600160a01b03831660248201526044810182905261193190849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526122a6565b505050565b600080600d60009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561198c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119b09190612761565b9050806119d45750506001600160a01b031660009081526012602052604090205490565b600d546040516370a0823160e01b81526001600160a01b0385811660048301526106c9926064928592909116906370a0823190602401602060405180830381865afa158015611a27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a4b9190612761565b601154611a5891906126d3565b611a6291906126f2565b611a6d90603c6126d3565b6001600160a01b038616600090815260126020526040902054611a919060286126d3565b611a9b9190612714565b611aa591906126f2565b6001600160a01b0385166000908152601260205260409020546121a7565b81611acd81611c76565b60008211611b1d5760405162461bcd60e51b815260206004820152601d60248201527f526577617264506f6f6c203a2043616e6e6f74206465706f736974203000000060448201526064016106fb565b60135460005b81811015611bca5760138181548110611b3e57611b3e612823565b6000918252602090912001546040516314640f3760e31b81526001600160a01b0387811660048301529091169063a32079b8906024016020604051808303816000875af1158015611b93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bb791906127ef565b5080611bc281612839565b915050611b23565b5082601154611bd99190612714565b6011556001600160a01b038416600090815260126020526040902054611c00908490612714565b6001600160a01b03808616600090815260126020526040902091909155600c54611c2d9116333086612029565b836001600160a01b03167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d84604051611c6891815260200190565b60405180910390a250505050565b611c7e612242565b600655611c89610e28565b6005556001600160a01b03811615611616576001600160a01b03811660009081526012602052604090205415611d7b576000611cc4826116eb565b90506000611cd183612378565b90506000620f424083611ce38661173d565b611cf090620f424061280c565b611cfa91906126d3565b611d0491906126f2565b9050611d10818461280c565b6001600160a01b0385166000908152600b602052604081208054909190611d38908490612714565b925050819055508060106000828254611d519190612714565b90915550611d619050838361280c565b60076000828254611d729190612714565b90915550505050505b6006546001600160a01b0382166000818152600a60208181526040808420869055600554600b835293819020549282528051948552908401859052830191909152606082015260808101919091527ffbe590c835e1c07f8e971c36021d1be46f43f7b0b6dc5413dbd5753590569d589060a001610e1d565b6001600160a01b0383166000908152600b60205260409020548015611f6f576001600160a01b0384166000908152600b60205260408120558215611f1457600154600d5460405163095ea7b360e01b81526001600160a01b0391821660048201526024810184905291169063095ea7b3906044016020604051808303816000875af1158015611e86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eaa91906127ef565b50600d54604051631d23139f60e11b8152336004820152602481018390526001600160a01b0390911690633a46273e90604401600060405180830381600087803b158015611ef757600080fd5b505af1158015611f0b573d6000803e3d6000fd5b50505050611f2b565b600154611f2b906001600160a01b031685836118ce565b836001600160a01b03167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e048682604051611f6691815260200190565b60405180910390a25b81156120235760135460005b818110156120205760138181548110611f9657611f96612823565b60009182526020909120015460405163055de27560e01b81523360048201526001600160a01b039091169063055de275906024016020604051808303816000875af1158015611fe9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061200d91906127ef565b508061201881612839565b915050611f7b565b50505b50505050565b6040516001600160a01b03808516602483015283166044820152606481018290526120239085906323b872dd60e01b906084016118fa565b600061206c81611c76565b8160095461207a9190612714565b600955600354421061209b5760025461209390836126f2565b6004556120df565b6000426003546120ab919061280c565b90506000600454826120bd91906126d3565b90506120c98185612714565b9350600254846120d991906126f2565b60045550505b60088290554260058190556002546120f691612714565b600381905560085460055460045460095460408051948552602085019390935291830193909352606082019290925260808101919091527f944ffd3678415a15cbfef07dd7d9f20cdc6f36d12588a4ba7e8eb440f32c61be9060a0016116df565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008183106121b657816106c9565b5090919050565b6001600160a01b0382166122135760405162461bcd60e51b815260206004820152601860248201527f5f726577617264546f6b656e203078302061646472657373000000000000000060448201526064016106fb565b600180546001600160a01b0319166001600160a01b03841617905562093a8060025561223e81612157565b5050565b600061224d60115490565b612258575060065490565b601154600454600554612269610e28565b612273919061280c565b61227d91906126d3565b61228f90670de0b6b3a76400006126d3565b61229991906126f2565b600654610e369190612714565b60006122fb826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166123d09092919063ffffffff16565b805190915015611931578080602001905181019061231991906127ef565b6119315760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016106fb565b6001600160a01b0381166000908152600a6020526040812054670de0b6b3a7640000906123a3612242565b6123ad919061280c565b6001600160a01b03841660009081526012602052604090205461173391906126d3565b60606118948484600085856001600160a01b0385163b6124325760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106fb565b600080866001600160a01b0316858760405161244e9190612896565b60006040518083038185875af1925050503d806000811461248b576040519150601f19603f3d011682016040523d82523d6000602084013e612490565b606091505b50915091506124a08282866124ab565b979650505050505050565b606083156124ba5750816106c9565b8251156124ca5782518084602001fd5b8160405162461bcd60e51b81526004016106fb91906128b2565b508054600082559060005260206000209081019061161691905b80821115610ae557600081556001016124fe565b80356001600160a01b038116811461081c57600080fd5b60006020828403121561253b57600080fd5b6106c982612512565b6000806040838503121561255757600080fd5b61256083612512565b946020939093013593505050565b60006020828403121561258057600080fd5b5035919050565b801515811461161657600080fd5b600080604083850312156125a857600080fd5b82356125b381612587565b915060208301356125c381612587565b809150509250929050565b6000806000606084860312156125e357600080fd5b8335925060208401356125f581612587565b9150604084013561260581612587565b809150509250925092565b60006020828403121561262257600080fd5b81356106c981612587565b60008060008060008060c0878903121561264657600080fd5b61264f87612512565b955061265d60208801612512565b945061266b60408801612512565b935061267960608801612512565b925061268760808801612512565b915061269560a08801612512565b90509295509295509295565b600080604083850312156126b457600080fd5b6125b383612512565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156126ed576126ed6126bd565b500290565b60008261270f57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115612727576127276126bd565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561277357600080fd5b5051919050565b6020808252600b908201526a08585d5d1a1bdc9a5e995960aa1b604082015260600190565b6020808252825482820181905260008481528281209092916040850190845b818110156127e35783546001600160a01b0316835260019384019392850192016127be565b50909695505050505050565b60006020828403121561280157600080fd5b81516106c981612587565b60008282101561281e5761281e6126bd565b500390565b634e487b7160e01b600052603260045260246000fd5b600060001982141561284d5761284d6126bd565b5060010190565b634e487b7160e01b600052603160045260246000fd5b60005b8381101561288557818101518382015260200161286d565b838111156120235750506000910152565b600082516128a881846020870161286a565b9190910192915050565b60208152600082518060208401526128d181604085016020870161286a565b601f01601f1916919091016040019291505056fea264697066735822122060d44fafd2a6f74cee023d9a1e77dc96b76d8320a93eaf21e2103e6fa367e9ac64736f6c634300080c0033",
  "deployedSourceMap": "705:16881:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8379:319;;;;;;:::i;:::-;;:::i;:::-;;;529:25:26;;;517:2;502:18;8379:319:10;;;;;;;;3438:326:9;;;;;;:::i;:::-;;:::i;:::-;;;730:14:26;;723:22;705:41;;693:2;678:18;3438:326:9;565:187:26;5716:183:10;;;:::i;:::-;;1059:42:9;;;;;;:::i;:::-;;;;;;;;;;;;;;1346:28:10;;;;;-1:-1:-1;;;;;1346:28:10;;;;;;-1:-1:-1;;;;;921:32:26;;;903:51;;891:2;876:18;1346:28:10;757:203:26;569:23:9;;;;;;16968:390:10;;;;;;:::i;:::-;;:::i;3784:89::-;3854:12;;3784:89;;9372:123;;;;;;:::i;:::-;;:::i;957:32:9:-;;;;;;16491:294:10;;;:::i;11222:136::-;;;;;;:::i;:::-;;:::i;835:22::-;;;;;-1:-1:-1;;;;;835:22:10;;;13962:127;;;:::i;14939:143::-;;;:::i;1718:29::-;;;;;;:::i;:::-;;:::i;14267:208::-;;;;;;:::i;:::-;;:::i;1554:28::-;;;;;;4264:992:9;;;;;;:::i;:::-;;:::i;4497:309:10:-;;;;;;:::i;:::-;;:::i;888:28:9:-;;;;;;1033:50:10;;1068:15;1033:50;;13347:151;;;;;;:::i;:::-;;:::i;3984:155::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4114:18:10;4084:7;4114:18;;;:9;:18;;;;;;;3984:155;1668:101:0;;;:::i;780:26:10:-;;;;;-1:-1:-1;;;;;780:26:10;;;3611:111;;;;;;:::i;:::-;;:::i;631:25:9:-;;;;;;2835:129;;;:::i;996:57::-;;;;;;:::i;:::-;;;;;;;;;;;;;;1036:85:0;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;922:29:9;;;;;;1089:47:10;;1131:5;1089:47;;12325:747;;;;;;:::i;:::-;;:::i;942:30::-;;;;;-1:-1:-1;;;;;942:30:10;;;14632:181;;;;;;:::i;:::-;;:::i;4980:638::-;;;;;;:::i;:::-;;:::i;13689:139::-;;;;;;:::i;:::-;;:::i;10280:123::-;;;;;;:::i;:::-;;:::i;1211:46::-;;1250:7;1211:46;;662:29:9;;;;;;2684:921:10;;;;;;:::i;:::-;;:::i;3155:99:9:-;;;:::i;10668:267:10:-;;;:::i;4202:105::-;4281:12;:19;4202:105;;7195:117;;;;;;:::i;:::-;;:::i;697:35:9:-;;;;;;598:27;;;;;;1918:198:0;;;;;;:::i;:::-;;:::i;15310:213:10:-;;;;;;:::i;:::-;;:::i;2325:432:9:-;;;;;;:::i;:::-;;:::i;461:34::-;;;;;-1:-1:-1;;;;;461:34:9;;;8379:319:10;8499:7;8522:18;8543:20;8555:7;8543:11;:20::i;:::-;-1:-1:-1;;;;;8675:16:10;;;;;;:7;:16;;;;;;8522:41;;-1:-1:-1;1131:5:10;8522:41;8594:22;8683:7;8594:13;:22::i;:::-;:35;;;;:::i;:::-;8593:67;;;;:::i;:::-;:98;;;;:::i;:::-;8574:117;8379:319;-1:-1:-1;;;8379:319:10:o;3438:326:9:-;3497:4;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:7;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;3521:27:9::1;3541:6;3521:19;:27::i;:::-;3513:55;;;::::0;-1:-1:-1;;;3513:55:9;;4938:2:26;3513:55:9::1;::::0;::::1;4920:21:26::0;4977:2;4957:18;;;4950:30;-1:-1:-1;;;4996:18:26;;;4989:45;5051:18;;3513:55:9::1;4736:339:26::0;3513:55:9::1;3595:39;::::0;-1:-1:-1;;;3595:39:9;;3628:4:::1;3595:39;::::0;::::1;903:51:26::0;3578:14:9::1;::::0;-1:-1:-1;;;;;3595:24:9;::::1;::::0;::::1;::::0;876:18:26;;3595:39:9::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3578:56;;3645:55;3675:6;3684:7;1082::0::0;1108:6;-1:-1:-1;;;;;1108:6:0;;1036:85;3684:7:9::1;3693:6;3645:22;:55::i;:::-;3715:21;::::0;;-1:-1:-1;;;;;5461:32:26;;5443:51;;5525:2;5510:18;;5503:34;;;3715:21:9::1;::::0;5416:18:26;3715:21:9::1;;;;;;;3753:4;3746:11;;;1318:1:0;3438:326:9::0;;;:::o;5716:183:10:-;5786:13;;-1:-1:-1;;;;;5786:13:10;5772:10;:27;5764:51;;;;-1:-1:-1;;;5764:51:10;;;;;;;:::i;:::-;5830:33;5850:12;5830:33;;;;;;:::i;:::-;;;;;;;;5873:19;5880:12;;5873:19;:::i;:::-;5716:183::o;16968:390::-;17087:13;;17036:4;;-1:-1:-1;;;;;17087:13:10;17073:10;:27;;:52;;-1:-1:-1;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;17104:10:10;:21;17073:52;17052:110;;;;-1:-1:-1;;;17052:110:10;;;;;;;:::i;:::-;-1:-1:-1;;;;;17181:28:10;;17173:67;;;;-1:-1:-1;;;17173:67:10;;6776:2:26;17173:67:10;;;6758:21:26;6815:2;6795:18;;;6788:30;6854:28;6834:18;;;6827:56;6900:18;;17173:67:10;6574:350:26;17173:67:10;17250:13;:30;;-1:-1:-1;;;;;;17250:30:10;-1:-1:-1;;;;;17250:30:10;;;;;;;;17295:35;;903:51:26;;;17295:35:10;;891:2:26;876:18;17295:35:10;;;;;;;-1:-1:-1;17347:4:10;;16968:390;-1:-1:-1;16968:390:10:o;9372:123::-;9436:7;9462:26;9480:7;9462:17;:26::i;:::-;9455:33;9372:123;-1:-1:-1;;9372:123:10:o;16491:294::-;16579:13;;;16542:4;16602:17;;;;-1:-1:-1;16637:11:10;16658:15;;16630:56;;-1:-1:-1;;;16630:56:10;;-1:-1:-1;;;;;16658:15:10;;;16630:56;;;5443:51:26;5510:18;;;5503:34;;;16637:11:10;;;16630:27;;5416:18:26;;16630:56:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;16713:15:10;;16696:61;;-1:-1:-1;;;16696:61:10;;;;;529:25:26;;;-1:-1:-1;;;;;16713:15:10;;;;16696:49;;502:18:26;;16696:61:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;16774:4;16767:11;;;16491:294;:::o;11222:136::-;11291:4;11307:23;11316:4;11322:7;11307:8;:23::i;:::-;-1:-1:-1;11347:4:10;11222:136;;;;:::o;13962:127::-;14035:10;14000:4;14025:21;;;:9;:21;;;;;;14016:45;;14000:4;;14016:8;:45::i;:::-;;14078:4;14071:11;;13962:127;:::o;14939:143::-;15003:4;14982:10;1972:22:9;1986:7;1972:13;:22::i;:::-;15019:35:10::1;15030:10;15042:5;15049:4;15019:10;:35::i;:::-;15071:4;15064:11;;2004:1:9;14939:143:10::0;;:::o;1718:29::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1718:29:10;;-1:-1:-1;1718:29:10;:::o;14267:208::-;14384:4;14355:10;1972:22:9;1986:7;1972:13;:22::i;:::-;14404:43:10::1;14415:10;14427:5;14434:12;14404:10;:43::i;:::-;-1:-1:-1::0;14464:4:10::1;::::0;14267:208;-1:-1:-1;;;14267:208:10:o;4264:992:9:-;4333:4;4357:12;4349:28;;;;-1:-1:-1;;;4349:28:9;;7381:2:26;4349:28:9;;;7363:21:26;7420:1;7400:18;;;7393:29;-1:-1:-1;;;7438:18:26;;;7431:33;7481:18;;4349:28:9;7179:326:26;4349:28:9;4434:11;;4387:141;;-1:-1:-1;;;;;4434:11:9;4460:10;4492:4;4511:7;4387:26;:141::i;:::-;4543:34;;;4557:10;5443:51:26;;5525:2;5510:18;;5503:34;;;4543::9;;5416:18:26;4543:34:9;;;;;;;4607:13;;4597:23;;:7;:23;:::i;:::-;4587:33;;4654:12;;4635:15;:31;4631:146;;4682:28;4702:7;4682:19;:28::i;:::-;-1:-1:-1;;4740:1:9;4724:13;:17;4762:4;;4264:992::o;4631:146::-;4786:36;4871:8;;4856:12;;:23;;;;:::i;:::-;4825:55;;:15;:55;:::i;:::-;4786:94;;4890:24;4948:10;;4917:28;:41;;;;:::i;:::-;4890:68;-1:-1:-1;5082:7:9;5077:2;5052:21;4890:68;5071:2;5052:21;:::i;:::-;5051:28;;;;:::i;:::-;:38;5047:182;;;5105:28;5125:7;5105:19;:28::i;:::-;5163:1;5147:13;:17;5047:182;;;-1:-1:-1;;;5195:13:9;:23;5245:4;;4264:992::o;4497:309:10:-;4599:13;;4561:4;;-1:-1:-1;;;;;4599:13:10;4585:10;:27;4577:51;;;;-1:-1:-1;;;4577:51:10;;;;;;;:::i;:::-;-1:-1:-1;;;;;4646:26:10;;4638:54;;;;-1:-1:-1;;;4638:54:10;;7842:2:26;4638:54:10;;;7824:21:26;7881:2;7861:18;;;7854:30;-1:-1:-1;;;7900:18:26;;;7893:45;7955:18;;4638:54:10;7640:339:26;4638:54:10;4707:30;;-1:-1:-1;;;;;921:32:26;;903:51;;4707:30:10;;891:2:26;876:18;4707:30:10;;;;;;;-1:-1:-1;4747:12:10;:31;;;;;;;;-1:-1:-1;4747:31:10;;;;;;;;-1:-1:-1;;;;;;4747:31:10;-1:-1:-1;;;;;4747:31:10;;;;;;;;;;;;4497:309::o;13347:151::-;13443:10;13408:4;13433:21;;;:9;:21;;;;;;13424:46;;13456:6;13464:5;13424:8;:46::i;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:7;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;3611:111:10:-:0;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:7;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;3668:7:10::1;:13:::0;;-1:-1:-1;;;;;;3668:13:10::1;-1:-1:-1::0;;;;;3668:13:10;::::1;::::0;;::::1;::::0;;;3696:19:::1;::::0;903:51:26;;;3696:19:10::1;::::0;891:2:26;876:18;3696:19:10::1;;;;;;;;3611:111:::0;:::o;2835:129:9:-;2892:7;2918:39;2927:15;2944:12;;2918:8;:39::i;:::-;2911:46;;2835:129;:::o;12325:747:10:-;12456:4;12435:10;1972:22:9;1986:7;1972:13;:22::i;:::-;12490:1:10::1;12480:7;:11;12472:54;;;::::0;-1:-1:-1;;;12472:54:10;;8186:2:26;12472:54:10::1;::::0;::::1;8168:21:26::0;8225:2;8205:18;;;8198:30;8264:32;8244:18;;;8237:60;8314:18;;12472:54:10::1;7984:354:26::0;12472:54:10::1;12598:12;:19:::0;12581:14:::1;12627:120;12651:6;12647:1;:10;12627:120;;;12691:12;12704:1;12691:15;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;12678:58:::1;::::0;-1:-1:-1;;;12678:58:10;;12725:10:::1;12678:58;::::0;::::1;903:51:26::0;-1:-1:-1;;;;;12691:15:10;;::::1;::::0;12678:46:::1;::::0;876:18:26;;12678:58:10::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;12659:3:10;::::1;::::0;::::1;:::i;:::-;;;;12627:120;;;;12787:7;12772:12;;:22;;;;:::i;:::-;12757:12;:37:::0;12838:10:::1;12828:21;::::0;;;:9:::1;:21;::::0;;;;;:31:::1;::::0;12852:7;;12828:31:::1;:::i;:::-;12814:10;12804:21;::::0;;;:9:::1;:21;::::0;;;;:55;12870:72;::::1;;;12896:35;12907:10;12919:5;12926:4;12896:10;:35::i;:::-;12952:12;::::0;:46:::1;::::0;-1:-1:-1;;;;;12952:12:10::1;12978:10;12990:7:::0;12952:25:::1;:46::i;:::-;13013:30;::::0;529:25:26;;;13023:10:10::1;::::0;13013:30:::1;::::0;517:2:26;502:18;13013:30:10::1;;;;;;;-1:-1:-1::0;13061:4:10::1;::::0;12325:747;-1:-1:-1;;;;;12325:747:10:o;14632:181::-;14730:4;14701:10;1972:22:9;1986:7;1972:13;:22::i;:::-;14750:35:10::1;14761:10;14773:5;14780:4;14750:10;:35::i;4980:638::-:0;5085:13;;5047:4;;-1:-1:-1;;;;;5085:13:10;5071:10;:27;5063:51;;;;-1:-1:-1;;;5063:51:10;;;;;;;:::i;:::-;5184:12;:19;-1:-1:-1;;5140:17:10;5124:13;5213:163;5237:6;5233:1;:10;5213:163;;;5287:12;-1:-1:-1;;;;;5268:31:10;:12;5281:1;5268:15;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;5268:15:10;:31;5264:102;;;5327:1;5319:9;;5346:5;;5264:102;5245:3;;;;:::i;:::-;;;;5213:163;;;;-1:-1:-1;;5393:5:10;:26;;5385:61;;;;-1:-1:-1;;;5385:61:10;;8817:2:26;5385:61:10;;;8799:21:26;8856:2;8836:18;;;8829:30;-1:-1:-1;;;8875:18:26;;;8868:52;8937:18;;5385:61:10;8615:346:26;5385:61:10;5461:32;;-1:-1:-1;;;;;921:32:26;;903:51;;5461:32:10;;891:2:26;876:18;5461:32:10;;;;;;;5525:12;5538:19;;:23;;5560:1;;5538:23;:::i;:::-;5525:37;;;;;;;;:::i;:::-;;;;;;;;;;;5503:12;:19;;-1:-1:-1;;;;;5525:37:10;;;;5516:5;;5503:19;;;;;;:::i;:::-;;;;;;;;;:59;;;;;-1:-1:-1;;;;;5503:59:10;;;;;-1:-1:-1;;;;;5503:59:10;;;;;;5572:12;:18;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;5572:18:10;;;;;-1:-1:-1;;;;;;5572:18:10;;;;;;-1:-1:-1;5572:18:10;;4980:638;-1:-1:-1;;;4980:638:10:o;13689:139::-;13773:10;13738:4;13763:21;;;:9;:21;;;;;;13754:46;;13786:6;13738:4;13754:8;:46::i;10280:123::-;10330:4;10346:29;10355:10;10367:7;10346:8;:29::i;:::-;-1:-1:-1;10392:4:10;;10280:123;-1:-1:-1;10280:123:10:o;2684:921::-;2358:13:1;;-1:-1:-1;;;2358:13:1;;;;:48;;2394:12;;-1:-1:-1;;;2394:12:1;;;;2393:13;2358:48;;;3125:4;1465:19:6;:23;2374:16:1;2350:107;;;;-1:-1:-1;;;2350:107:1;;9300:2:26;2350:107:1;;;9282:21:26;9339:2;9319:18;;;9312:30;9378:34;9358:18;;;9351:62;-1:-1:-1;;;9429:18:26;;;9422:44;9483:19;;2350:107:1;9098:410:26;2350:107:1;2468:19;2491:13;-1:-1:-1;;;2491:13:1;;;;2490:14;2514:98;;;;2548:13;:20;;-1:-1:-1;;;;2582:19:1;-1:-1:-1;;;2582:19:1;;;2514:98;-1:-1:-1;;;;;2934:38:10;::::1;2913:110;;;::::0;-1:-1:-1;;;2913:110:10;;9715:2:26;2913:110:10::1;::::0;::::1;9697:21:26::0;9754:2;9734:18;;;9727:30;9793:27;9773:18;;;9766:55;9838:18;;2913:110:10::1;9513:349:26::0;2913:110:10::1;-1:-1:-1::0;;;;;3041:28:10;::::1;3033:56;;;::::0;-1:-1:-1;;;3033:56:10;;10069:2:26;3033:56:10::1;::::0;::::1;10051:21:26::0;10108:2;10088:18;;;10081:30;-1:-1:-1;;;10127:18:26;;;10120:45;10182:18;;3033:56:10::1;9867:339:26::0;3033:56:10::1;-1:-1:-1::0;;;;;3120:41:10;::::1;3099:116;;;::::0;-1:-1:-1;;;3099:116:10;;10413:2:26;3099:116:10::1;::::0;::::1;10395:21:26::0;10452:2;10432:18;;;10425:30;10491;10471:18;;;10464:58;10539:18;;3099:116:10::1;10211:352:26::0;3099:116:10::1;3226:34;3239:12;3253:6;3226:12;:34::i;:::-;3270:12;:36:::0;;-1:-1:-1;;;;;3270:36:10;;::::1;-1:-1:-1::0;;;;;;3270:36:10;;::::1;::::0;::::1;::::0;;;3316:7:::1;:13:::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;3339::::1;:30:::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;3379:15:::1;:34:::0;;;;::::1;::::0;::::1;::::0;::::1;::::0;;3429:169:::1;::::0;;10893:34:26;;;10963:15;;;10958:2;10943:18;;10936:43;11015:15;;;10995:18;;;10988:43;;;;11062:2;11047:18;;11040:43;;;;11114:3;11099:19;;11092:44;10873:3;11152:19;;11145:44;3429:169:10::1;::::0;10842:3:26;10827:19;3429:169:10::1;;;;;;;2638:14:1::0;2634:66;;;2684:5;2668:21;;-1:-1:-1;;;;2668:21:1;;;2634:66;2069:637;2684:921:10;;;;;;:::o;3155:99:9:-;3204:7;3230:17;:15;:17::i;10668:267:10:-;10761:12;;:34;;-1:-1:-1;;;10761:34:10;;10784:10;10761:34;;;903:51:26;10705:4:10;;;;10739:129;;-1:-1:-1;;;;;10761:12:10;;:22;;876:18:26;;10761:34:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10809:12;;:49;;-1:-1:-1;;;10809:49:10;;10832:10;10809:49;;;11412:34:26;10852:4:10;11462:18:26;;;11455:43;-1:-1:-1;;;;;10809:12:10;;;;:22;;11347:18:26;;10809:49:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10739:8;:129::i;:::-;10721:147;;10878:29;10887:10;10899:7;10878:8;:29::i;7195:117::-;7257:7;7283:22;7297:7;7283:13;:22::i;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:7;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;11711:2:26;1998:73:0::1;::::0;::::1;11693:21:26::0;11750:2;11730:18;;;11723:30;11789:34;11769:18;;;11762:62;-1:-1:-1;;;11840:18:26;;;11833:36;11886:19;;1998:73:0::1;11509:402:26::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;15310:213:10:-;15434:4;15407:8;1972:22:9;1986:7;1972:13;:22::i;:::-;15454:41:10::1;15465:8;15475:5;15482:12;15454:10;:41::i;2325:432:9:-:0;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:7;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;2431:1:9::1;1972:22;1986:7;1972:13;:22::i;:::-;2471:12:::2;;2453:15;:30;2449:215;;;2499:17;2534:15;2519:12;;:30;;;;:::i;:::-;2499:50;;2563:16;2594:10;;2582:9;:22;;;;:::i;:::-;2563:41:::0;-1:-1:-1;2631:22:9::2;2642:11:::0;2563:41;2631:22:::2;:::i;:::-;2618:10;:35:::0;-1:-1:-1;;2449:215:9::2;2673:8;:22:::0;;;2739:10:::2;::::0;2710:40:::2;::::0;;12090:25:26;;;12146:2;12131:18;;12124:34;;;;2710:40:9::2;::::0;12063:18:26;2710:40:9::2;;;;;;;;1318:1:0::1;2325:432:9::0;:::o;8704:258:10:-;-1:-1:-1;;;;;8915:31:10;;8806:7;8915:31;;;:22;:31;;;;;;8951:4;;8895:17;:15;:17::i;:::-;:51;;;;:::i;:::-;8849:26;8867:7;8849:17;:26::i;:::-;:98;;;;:::i;:::-;8848:107;;;;:::i;7318:563::-;7419:7;;7405:34;;;-1:-1:-1;;;7405:34:10;;;;7382:7;;-1:-1:-1;;;;;7419:7:10;;7405:32;;:34;;;;;;;;;;;;;;7419:7;7405:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7401:87;;;-1:-1:-1;1131:5:10;;7318:563;-1:-1:-1;7318:563:10:o;7401:87::-;7534:7;;7520:44;;-1:-1:-1;;;7520:44:10;;-1:-1:-1;;;;;921:32:26;;;7520:44:10;;;903:51:26;7498:19:10;;7534:7;;7520:34;;876:18:26;;7520:44:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7498:66;-1:-1:-1;7578:16:10;;;:50;;;7613:15;7598:11;:30;;7578:50;7574:89;;;-1:-1:-1;7651:1:10;;7318:563;-1:-1:-1;;7318:563:10:o;7574:89::-;7673:16;7692:29;7706:15;7692:11;:29;:::i;:::-;7673:48;-1:-1:-1;1250:7:10;7735:19;7673:48;1068:15;7735:19;:::i;:::-;:34;7731:87;;;-1:-1:-1;1131:5:10;;7318:563;-1:-1:-1;;;7318:563:10:o;7731:87::-;1068:15;7836:26;7854:8;1131:5;7836:26;:::i;:::-;7835:39;;;;:::i;:::-;7828:46;7318:563;-1:-1:-1;;;;7318:563:10:o;17364:220::-;17530:11;;17473:4;;-1:-1:-1;;;;;17512:30:10;;;17530:11;;17512:30;;;;:65;;-1:-1:-1;;17564:12:10;;-1:-1:-1;;;;;17564:12:10;;;17546:31;;;;;17364:220::o;701:205:5:-;840:58;;-1:-1:-1;;;;;5461:32:26;;840:58:5;;;5443:51:26;5510:18;;;5503:34;;;813:86:5;;833:5;;-1:-1:-1;;;863:23:5;5416:18:26;;840:58:5;;;;-1:-1:-1;;840:58:5;;;;;;;;;;;;;;-1:-1:-1;;;;;840:58:5;-1:-1:-1;;;;;;840:58:5;;;;;;;;;;813:19;:86::i;:::-;701:205;;;:::o;9501:557:10:-;9592:7;9615:21;9653:7;;;;;;;;;-1:-1:-1;;;;;9653:7:10;-1:-1:-1;;;;;9639:34:10;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9615:60;-1:-1:-1;9689:18:10;9685:74;;-1:-1:-1;;;;;;;9730:18:10;;;;;:9;:18;;;;;;;9501:557::o;9685:74::-;9919:7;;9905:41;;-1:-1:-1;;;9905:41:10;;-1:-1:-1;;;;;921:32:26;;;9905:41:10;;;903:51:26;9788:263:10;;9998:3;;9974:13;;9919:7;;;;9905:32;;876:18:26;;9905:41:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9866:12;;:80;;;;:::i;:::-;9865:122;;;;:::i;:::-;9864:129;;9991:2;9864:129;:::i;:::-;-1:-1:-1;;;;;9816:18:10;;;;;;:9;:18;;;;;;:23;;9837:2;9816:23;:::i;:::-;9815:179;;;;:::i;:::-;9814:187;;;;:::i;:::-;-1:-1:-1;;;;;10019:18:10;;;;;;:9;:18;;;;;;9788:8;:263::i;11364:646::-;11451:4;1972:22:9;1986:7;1972:13;:22::i;:::-;11489:1:10::1;11479:7;:11;11471:53;;;::::0;-1:-1:-1;;;11471:53:10;;12371:2:26;11471:53:10::1;::::0;::::1;12353:21:26::0;12410:2;12390:18;;;12383:30;12449:31;12429:18;;;12422:59;12498:18;;11471:53:10::1;12169:353:26::0;11471:53:10::1;11593:12;:19:::0;11576:14:::1;11622:114;11646:6;11642:1;:10;11622:114;;;11686:12;11699:1;11686:15;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;11673:52:::1;::::0;-1:-1:-1;;;11673:52:10;;-1:-1:-1;;;;;921:32:26;;;11673:52:10::1;::::0;::::1;903:51:26::0;11686:15:10;;::::1;::::0;11673:46:::1;::::0;876:18:26;;11673:52:10::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;11654:3:10;::::1;::::0;::::1;:::i;:::-;;;;11622:114;;;;11799:7;11784:12;;:22;;;;:::i;:::-;11769:12;:37:::0;-1:-1:-1;;;;;11834:15:10;::::1;;::::0;;;:9:::1;:15;::::0;;;;;:25:::1;::::0;11852:7;;11834:25:::1;:::i;:::-;-1:-1:-1::0;;;;;11816:15:10;;::::1;;::::0;;;:9:::1;:15;::::0;;;;:43;;;;11902:12:::1;::::0;:65:::1;::::0;:12:::1;11932:10;11952:4;11959:7:::0;11902:29:::1;:65::i;:::-;11989:4;-1:-1:-1::0;;;;;11982:21:10::1;;11995:7;11982:21;;;;529:25:26::0;;517:2;502:18;;383:177;11982:21:10::1;;;;;;;;11461:549;11364:646:::0;;;:::o;5905:1090::-;5996:17;:15;:17::i;:::-;5973:20;:40;6040:26;:24;:26::i;:::-;6023:14;:43;-1:-1:-1;;;;;6080:21:10;;;6076:913;;-1:-1:-1;;;;;6121:18:10;;;;;;:9;:18;;;;;;:23;6117:569;;6164:18;6185:20;6197:7;6185:11;:20::i;:::-;6164:41;;6223:18;6244:20;6256:7;6244:11;:20::i;:::-;6223:41;;6283:15;1131:5;6367:10;6321:22;6335:7;6321:13;:22::i;:::-;6303:40;;1131:5;6303:40;:::i;:::-;6302:75;;;;:::i;:::-;6301:95;;;;:::i;:::-;6283:113;-1:-1:-1;6436:20:10;6283:113;6436:10;:20;:::i;:::-;-1:-1:-1;;;;;6415:16:10;;;;;;:7;:16;;;;;:42;;:16;;;:42;;;;;:::i;:::-;;;;;;;;6492:7;6475:13;;:24;;;;;;;:::i;:::-;;;;-1:-1:-1;6647:23:10;;-1:-1:-1;6660:10:10;6647;:23;:::i;:::-;6629:13;;:42;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;6117:569:10;6733:20;;-1:-1:-1;;;;;6699:31:10;;;;;;:22;:31;;;;;;;;:54;;;6867:14;;6899:7;:16;;;;;;;6933:31;;;6772:206;;12786:51:26;;;12853:18;;;12846:34;;;12896:18;;12889:34;;;;12954:2;12939:18;;12932:34;12997:3;12982:19;;12975:35;;;;6772:206:10;;12773:3:26;12758:19;6772:206:10;12527:489:26;15529:805:10;-1:-1:-1;;;;;15664:17:10;;15647:14;15664:17;;;:7;:17;;;;;;15695:10;;15691:365;;-1:-1:-1;;;;;15721:17:10;;15741:1;15721:17;;;:7;:17;;;;;:21;15756:242;;;;15785:11;;15813:7;;15785:45;;-1:-1:-1;;;15785:45:10;;-1:-1:-1;;;;;15813:7:10;;;15785:45;;;5443:51:26;5510:18;;;5503:34;;;15785:11:10;;;:19;;5416:18:26;;15785:45:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;15862:7:10;;15848:54;;-1:-1:-1;;;15848:54:10;;15883:10;15848:54;;;5443:51:26;5510:18;;;5503:34;;;-1:-1:-1;;;;;15862:7:10;;;;15848:34;;5416:18:26;;15848:54:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15756:242;;;15941:11;;:42;;-1:-1:-1;;;;;15941:11:10;15966:8;15976:6;15941:24;:42::i;:::-;16028:8;-1:-1:-1;;;;;16017:28:10;;16038:6;16017:28;;;;529:25:26;;517:2;502:18;;383:177;16017:28:10;;;;;;;;15691:365;16116:12;16112:216;;;16161:12;:19;16144:14;16194:124;16218:6;16214:1;:10;16194:124;;;16262:12;16275:1;16262:15;;;;;;;;:::i;:::-;;;;;;;;;;;16249:54;;-1:-1:-1;;;16249:54:10;;16292:10;16249:54;;;903:51:26;-1:-1:-1;;;;;16262:15:10;;;;16249:42;;876:18:26;;16249:54:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;16226:3:10;;;;:::i;:::-;;;;16194:124;;;;16130:198;16112:216;15637:697;15529:805;;;:::o;912:241:5:-;1077:68;;-1:-1:-1;;;;;13279:15:26;;;1077:68:5;;;13261:34:26;13331:15;;13311:18;;;13304:43;13363:18;;;13356:34;;;1050:96:5;;1070:5;;-1:-1:-1;;;1100:27:5;13196:18:26;;1077:68:5;13021:375:26;5262:783:9;5353:1;1972:22;1986:7;1972:13;:22::i;:::-;5411:6:::1;5391:17;;:26;;;;:::i;:::-;5371:17;:46:::0;5450:12:::1;::::0;5431:15:::1;:31;5427:312;;5500:8;::::0;5491:17:::1;::::0;:6;:17:::1;:::i;:::-;5478:10;:30:::0;5427:312:::1;;;5539:17;5574:15;5559:12;;:30;;;;:::i;:::-;5539:50;;5603:16;5634:10;;5622:9;:22;;;;:::i;:::-;5603:41:::0;-1:-1:-1;5667:17:9::1;5603:41:::0;5667:6;:17:::1;:::i;:::-;5658:26;;5720:8;;5711:6;:17;;;;:::i;:::-;5698:10;:30:::0;-1:-1:-1;;5427:312:9::1;5748:14;:23:::0;;;5798:15:::1;5781:14;:32:::0;;;5856:8:::1;::::0;5838:26:::1;::::0;::::1;:::i;:::-;5823:12;:41:::0;;;5905:14:::1;::::0;5933::::1;::::0;5987:10:::1;::::0;6011:17:::1;::::0;5879:159:::1;::::0;;13660:25:26;;;13716:2;13701:18;;13694:34;;;;13744:18;;;13737:34;;;;13802:2;13787:18;;13780:34;;;;13845:3;13830:19;;13823:35;;;;5879:159:9::1;::::0;13647:3:26;13632:19;5879:159:9::1;13401:463:26::0;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;461:104:8:-;519:7;549:1;545;:5;:13;;557:1;545:13;;;-1:-1:-1;553:1:8;;538:20;-1:-1:-1;461:104:8:o;2018:301:9:-;-1:-1:-1;;;;;2118:37:9;;2097:108;;;;-1:-1:-1;;;2097:108:9;;14071:2:26;2097:108:9;;;14053:21:26;14110:2;14090:18;;;14083:30;14149:26;14129:18;;;14122:54;14193:18;;2097:108:9;13869:348:26;2097:108:9;2215:11;:34;;-1:-1:-1;;;;;;2215:34:9;-1:-1:-1;;;;;2215:34:9;;;;;2270:6;2259:8;:17;2286:26;2305:6;2286:18;:26::i;:::-;2018:301;;:::o;7887:341:10:-;7946:7;7969:13;3854:12;;;3784:89;7969:13;7965:76;;-1:-1:-1;8010:20:10;;;7887:341::o;7965:76::-;3854:12;;8170:10;;8136:14;;8107:26;:24;:26::i;:::-;:43;;;;:::i;:::-;8106:74;;;;:::i;:::-;:97;;8199:4;8106:97;:::i;:::-;8105:115;;;;:::i;:::-;8069:20;;:152;;;;:::i;3207:706:5:-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:5;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:5;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:5;;14424:2:26;3811:85:5;;;14406:21:26;14463:2;14443:18;;;14436:30;14502:34;14482:18;;;14475:62;-1:-1:-1;;;14553:18:26;;;14546:40;14603:19;;3811:85:5;14222:406:26;8968:205:10;-1:-1:-1;;;;;9126:31:10;;9029:7;9126:31;;;:22;:31;;;;;;9162:4;;9106:17;:15;:17::i;:::-;:51;;;;:::i;:::-;-1:-1:-1;;;;;9068:18:10;;;;;;:9;:18;;;;;;:90;;;;:::i;3861:223:6:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;3994;-1:-1:-1;;;;;1465:19:6;;;5228:60;;;;-1:-1:-1;;;5228:60:6;;15242:2:26;5228:60:6;;;15224:21:26;15281:2;15261:18;;;15254:30;15320:31;15300:18;;;15293:59;15369:18;;5228:60:6;15040:353:26;5228:60:6;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:6;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:6:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:6;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:6;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:173:26;82:20;;-1:-1:-1;;;;;131:31:26;;121:42;;111:70;;177:1;174;167:12;192:186;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;965:254::-;1033:6;1041;1094:2;1082:9;1073:7;1069:23;1065:32;1062:52;;;1110:1;1107;1100:12;1062:52;1133:29;1152:9;1133:29;:::i;:::-;1123:39;1209:2;1194:18;;;;1181:32;;-1:-1:-1;;;965:254:26:o;1224:180::-;1283:6;1336:2;1324:9;1315:7;1311:23;1307:32;1304:52;;;1352:1;1349;1342:12;1304:52;-1:-1:-1;1375:23:26;;1224:180;-1:-1:-1;1224:180:26:o;1409:118::-;1495:5;1488:13;1481:21;1474:5;1471:32;1461:60;;1517:1;1514;1507:12;1532:376;1594:6;1602;1655:2;1643:9;1634:7;1630:23;1626:32;1623:52;;;1671:1;1668;1661:12;1623:52;1710:9;1697:23;1729:28;1751:5;1729:28;:::i;:::-;1776:5;-1:-1:-1;1833:2:26;1818:18;;1805:32;1846:30;1805:32;1846:30;:::i;:::-;1895:7;1885:17;;;1532:376;;;;;:::o;2136:444::-;2207:6;2215;2223;2276:2;2264:9;2255:7;2251:23;2247:32;2244:52;;;2292:1;2289;2282:12;2244:52;2328:9;2315:23;2305:33;;2388:2;2377:9;2373:18;2360:32;2401:28;2423:5;2401:28;:::i;:::-;2448:5;-1:-1:-1;2505:2:26;2490:18;;2477:32;2518:30;2477:32;2518:30;:::i;:::-;2567:7;2557:17;;;2136:444;;;;;:::o;2585:241::-;2641:6;2694:2;2682:9;2673:7;2669:23;2665:32;2662:52;;;2710:1;2707;2700:12;2662:52;2749:9;2736:23;2768:28;2790:5;2768:28;:::i;2831:559::-;2935:6;2943;2951;2959;2967;2975;3028:3;3016:9;3007:7;3003:23;2999:33;2996:53;;;3045:1;3042;3035:12;2996:53;3068:29;3087:9;3068:29;:::i;:::-;3058:39;;3116:38;3150:2;3139:9;3135:18;3116:38;:::i;:::-;3106:48;;3173:38;3207:2;3196:9;3192:18;3173:38;:::i;:::-;3163:48;;3230:38;3264:2;3253:9;3249:18;3230:38;:::i;:::-;3220:48;;3287:39;3321:3;3310:9;3306:19;3287:39;:::i;:::-;3277:49;;3345:39;3379:3;3368:9;3364:19;3345:39;:::i;:::-;3335:49;;2831:559;;;;;;;;:::o;3395:315::-;3460:6;3468;3521:2;3509:9;3500:7;3496:23;3492:32;3489:52;;;3537:1;3534;3527:12;3489:52;3560:29;3579:9;3560:29;:::i;3715:127::-;3776:10;3771:3;3767:20;3764:1;3757:31;3807:4;3804:1;3797:15;3831:4;3828:1;3821:15;3847:168;3887:7;3953:1;3949;3945:6;3941:14;3938:1;3935:21;3930:1;3923:9;3916:17;3912:45;3909:71;;;3960:18;;:::i;:::-;-1:-1:-1;4000:9:26;;3847:168::o;4020:217::-;4060:1;4086;4076:132;;4130:10;4125:3;4121:20;4118:1;4111:31;4165:4;4162:1;4155:15;4193:4;4190:1;4183:15;4076:132;-1:-1:-1;4222:9:26;;4020:217::o;4242:128::-;4282:3;4313:1;4309:6;4306:1;4303:13;4300:39;;;4319:18;;:::i;:::-;-1:-1:-1;4355:9:26;;4242:128::o;4375:356::-;4577:2;4559:21;;;4596:18;;;4589:30;4655:34;4650:2;4635:18;;4628:62;4722:2;4707:18;;4375:356::o;5080:184::-;5150:6;5203:2;5191:9;5182:7;5178:23;5174:32;5171:52;;;5219:1;5216;5209:12;5171:52;-1:-1:-1;5242:16:26;;5080:184;-1:-1:-1;5080:184:26:o;5548:335::-;5750:2;5732:21;;;5789:2;5769:18;;;5762:30;-1:-1:-1;;;5823:2:26;5808:18;;5801:41;5874:2;5859:18;;5548:335::o;5888:681::-;6056:2;6108:21;;;6178:13;;6081:18;;;6200:22;;;6027:4;6265:17;;;6305:16;;;6027:4;;6056:2;6253;6238:18;;;6027:4;6349:194;6363:6;6360:1;6357:13;6349:194;;;6428:13;;-1:-1:-1;;;;;6424:39:26;6412:52;;6460:1;6519:14;;;;6484:12;;;;6378:9;6349:194;;;-1:-1:-1;6560:3:26;;5888:681;-1:-1:-1;;;;;;5888:681:26:o;6929:245::-;6996:6;7049:2;7037:9;7028:7;7024:23;7020:32;7017:52;;;7065:1;7062;7055:12;7017:52;7097:9;7091:16;7116:28;7138:5;7116:28;:::i;7510:125::-;7550:4;7578:1;7575;7572:8;7569:34;;;7583:18;;:::i;:::-;-1:-1:-1;7620:9:26;;7510:125::o;8343:127::-;8404:10;8399:3;8395:20;8392:1;8385:31;8435:4;8432:1;8425:15;8459:4;8456:1;8449:15;8475:135;8514:3;-1:-1:-1;;8535:17:26;;8532:43;;;8555:18;;:::i;:::-;-1:-1:-1;8602:1:26;8591:13;;8475:135::o;8966:127::-;9027:10;9022:3;9018:20;9015:1;9008:31;9058:4;9055:1;9048:15;9082:4;9079:1;9072:15;15398:258;15470:1;15480:113;15494:6;15491:1;15488:13;15480:113;;;15570:11;;;15564:18;15551:11;;;15544:39;15516:2;15509:10;15480:113;;;15611:6;15608:1;15605:13;15602:48;;;-1:-1:-1;;15646:1:26;15628:16;;15621:27;15398:258::o;15661:274::-;15790:3;15828:6;15822:13;15844:53;15890:6;15885:3;15878:4;15870:6;15866:17;15844:53;:::i;:::-;15913:16;;;;;15661:274;-1:-1:-1;;15661:274:26:o;15940:383::-;16089:2;16078:9;16071:21;16052:4;16121:6;16115:13;16164:6;16159:2;16148:9;16144:18;16137:34;16180:66;16239:6;16234:2;16223:9;16219:18;16214:2;16206:6;16202:15;16180:66;:::i;:::-;16307:2;16286:15;-1:-1:-1;;16282:29:26;16267:45;;;;16314:2;16263:54;;15940:383;-1:-1:-1;;15940:383:26:o",
  "language": "Solidity",
  "natspec": {
    "details": "this contract is used behind multiple delegate proxies.",
    "kind": "dev",
    "methods": {
      "addExtraReward(address)": {
        "details": "can only be done by rewardManager",
        "notice": "add extra rewards to the gauge",
        "params": {
          "_extraReward": "the ExtraReward contract address"
        },
        "returns": {
          "_0": "true"
        }
      },
      "balanceOf(address)": {
        "params": {
          "account": "to look balance for"
        },
        "returns": {
          "_0": "amount of staked token for an account"
        }
      },
      "boostedBalanceOf(address)": {
        "details": "min(balance * 0.4 + totalSupply * veYFIBalance / veYFITotalSypply * 0.6, balance)",
        "notice": "boosted balance of based on veYFI balance",
        "returns": {
          "_0": "boosted balance"
        }
      },
      "clearExtraRewards()": {
        "details": "can only be done by rewardManager",
        "notice": "remove extra rewards"
      },
      "deposit()": {
        "details": "a user without a veYFI should not lock.will deposit the min betwwen user balance and user approvalThis call update claimable rewards",
        "notice": "deposit vault tokens into the gauge",
        "returns": {
          "_0": "true"
        }
      },
      "deposit(uint256)": {
        "details": "a user without a veYFI should not lock.This call update claimable rewards",
        "notice": "deposit vault tokens into the gauge",
        "params": {
          "_amount": "of vault token"
        },
        "returns": {
          "_0": "true"
        }
      },
      "depositFor(address,uint256)": {
        "details": "vault token is taken from msg.senderThis call update  `_for` claimable rewards",
        "notice": "deposit vault tokens into the gauge for a user",
        "params": {
          "_amount": "to deposit",
          "_for": "account to deposit to"
        },
        "returns": {
          "_0": "true"
        }
      },
      "earned(address)": {
        "details": "earning are based on lock duration and boost",
        "notice": "earning for an account",
        "returns": {
          "_0": "amount of tokens earned"
        }
      },
      "extraRewardsLength()": {
        "returns": {
          "_0": "the number of extra rewards pool"
        }
      },
      "getReward()": {
        "notice": "Get rewards and claim extra rewards, do not lock YFI earned",
        "returns": {
          "_0": "true"
        }
      },
      "getReward(bool)": {
        "notice": "Get rewards and claim extra rewards",
        "params": {
          "_lock": "should the yfi be locked in veYFI"
        },
        "returns": {
          "_0": "true"
        }
      },
      "getReward(bool,bool)": {
        "notice": "Get rewards",
        "params": {
          "_claimExtras": "claim extra rewards",
          "_lock": "should the yfi be locked in veYFI"
        },
        "returns": {
          "_0": "true"
        }
      },
      "getRewardFor(address,bool)": {
        "details": "rewards are transfer to _account",
        "notice": "Get rewards for an account",
        "params": {
          "_account": "to claim rewards for",
          "_claimExtras": "claim extra rewards"
        },
        "returns": {
          "_0": "true"
        }
      },
      "initialize(address,address,address,address,address,address)": {
        "details": "Initialize called after contract is cloned.",
        "notice": "initialize the contract",
        "params": {
          "_owner": "owner address",
          "_rewardManager": "reward manager address",
          "_rewardToken": "the reward token YFI",
          "_stakingToken": "The vault token to stake",
          "_ve": "veYFI address",
          "_veYfiRewardPool": "veYfiRewardPool address"
        }
      },
      "lastTimeRewardApplicable()": {
        "returns": {
          "_0": "timestamp until rewards are distributed"
        }
      },
      "lockingRatio(address)": {
        "details": "locking ratio is expressed in PRECISON_FACTOR, it's used to calculate the penalty due to the lock duration.",
        "notice": "give the lockingRatio",
        "returns": {
          "_0": "lockingRatio"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "queueNewRewards(uint256)": {
        "details": "Triger rewardRate recalculation using _amount and queuedRewards",
        "notice": "Add new rewards to be distributed over a week",
        "params": {
          "_amount": "token to add to rewards"
        },
        "returns": {
          "_0": "true"
        }
      },
      "queuedPenalty()": {
        "notice": "penalty queued to be transfer later to veYfiRewardPool using `transferQueuedPenalty`"
      },
      "queuedRewards()": {
        "notice": "that are queued to be distributed on a `queueNewRewards` call"
      },
      "removeExtraReward(address)": {
        "details": "can only be done by rewardManager",
        "notice": "remove extra rewards from the gauge",
        "params": {
          "_extraReward": "the ExtraReward contract address"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "rewardPerToken()": {
        "details": "gives the total amount of rewards distributed since inception of the pool per vault token",
        "notice": "reward per token deposited",
        "returns": {
          "_0": "rewardPerToken"
        }
      },
      "setRewardManager(address)": {
        "details": "Can be called by rewardManager or owner",
        "notice": "set reward manager",
        "params": {
          "_rewardManager": "new reward manager"
        },
        "returns": {
          "_0": "true"
        }
      },
      "totalSupply()": {
        "returns": {
          "_0": "total of the staked vault token"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "transferQueuedPenalty()": {
        "details": "Penalty are queued in this contract.",
        "notice": "Transfer penalty to the veYFIRewardContract",
        "returns": {
          "_0": "true"
        }
      },
      "withdraw()": {
        "details": "This call update claimable rewards",
        "notice": "withdraw all vault token from gauge",
        "returns": {
          "_0": "true"
        }
      },
      "withdraw(bool)": {
        "details": "This call update claimable rewards",
        "notice": "withdraw all vault token from gauge",
        "params": {
          "_claim": "claim veYFI and additional reward"
        },
        "returns": {
          "_0": "true"
        }
      },
      "withdraw(bool,bool)": {
        "details": "This call update claimable rewards",
        "notice": "withdraw all vault token from gauge",
        "params": {
          "_claim": "claim veYFI and additional reward",
          "_lock": "should the claimed rewards be locked in veYFI for the user"
        },
        "returns": {
          "_0": "true"
        }
      },
      "withdraw(uint256,bool,bool)": {
        "details": "This call update claimable rewards",
        "notice": "withdraw vault token from the gauge",
        "params": {
          "_amount": "amount to withdraw",
          "_claim": "claimm veYFI and aditional reward",
          "_lock": "should the claimed rewards be locked in veYFI for the user"
        },
        "returns": {
          "_0": "true"
        }
      }
    },
    "notice": "Deposit your vault token (one gauge per vault). YFI are paid based on the amount of vault tokens, the veYFI balance and the duration of the lock.",
    "stateVariables": {
      "queuedPenalty": {
        "details": "rewards are queued when an account `_updateReward`."
      }
    },
    "title": "Gauge stake vault token get YFI rewards",
    "version": 1
  },
  "offset": [
    705,
    17586
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x30B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7A238855 GT PUSH2 0x19D JUMPI DUP1 PUSH4 0xC1A287E2 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xDEEE8E54 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x629 JUMPI DUP1 PUSH4 0xF579513F EQ PUSH2 0x63C JUMPI DUP1 PUSH4 0xF6BE71D1 EQ PUSH2 0x64F JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x662 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDEEE8E54 EQ PUSH2 0x604 JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x617 JUMPI DUP1 PUSH4 0xEBE2B12B EQ PUSH2 0x620 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC1A287E2 EQ PUSH2 0x5C6 JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0xCC2A9A5B EQ PUSH2 0x5D9 JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x5EC JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x5F4 JUMPI DUP1 PUSH4 0xD55A23F4 EQ PUSH2 0x5FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x920E8217 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0xA4698FEB GT PUSH2 0x130 JUMPI DUP1 PUSH4 0xA4698FEB EQ PUSH2 0x57A JUMPI DUP1 PUSH4 0xA80FF90A EQ PUSH2 0x58D JUMPI DUP1 PUSH4 0xA810A54C EQ PUSH2 0x5A0 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x5B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x920E8217 EQ PUSH2 0x54A JUMPI DUP1 PUSH4 0x92930B45 EQ PUSH2 0x554 JUMPI DUP1 PUSH4 0x9E15977F EQ PUSH2 0x567 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7A238855 EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x4FF JUMPI DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x508 JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x510 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x530 JUMPI DUP1 PUSH4 0x901A7D53 EQ PUSH2 0x541 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3CCFD60B GT PUSH2 0x25C JUMPI DUP1 PUSH4 0x5E43C47B GT PUSH2 0x215 JUMPI DUP1 PUSH4 0x6A4AC73B GT PUSH2 0x1EF JUMPI DUP1 PUSH4 0x6A4AC73B EQ PUSH2 0x495 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4D1 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x4D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5E43C47B EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0x63D38C3B EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0x65A5D5F0 EQ PUSH2 0x48A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0x40C35446 EQ PUSH2 0x42C JUMPI DUP1 PUSH4 0x425B6E2F EQ PUSH2 0x43F JUMPI DUP1 PUSH4 0x42886B67 EQ PUSH2 0x452 JUMPI DUP1 PUSH4 0x590A41F5 EQ PUSH2 0x45B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x153EE554 GT PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x262D3D6D GT PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x262D3D6D EQ PUSH2 0x3E5 JUMPI DUP1 PUSH4 0x26F553E9 EQ PUSH2 0x3EE JUMPI DUP1 PUSH4 0x2F4F21E2 EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0x3B92EB23 EQ PUSH2 0x409 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x153EE554 EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0x1BEABCD2 EQ PUSH2 0x3D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x1681A62 EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x569D388 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0xF4EF8A6 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x3AE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x323 PUSH2 0x31E CALLDATASIZE PUSH1 0x4 PUSH2 0x2529 JUMP JUMPDEST PUSH2 0x675 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x349 PUSH2 0x344 CALLDATASIZE PUSH1 0x4 PUSH2 0x2529 JUMP JUMPDEST PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x32D JUMP JUMPDEST PUSH2 0x361 PUSH2 0x821 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x323 PUSH2 0x371 CALLDATASIZE PUSH1 0x4 PUSH2 0x2529 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH2 0x396 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x32D JUMP JUMPDEST PUSH2 0x323 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x349 PUSH2 0x3C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2529 JUMP JUMPDEST PUSH2 0x891 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x323 JUMP JUMPDEST PUSH2 0x323 PUSH2 0x3E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2529 JUMP JUMPDEST PUSH2 0x982 JUMP JUMPDEST PUSH2 0x323 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x349 PUSH2 0x993 JUMP JUMPDEST PUSH2 0x349 PUSH2 0x404 CALLDATASIZE PUSH1 0x4 PUSH2 0x2544 JUMP JUMPDEST PUSH2 0xA8F JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x396 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x349 PUSH2 0xAA4 JUMP JUMPDEST PUSH2 0x349 PUSH2 0xAC7 JUMP JUMPDEST PUSH2 0x396 PUSH2 0x43A CALLDATASIZE PUSH1 0x4 PUSH2 0x256E JUMP JUMPDEST PUSH2 0xAE9 JUMP JUMPDEST PUSH2 0x349 PUSH2 0x44D CALLDATASIZE PUSH1 0x4 PUSH2 0x2595 JUMP JUMPDEST PUSH2 0xB13 JUMP JUMPDEST PUSH2 0x323 PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x349 PUSH2 0x469 CALLDATASIZE PUSH1 0x4 PUSH2 0x256E JUMP JUMPDEST PUSH2 0xB34 JUMP JUMPDEST PUSH2 0x349 PUSH2 0x47C CALLDATASIZE PUSH1 0x4 PUSH2 0x2529 JUMP JUMPDEST PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x323 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x323 PUSH4 0x784CE00 DUP2 JUMP JUMPDEST PUSH2 0x349 PUSH2 0x4A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2595 JUMP JUMPDEST PUSH2 0xD5A JUMP JUMPDEST PUSH2 0x323 PUSH2 0x4B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2529 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x361 PUSH2 0xD75 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x396 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x361 PUSH2 0x4FA CALLDATASIZE PUSH1 0x4 PUSH2 0x2529 JUMP JUMPDEST PUSH2 0xDA9 JUMP JUMPDEST PUSH2 0x323 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x323 PUSH2 0xE28 JUMP JUMPDEST PUSH2 0x323 PUSH2 0x51E CALLDATASIZE PUSH1 0x4 PUSH2 0x2529 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x396 JUMP JUMPDEST PUSH2 0x323 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x323 PUSH3 0xF4240 DUP2 JUMP JUMPDEST PUSH2 0x349 PUSH2 0x562 CALLDATASIZE PUSH1 0x4 PUSH2 0x25CE JUMP JUMPDEST PUSH2 0xE3B JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x396 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x349 PUSH2 0x588 CALLDATASIZE PUSH1 0x4 PUSH2 0x2610 JUMP JUMPDEST PUSH2 0xFE9 JUMP JUMPDEST PUSH2 0x349 PUSH2 0x59B CALLDATASIZE PUSH1 0x4 PUSH2 0x2529 JUMP JUMPDEST PUSH2 0x1001 JUMP JUMPDEST PUSH2 0x349 PUSH2 0x5AE CALLDATASIZE PUSH1 0x4 PUSH2 0x2610 JUMP JUMPDEST PUSH2 0x11D1 JUMP JUMPDEST PUSH2 0x349 PUSH2 0x5C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x256E JUMP JUMPDEST PUSH2 0x11EC JUMP JUMPDEST PUSH2 0x323 PUSH3 0x278D00 DUP2 JUMP JUMPDEST PUSH2 0x323 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x361 PUSH2 0x5E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x262D JUMP JUMPDEST PUSH2 0x1200 JUMP JUMPDEST PUSH2 0x323 PUSH2 0x1473 JUMP JUMPDEST PUSH2 0x349 PUSH2 0x147D JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH2 0x323 JUMP JUMPDEST PUSH2 0x323 PUSH2 0x612 CALLDATASIZE PUSH1 0x4 PUSH2 0x2529 JUMP JUMPDEST PUSH2 0x1573 JUMP JUMPDEST PUSH2 0x323 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x323 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x361 PUSH2 0x637 CALLDATASIZE PUSH1 0x4 PUSH2 0x2529 JUMP JUMPDEST PUSH2 0x157E JUMP JUMPDEST PUSH2 0x349 PUSH2 0x64A CALLDATASIZE PUSH1 0x4 PUSH2 0x26A1 JUMP JUMPDEST PUSH2 0x1619 JUMP JUMPDEST PUSH2 0x361 PUSH2 0x65D CALLDATASIZE PUSH1 0x4 PUSH2 0x256E JUMP JUMPDEST PUSH2 0x1631 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x396 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x681 DUP4 PUSH2 0x16EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH3 0xF4240 DUP3 PUSH2 0x6AB DUP7 PUSH2 0x173D JUMP JUMPDEST PUSH2 0x6B5 SWAP2 SWAP1 PUSH2 0x26D3 JUMP JUMPDEST PUSH2 0x6BF SWAP2 SWAP1 PUSH2 0x26F2 JUMP JUMPDEST PUSH2 0x6C9 SWAP2 SWAP1 PUSH2 0x2714 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x704 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FB SWAP1 PUSH2 0x272C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x70D DUP3 PUSH2 0x189C JUMP JUMPDEST PUSH2 0x74B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x383937BA32B1BA32B2103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x792 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7B6 SWAP2 SWAP1 PUSH2 0x2761 JUMP JUMPDEST SWAP1 POP PUSH2 0x7D4 DUP4 PUSH2 0x7CE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP4 PUSH2 0x18CE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xAB2246061D7B0DD3631D037E3F6DA75782AE489EEB9F6AF878A4B25DF9B07C77 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x84B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FB SWAP1 PUSH2 0x277A JUMP JUMPDEST PUSH32 0x90503A14A60F24042CA91FABB5544C78B3845CF06963FB78ADAC5538B9138111 PUSH1 0x13 PUSH1 0x40 MLOAD PUSH2 0x87B SWAP2 SWAP1 PUSH2 0x279F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x88F PUSH1 0x13 PUSH1 0x0 PUSH2 0x24E4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x8B7 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x8D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FB SWAP1 PUSH2 0x277A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x929 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5F7265776172644D616E61676572203078302061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FB JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x79ECF8371E520AE99BD7BA1F0E87DCC921A946D9CA58230EEF986803E0AC9C45 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x98D DUP3 PUSH2 0x1936 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x10 DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x1 SLOAD PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA16 SWAP2 SWAP1 PUSH2 0x27EF JUMP JUMPDEST POP PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH4 0x590A41F5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x590A41F5 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA62 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA86 SWAP2 SWAP1 PUSH2 0x27EF JUMP JUMPDEST POP PUSH1 0x1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA9B DUP4 DUP4 PUSH2 0x1AC3 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xABF SWAP1 DUP3 DUP1 PUSH2 0xE3B JUMP JUMPDEST POP PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0xAD3 DUP2 PUSH2 0x1C76 JUMP JUMPDEST PUSH2 0xAE0 CALLER PUSH1 0x0 PUSH1 0x1 PUSH2 0x1DF3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x13 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xAF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0xB1F DUP2 PUSH2 0x1C76 JUMP JUMPDEST PUSH2 0xB2A CALLER DUP6 DUP6 PUSH2 0x1DF3 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xB69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x3D3D3 PUSH1 0xEC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FB JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xB81 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP6 PUSH2 0x2029 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x1C88AA9A39B1A6357A85C97A3BD4E2B0738E74C68B92928276BC85F495B2450B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x7 SLOAD PUSH2 0xBC7 SWAP1 DUP4 PUSH2 0x2714 JUMP JUMPDEST SWAP2 POP PUSH1 0x3 SLOAD TIMESTAMP LT PUSH2 0xBE7 JUMPI PUSH2 0xBDB DUP3 PUSH2 0x2061 JUMP JUMPDEST POP POP PUSH1 0x0 PUSH1 0x7 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH2 0xBF9 SWAP2 SWAP1 PUSH2 0x280C JUMP JUMPDEST PUSH2 0xC03 SWAP1 TIMESTAMP PUSH2 0x280C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x4 SLOAD DUP3 PUSH2 0xC15 SWAP2 SWAP1 PUSH2 0x26D3 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xA PUSH2 0xC25 DUP4 PUSH1 0xC PUSH2 0x26D3 JUMP JUMPDEST PUSH2 0xC2F SWAP2 SWAP1 PUSH2 0x26F2 JUMP JUMPDEST LT ISZERO PUSH2 0xC48 JUMPI PUSH2 0xC3E DUP5 PUSH2 0x2061 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SSTORE PUSH2 0xB2A JUMP JUMPDEST POP POP POP PUSH1 0x7 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC80 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FB SWAP1 PUSH2 0x277A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCC8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x217265776172642073657474696E67 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH32 0x7A486D506196E4AE0E0B063ACCA8CB3E3128C1BA505CD447ED148222C2D0B153 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x13 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A090 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xB2A SWAP1 DUP5 DUP5 PUSH2 0xE3B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FB SWAP1 PUSH2 0x272C JUMP JUMPDEST PUSH2 0x88F PUSH1 0x0 PUSH2 0x2157 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FB SWAP1 PUSH2 0x272C JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xF382D8404A45286F6180665C3EB5574DF3E6EFDD99AD2E652D8F5D904F264F0 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE36 TIMESTAMP PUSH1 0x3 SLOAD PUSH2 0x21A7 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0xE47 DUP2 PUSH2 0x1C76 JUMP JUMPDEST PUSH1 0x0 DUP6 GT PUSH2 0xE97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526577617264506F6F6C203A2043616E6E6F7420776974686472617720300000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FB JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF42 JUMPI PUSH1 0x13 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xEB8 JUMPI PUSH2 0xEB8 PUSH2 0x2823 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x14640F37 PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA32079B8 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF0B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF2F SWAP2 SWAP1 PUSH2 0x27EF JUMP JUMPDEST POP DUP1 PUSH2 0xF3A DUP2 PUSH2 0x2839 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE9D JUMP JUMPDEST POP DUP6 PUSH1 0x11 SLOAD PUSH2 0xF51 SWAP2 SWAP1 PUSH2 0x280C JUMP JUMPDEST PUSH1 0x11 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF6F SWAP1 DUP8 SWAP1 PUSH2 0x280C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE DUP5 ISZERO PUSH2 0xF91 JUMPI PUSH2 0xF91 CALLER DUP6 PUSH1 0x1 PUSH2 0x1DF3 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0xFA8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP9 PUSH2 0x18CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0xFF5 DUP2 PUSH2 0x1C76 JUMP JUMPDEST PUSH2 0xA9B CALLER DUP5 PUSH1 0x1 PUSH2 0x1DF3 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x102E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FB SWAP1 PUSH2 0x277A JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x0 NOT SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1092 JUMPI DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x13 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x105D JUMPI PUSH2 0x105D PUSH2 0x2823 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1080 JUMPI DUP1 SWAP3 POP PUSH2 0x1092 JUMP JUMPDEST DUP1 PUSH2 0x108A DUP2 PUSH2 0x2839 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1038 JUMP JUMPDEST POP PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x10DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x195E1D1C98481C995DD85C99081B9BDD08199BDD5B99 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH32 0x8B6E4849B65BA893304022BD0F251B5584E334B1E08550E629E83D733745ED46 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x13 DUP1 SLOAD PUSH2 0x112A SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x280C JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x113A JUMPI PUSH2 0x113A PUSH2 0x2823 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x13 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP5 SWAP1 DUP2 LT PUSH2 0x1166 JUMPI PUSH2 0x1166 PUSH2 0x2823 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x13 DUP1 SLOAD DUP1 PUSH2 0x11A5 JUMPI PUSH2 0x11A5 PUSH2 0x2854 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xA9B SWAP1 DUP4 DUP4 PUSH2 0xE3B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F8 CALLER DUP4 PUSH2 0x1AC3 JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1224 JUMPI PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1228 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO JUMPDEST PUSH2 0x128B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6FB JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x12B5 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF PUSH1 0xA0 SHL NOT AND PUSH2 0x101 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH2 0x130B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5F7374616B696E67546F6B656E20307830206164647265737300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1353 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x5F7665203078302061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x13A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5F7665596669526577617264506F6F6C20307830206164647265737300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x13B3 DUP7 DUP7 PUSH2 0x21BD JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0xD DUP1 SLOAD DUP8 DUP4 AND SWAP1 DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xF DUP1 SLOAD DUP10 DUP5 AND SWAP1 DUP6 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xE DUP1 SLOAD DUP9 DUP6 AND SWAP6 AND DUP6 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE DUP12 DUP5 AND PUSH1 0x20 DUP8 ADD MSTORE SWAP3 DUP11 AND SWAP3 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH32 0x58CA036ED94EE2B2004ADAC9F54A88961A882010564179AEFA6106F7977102A9 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 ISZERO PUSH2 0x146A JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE36 PUSH2 0x2242 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH2 0x1567 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14F0 SWAP2 SWAP1 PUSH2 0x2761 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x153E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1562 SWAP2 SWAP1 PUSH2 0x2761 JUMP JUMPDEST PUSH2 0x21A7 JUMP JUMPDEST SWAP1 POP PUSH2 0xAE0 CALLER DUP3 PUSH2 0x1AC3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x98D DUP3 PUSH2 0x173D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x15A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FB SWAP1 PUSH2 0x272C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x160D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x1616 DUP2 PUSH2 0x2157 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1625 DUP2 PUSH2 0x1C76 JUMP JUMPDEST PUSH2 0xB2A DUP5 PUSH1 0x0 DUP6 PUSH2 0x1DF3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x165B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FB SWAP1 PUSH2 0x272C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1666 DUP2 PUSH2 0x1C76 JUMP JUMPDEST PUSH1 0x3 SLOAD TIMESTAMP LT ISZERO PUSH2 0x16A4 JUMPI PUSH1 0x0 TIMESTAMP PUSH1 0x3 SLOAD PUSH2 0x1680 SWAP2 SWAP1 PUSH2 0x280C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x4 SLOAD DUP3 PUSH2 0x1692 SWAP2 SWAP1 PUSH2 0x26D3 JUMP JUMPDEST SWAP1 POP PUSH2 0x169E DUP5 DUP3 PUSH2 0x26F2 JUMP JUMPDEST PUSH1 0x4 SSTORE POP POP JUMPDEST PUSH1 0x2 DUP3 SWAP1 SSTORE PUSH1 0x4 SLOAD PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0xF899C6D536E6CDA78C5F4DCE43CA0E8C47167DEB2875EA8B777F21CC85899B1F SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x1716 PUSH2 0x2242 JUMP JUMPDEST PUSH2 0x1720 SWAP2 SWAP1 PUSH2 0x280C JUMP JUMPDEST PUSH2 0x1729 DUP5 PUSH2 0x1936 JUMP JUMPDEST PUSH2 0x1733 SWAP2 SWAP1 PUSH2 0x26D3 JUMP JUMPDEST PUSH2 0x98D SWAP2 SWAP1 PUSH2 0x26F2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1705A3BD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x1705A3BD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1787 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17AB SWAP2 SWAP1 PUSH2 0x27EF JUMP JUMPDEST ISZERO PUSH2 0x17BA JUMPI POP PUSH3 0xF4240 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0xADC63589 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0xADC63589 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1805 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1829 SWAP2 SWAP1 PUSH2 0x2761 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO DUP1 PUSH2 0x1838 JUMPI POP TIMESTAMP DUP2 GT ISZERO JUMPDEST ISZERO PUSH2 0x1846 JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1852 TIMESTAMP DUP4 PUSH2 0x280C JUMP JUMPDEST SWAP1 POP PUSH3 0x278D00 PUSH2 0x1866 DUP3 PUSH4 0x784CE00 PUSH2 0x280C JUMP JUMPDEST LT ISZERO PUSH2 0x1878 JUMPI POP PUSH3 0xF4240 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x784CE00 PUSH2 0x188A DUP3 PUSH3 0xF4240 PUSH2 0x26D3 JUMP JUMPDEST PUSH2 0x1894 SWAP2 SWAP1 PUSH2 0x26F2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x98D JUMPI POP POP PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1931 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x22A6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x198C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19B0 SWAP2 SWAP1 PUSH2 0x2761 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x19D4 JUMPI POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH2 0x6C9 SWAP3 PUSH1 0x64 SWAP3 DUP6 SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A27 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A4B SWAP2 SWAP1 PUSH2 0x2761 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x1A58 SWAP2 SWAP1 PUSH2 0x26D3 JUMP JUMPDEST PUSH2 0x1A62 SWAP2 SWAP1 PUSH2 0x26F2 JUMP JUMPDEST PUSH2 0x1A6D SWAP1 PUSH1 0x3C PUSH2 0x26D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1A91 SWAP1 PUSH1 0x28 PUSH2 0x26D3 JUMP JUMPDEST PUSH2 0x1A9B SWAP2 SWAP1 PUSH2 0x2714 JUMP JUMPDEST PUSH2 0x1AA5 SWAP2 SWAP1 PUSH2 0x26F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x21A7 JUMP JUMPDEST DUP2 PUSH2 0x1ACD DUP2 PUSH2 0x1C76 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x1B1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526577617264506F6F6C203A2043616E6E6F74206465706F7369742030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FB JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1BCA JUMPI PUSH1 0x13 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1B3E JUMPI PUSH2 0x1B3E PUSH2 0x2823 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x14640F37 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA32079B8 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B93 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BB7 SWAP2 SWAP1 PUSH2 0x27EF JUMP JUMPDEST POP DUP1 PUSH2 0x1BC2 DUP2 PUSH2 0x2839 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1B23 JUMP JUMPDEST POP DUP3 PUSH1 0x11 SLOAD PUSH2 0x1BD9 SWAP2 SWAP1 PUSH2 0x2714 JUMP JUMPDEST PUSH1 0x11 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1C00 SWAP1 DUP5 SWAP1 PUSH2 0x2714 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xC SLOAD PUSH2 0x1C2D SWAP2 AND CALLER ADDRESS DUP7 PUSH2 0x2029 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP5 PUSH1 0x40 MLOAD PUSH2 0x1C68 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0x1C7E PUSH2 0x2242 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH2 0x1C89 PUSH2 0xE28 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1616 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x1D7B JUMPI PUSH1 0x0 PUSH2 0x1CC4 DUP3 PUSH2 0x16EB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1CD1 DUP4 PUSH2 0x2378 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0xF4240 DUP4 PUSH2 0x1CE3 DUP7 PUSH2 0x173D JUMP JUMPDEST PUSH2 0x1CF0 SWAP1 PUSH3 0xF4240 PUSH2 0x280C JUMP JUMPDEST PUSH2 0x1CFA SWAP2 SWAP1 PUSH2 0x26D3 JUMP JUMPDEST PUSH2 0x1D04 SWAP2 SWAP1 PUSH2 0x26F2 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D10 DUP2 DUP5 PUSH2 0x280C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1D38 SWAP1 DUP5 SWAP1 PUSH2 0x2714 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x10 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1D51 SWAP2 SWAP1 PUSH2 0x2714 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1D61 SWAP1 POP DUP4 DUP4 PUSH2 0x280C JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1D72 SWAP2 SWAP1 PUSH2 0x2714 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP7 SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH1 0xB DUP4 MSTORE SWAP4 DUP2 SWAP1 KECCAK256 SLOAD SWAP3 DUP3 MSTORE DUP1 MLOAD SWAP5 DUP6 MSTORE SWAP1 DUP5 ADD DUP6 SWAP1 MSTORE DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xFBE590C835E1C07F8E971C36021D1BE46F43F7B0B6DC5413DBD5753590569D58 SWAP1 PUSH1 0xA0 ADD PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x1F6F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE DUP3 ISZERO PUSH2 0x1F14 JUMPI PUSH1 0x1 SLOAD PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EAA SWAP2 SWAP1 PUSH2 0x27EF JUMP JUMPDEST POP PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x1D23139F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x3A46273E SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F0B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1F2B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1F2B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP4 PUSH2 0x18CE JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1F66 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP2 ISZERO PUSH2 0x2023 JUMPI PUSH1 0x13 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2020 JUMPI PUSH1 0x13 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1F96 JUMPI PUSH2 0x1F96 PUSH2 0x2823 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x55DE275 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x55DE275 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FE9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x200D SWAP2 SWAP1 PUSH2 0x27EF JUMP JUMPDEST POP DUP1 PUSH2 0x2018 DUP2 PUSH2 0x2839 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1F7B JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x2023 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD PUSH2 0x18FA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x206C DUP2 PUSH2 0x1C76 JUMP JUMPDEST DUP2 PUSH1 0x9 SLOAD PUSH2 0x207A SWAP2 SWAP1 PUSH2 0x2714 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x3 SLOAD TIMESTAMP LT PUSH2 0x209B JUMPI PUSH1 0x2 SLOAD PUSH2 0x2093 SWAP1 DUP4 PUSH2 0x26F2 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH2 0x20DF JUMP JUMPDEST PUSH1 0x0 TIMESTAMP PUSH1 0x3 SLOAD PUSH2 0x20AB SWAP2 SWAP1 PUSH2 0x280C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x4 SLOAD DUP3 PUSH2 0x20BD SWAP2 SWAP1 PUSH2 0x26D3 JUMP JUMPDEST SWAP1 POP PUSH2 0x20C9 DUP2 DUP6 PUSH2 0x2714 JUMP JUMPDEST SWAP4 POP PUSH1 0x2 SLOAD DUP5 PUSH2 0x20D9 SWAP2 SWAP1 PUSH2 0x26F2 JUMP JUMPDEST PUSH1 0x4 SSTORE POP POP JUMPDEST PUSH1 0x8 DUP3 SWAP1 SSTORE TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH2 0x20F6 SWAP2 PUSH2 0x2714 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE PUSH1 0x8 SLOAD PUSH1 0x5 SLOAD PUSH1 0x4 SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x944FFD3678415A15CBFEF07DD7D9F20CDC6F36D12588A4BA7E8EB440F32C61BE SWAP1 PUSH1 0xA0 ADD PUSH2 0x16DF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x21B6 JUMPI DUP2 PUSH2 0x6C9 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2213 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5F726577617264546F6B656E2030783020616464726573730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FB JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE PUSH3 0x93A80 PUSH1 0x2 SSTORE PUSH2 0x223E DUP2 PUSH2 0x2157 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x224D PUSH1 0x11 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2258 JUMPI POP PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH2 0x2269 PUSH2 0xE28 JUMP JUMPDEST PUSH2 0x2273 SWAP2 SWAP1 PUSH2 0x280C JUMP JUMPDEST PUSH2 0x227D SWAP2 SWAP1 PUSH2 0x26D3 JUMP JUMPDEST PUSH2 0x228F SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x26D3 JUMP JUMPDEST PUSH2 0x2299 SWAP2 SWAP1 PUSH2 0x26F2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xE36 SWAP2 SWAP1 PUSH2 0x2714 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22FB DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x23D0 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1931 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2319 SWAP2 SWAP1 PUSH2 0x27EF JUMP JUMPDEST PUSH2 0x1931 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x23A3 PUSH2 0x2242 JUMP JUMPDEST PUSH2 0x23AD SWAP2 SWAP1 PUSH2 0x280C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1733 SWAP2 SWAP1 PUSH2 0x26D3 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1894 DUP5 DUP5 PUSH1 0x0 DUP6 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x2432 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FB JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x244E SWAP2 SWAP1 PUSH2 0x2896 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x248B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2490 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x24A0 DUP3 DUP3 DUP7 PUSH2 0x24AB JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x24BA JUMPI POP DUP2 PUSH2 0x6C9 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x24CA JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FB SWAP2 SWAP1 PUSH2 0x28B2 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1616 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xAE5 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x24FE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x81C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x253B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6C9 DUP3 PUSH2 0x2512 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2560 DUP4 PUSH2 0x2512 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2580 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1616 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x25B3 DUP2 PUSH2 0x2587 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x25C3 DUP2 PUSH2 0x2587 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x25E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x25F5 DUP2 PUSH2 0x2587 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x2605 DUP2 PUSH2 0x2587 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2622 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6C9 DUP2 PUSH2 0x2587 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x264F DUP8 PUSH2 0x2512 JUMP JUMPDEST SWAP6 POP PUSH2 0x265D PUSH1 0x20 DUP9 ADD PUSH2 0x2512 JUMP JUMPDEST SWAP5 POP PUSH2 0x266B PUSH1 0x40 DUP9 ADD PUSH2 0x2512 JUMP JUMPDEST SWAP4 POP PUSH2 0x2679 PUSH1 0x60 DUP9 ADD PUSH2 0x2512 JUMP JUMPDEST SWAP3 POP PUSH2 0x2687 PUSH1 0x80 DUP9 ADD PUSH2 0x2512 JUMP JUMPDEST SWAP2 POP PUSH2 0x2695 PUSH1 0xA0 DUP9 ADD PUSH2 0x2512 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25B3 DUP4 PUSH2 0x2512 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x26ED JUMPI PUSH2 0x26ED PUSH2 0x26BD JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x270F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2727 JUMPI PUSH2 0x2727 PUSH2 0x26BD JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2773 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x8585D5D1A1BDC9A5E9959 PUSH1 0xAA SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 SLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP1 SWAP3 SWAP2 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x27E3 JUMPI DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 ADD PUSH2 0x27BE JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2801 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x6C9 DUP2 PUSH2 0x2587 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x281E JUMPI PUSH2 0x281E PUSH2 0x26BD JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x284D JUMPI PUSH2 0x284D PUSH2 0x26BD JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2885 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x286D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2023 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x28A8 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x286A JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x28D1 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x286A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0xD4 0x4F 0xAF 0xD2 0xA6 0xF7 0x4C 0xEE MUL RETURNDATASIZE SWAP11 0x1E PUSH24 0xDC96B76D8320A93EAF21E2103E6FA367E9AC64736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        705,
        17586
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "6": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "8": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "12": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "REVERT",
      "path": "10"
    },
    "16": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "17": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "POP",
      "path": "10"
    },
    "18": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "21": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "LT",
      "path": "10"
    },
    "22": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x30B"
    },
    "25": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "26": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "29": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "SHR",
      "path": "10"
    },
    "32": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "33": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x7A238855"
    },
    "38": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "GT",
      "path": "10"
    },
    "39": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x19D"
    },
    "42": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "43": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "44": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xC1A287E2"
    },
    "49": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "GT",
      "path": "10"
    },
    "50": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE9"
    },
    "53": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "54": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "55": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xDEEE8E54"
    },
    "60": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "GT",
      "path": "10"
    },
    "61": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA2"
    },
    "64": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "65": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "66": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xF2FDE38B"
    },
    "71": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "GT",
      "path": "10"
    },
    "72": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7C"
    },
    "75": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "76": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "77": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xF2FDE38B"
    },
    "82": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "83": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x629"
    },
    "86": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "87": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "88": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xF579513F"
    },
    "93": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "94": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x63C"
    },
    "97": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "98": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "99": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xF6BE71D1"
    },
    "104": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "105": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x64F"
    },
    "108": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "109": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "110": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xF7C618C1"
    },
    "115": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "116": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x662"
    },
    "119": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "120": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "123": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "REVERT",
      "path": "10"
    },
    "124": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "125": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "126": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xDEEE8E54"
    },
    "131": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "132": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x604"
    },
    "135": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "136": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "137": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xDF136D65"
    },
    "142": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "143": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x617"
    },
    "146": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "147": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "148": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xEBE2B12B"
    },
    "153": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "154": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x620"
    },
    "157": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "158": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "160": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "161": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "REVERT",
      "path": "10"
    },
    "162": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "163": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "164": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xC1A287E2"
    },
    "169": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "170": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5C6"
    },
    "173": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "174": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "175": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xC8F33C91"
    },
    "180": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "181": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5D0"
    },
    "184": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "185": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "186": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xCC2A9A5B"
    },
    "191": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "192": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5D9"
    },
    "195": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "196": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "197": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xCD3DAF9D"
    },
    "202": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "203": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5EC"
    },
    "206": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "207": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "208": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xD0E30DB0"
    },
    "213": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "214": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5F4"
    },
    "217": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "218": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "219": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xD55A23F4"
    },
    "224": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "225": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5FC"
    },
    "228": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "229": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "231": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "232": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "REVERT",
      "path": "10"
    },
    "233": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "234": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "235": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x920E8217"
    },
    "240": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "GT",
      "path": "10"
    },
    "241": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x156"
    },
    "244": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "245": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "246": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xA4698FEB"
    },
    "251": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "GT",
      "path": "10"
    },
    "252": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x130"
    },
    "255": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "256": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "257": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xA4698FEB"
    },
    "262": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "263": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x57A"
    },
    "266": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "267": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "268": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xA80FF90A"
    },
    "273": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "274": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x58D"
    },
    "277": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "278": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "279": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xA810A54C"
    },
    "284": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "285": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5A0"
    },
    "288": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "289": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "290": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xB6B55F25"
    },
    "295": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "296": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5B3"
    },
    "299": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "300": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "302": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "303": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "REVERT",
      "path": "10"
    },
    "304": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "305": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "306": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x920E8217"
    },
    "311": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "312": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x54A"
    },
    "315": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "316": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "317": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x92930B45"
    },
    "322": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "323": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x554"
    },
    "326": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "327": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "328": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x9E15977F"
    },
    "333": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "334": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x567"
    },
    "337": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "338": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "340": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "341": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "REVERT",
      "path": "10"
    },
    "342": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "343": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "344": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x7A238855"
    },
    "349": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "350": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4EC"
    },
    "353": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "354": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "355": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x7B0A47EE"
    },
    "360": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "361": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4FF"
    },
    "364": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "365": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "366": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x80FAA57D"
    },
    "371": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "372": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x508"
    },
    "375": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "376": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "377": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x8B876347"
    },
    "382": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "383": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x510"
    },
    "386": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "387": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "388": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x8DA5CB5B"
    },
    "393": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "394": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x530"
    },
    "397": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "398": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "399": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x901A7D53"
    },
    "404": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "405": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x541"
    },
    "408": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "409": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "411": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "412": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "REVERT",
      "path": "10"
    },
    "413": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "414": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "415": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x3CCFD60B"
    },
    "420": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "GT",
      "path": "10"
    },
    "421": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x25C"
    },
    "424": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "425": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "426": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x5E43C47B"
    },
    "431": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "GT",
      "path": "10"
    },
    "432": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x215"
    },
    "435": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "436": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "437": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x6A4AC73B"
    },
    "442": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "GT",
      "path": "10"
    },
    "443": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1EF"
    },
    "446": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "447": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "448": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x6A4AC73B"
    },
    "453": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "454": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x495"
    },
    "457": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "458": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "459": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x70A08231"
    },
    "464": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "465": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4A8"
    },
    "468": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "469": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "470": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x715018A6"
    },
    "475": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "476": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4D1"
    },
    "479": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "480": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "481": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x72F702F3"
    },
    "486": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "487": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4D9"
    },
    "490": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "491": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "493": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "494": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "REVERT",
      "path": "10"
    },
    "495": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "496": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "497": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x5E43C47B"
    },
    "502": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "503": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x46E"
    },
    "506": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "507": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "508": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x63D38C3B"
    },
    "513": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "514": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x481"
    },
    "517": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "518": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "519": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x65A5D5F0"
    },
    "524": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "525": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x48A"
    },
    "528": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "529": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "531": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "532": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "REVERT",
      "path": "10"
    },
    "533": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "534": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "535": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x3CCFD60B"
    },
    "540": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "541": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x41C"
    },
    "544": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "545": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "546": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x3D18B912"
    },
    "551": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "552": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x424"
    },
    "555": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "556": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "557": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x40C35446"
    },
    "562": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "563": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x42C"
    },
    "566": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "567": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "568": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x425B6E2F"
    },
    "573": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "574": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x43F"
    },
    "577": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "578": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "579": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x42886B67"
    },
    "584": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "585": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x452"
    },
    "588": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "589": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "590": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x590A41F5"
    },
    "595": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "596": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x45B"
    },
    "599": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "600": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "602": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "603": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "REVERT",
      "path": "10"
    },
    "604": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "605": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "606": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x153EE554"
    },
    "611": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "GT",
      "path": "10"
    },
    "612": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2C9"
    },
    "615": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "616": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "617": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x262D3D6D"
    },
    "622": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "GT",
      "path": "10"
    },
    "623": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A3"
    },
    "626": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "627": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "628": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x262D3D6D"
    },
    "633": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "634": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3E5"
    },
    "637": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "638": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "639": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x26F553E9"
    },
    "644": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "645": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3EE"
    },
    "648": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "649": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "650": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x2F4F21E2"
    },
    "655": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "656": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3F6"
    },
    "659": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "660": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "661": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x3B92EB23"
    },
    "666": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "667": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x409"
    },
    "670": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "671": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "673": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "674": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "REVERT",
      "path": "10"
    },
    "675": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "676": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "677": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x153EE554"
    },
    "682": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "683": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3B7"
    },
    "686": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "687": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "688": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x18160DDD"
    },
    "693": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "694": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3CA"
    },
    "697": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "698": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "699": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x1BEABCD2"
    },
    "704": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "705": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3D2"
    },
    "708": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "709": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "711": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "712": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "REVERT",
      "path": "10"
    },
    "713": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "714": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "715": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0x8CC262"
    },
    "719": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "720": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x310"
    },
    "723": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "724": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "725": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x1681A62"
    },
    "730": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "731": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x336"
    },
    "734": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "735": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "736": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x569D388"
    },
    "741": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "742": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x359"
    },
    "745": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "746": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "747": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x700037D"
    },
    "752": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "753": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x363"
    },
    "756": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "757": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "758": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xF4EF8A6"
    },
    "763": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "764": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x383"
    },
    "767": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "768": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "769": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFB5A6B4"
    },
    "774": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "EQ",
      "path": "10"
    },
    "775": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3AE"
    },
    "778": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "779": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "780": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "782": {
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "DUP1",
      "path": "10"
    },
    "783": {
      "first_revert": true,
      "fn": null,
      "offset": [
        705,
        17586
      ],
      "op": "REVERT",
      "path": "10"
    },
    "784": {
      "fn": "Gauge.earned",
      "offset": [
        8379,
        8698
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "785": {
      "fn": "Gauge.earned",
      "offset": [
        8379,
        8698
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x323"
    },
    "788": {
      "fn": "Gauge.earned",
      "offset": [
        8379,
        8698
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x31E"
    },
    "791": {
      "fn": "Gauge.earned",
      "offset": [
        8379,
        8698
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "792": {
      "fn": "Gauge.earned",
      "offset": [
        8379,
        8698
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "794": {
      "fn": "Gauge.earned",
      "offset": [
        8379,
        8698
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2529"
    },
    "797": {
      "fn": "Gauge.earned",
      "jump": "i",
      "offset": [
        8379,
        8698
      ],
      "op": "JUMP",
      "path": "10"
    },
    "798": {
      "fn": "Gauge.earned",
      "offset": [
        8379,
        8698
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "799": {
      "fn": "Gauge.earned",
      "offset": [
        8379,
        8698
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x675"
    },
    "802": {
      "fn": "Gauge.earned",
      "jump": "i",
      "offset": [
        8379,
        8698
      ],
      "op": "JUMP",
      "path": "10"
    },
    "803": {
      "fn": "Gauge.earned",
      "offset": [
        8379,
        8698
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "804": {
      "fn": "Gauge.earned",
      "offset": [
        8379,
        8698
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "806": {
      "fn": "Gauge.earned",
      "offset": [
        8379,
        8698
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "807": {
      "op": "SWAP1"
    },
    "808": {
      "op": "DUP2"
    },
    "809": {
      "op": "MSTORE"
    },
    "810": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "812": {
      "op": "ADD"
    },
    "813": {
      "fn": "Gauge.earned",
      "offset": [
        8379,
        8698
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "814": {
      "fn": "Gauge.earned",
      "offset": [
        8379,
        8698
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "816": {
      "fn": "Gauge.earned",
      "offset": [
        8379,
        8698
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "817": {
      "fn": "Gauge.earned",
      "offset": [
        8379,
        8698
      ],
      "op": "DUP1",
      "path": "10"
    },
    "818": {
      "fn": "Gauge.earned",
      "offset": [
        8379,
        8698
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "819": {
      "fn": "Gauge.earned",
      "offset": [
        8379,
        8698
      ],
      "op": "SUB",
      "path": "10"
    },
    "820": {
      "fn": "Gauge.earned",
      "offset": [
        8379,
        8698
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "821": {
      "fn": "Gauge.earned",
      "offset": [
        8379,
        8698
      ],
      "op": "RETURN",
      "path": "10"
    },
    "822": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3438,
        3764
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "823": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3438,
        3764
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x349"
    },
    "826": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3438,
        3764
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x344"
    },
    "829": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3438,
        3764
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "830": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3438,
        3764
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "832": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3438,
        3764
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2529"
    },
    "835": {
      "fn": "BaseGauge.sweep",
      "jump": "i",
      "offset": [
        3438,
        3764
      ],
      "op": "JUMP",
      "path": "9"
    },
    "836": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3438,
        3764
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "837": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3438,
        3764
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x6D0"
    },
    "840": {
      "fn": "BaseGauge.sweep",
      "jump": "i",
      "offset": [
        3438,
        3764
      ],
      "op": "JUMP",
      "path": "9"
    },
    "841": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3438,
        3764
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "842": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3438,
        3764
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "844": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3438,
        3764
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "845": {
      "op": "SWAP1"
    },
    "846": {
      "op": "ISZERO"
    },
    "847": {
      "op": "ISZERO"
    },
    "848": {
      "op": "DUP2"
    },
    "849": {
      "op": "MSTORE"
    },
    "850": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "852": {
      "op": "ADD"
    },
    "853": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3438,
        3764
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x32D"
    },
    "856": {
      "op": "JUMP"
    },
    "857": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5716,
        5899
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "858": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5716,
        5899
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x361"
    },
    "861": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5716,
        5899
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x821"
    },
    "864": {
      "fn": "Gauge.clearExtraRewards",
      "jump": "i",
      "offset": [
        5716,
        5899
      ],
      "op": "JUMP",
      "path": "10"
    },
    "865": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5716,
        5899
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "866": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5716,
        5899
      ],
      "op": "STOP",
      "path": "10"
    },
    "867": {
      "offset": [
        1059,
        1101
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "868": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        1059,
        1101
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x323"
    },
    "871": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        1059,
        1101
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x371"
    },
    "874": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        1059,
        1101
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "875": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        1059,
        1101
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "877": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        1059,
        1101
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2529"
    },
    "880": {
      "fn": "Gauge.clearExtraRewards",
      "jump": "i",
      "offset": [
        1059,
        1101
      ],
      "op": "JUMP",
      "path": "9"
    },
    "881": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        1059,
        1101
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "882": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        1059,
        1101
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xB"
    },
    "884": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        1059,
        1101
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "886": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        1059,
        1101
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "887": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        1059,
        1101
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "889": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        1059,
        1101
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "890": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        1059,
        1101
      ],
      "op": "DUP2",
      "path": "9"
    },
    "891": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        1059,
        1101
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "892": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        1059,
        1101
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "894": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        1059,
        1101
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "895": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        1059,
        1101
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "896": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        1059,
        1101
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "897": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        1059,
        1101
      ],
      "op": "DUP2",
      "path": "9"
    },
    "898": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        1059,
        1101
      ],
      "op": "JUMP",
      "path": "9"
    },
    "899": {
      "offset": [
        1346,
        1374
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "900": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        1346,
        1374
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xF"
    },
    "902": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        1346,
        1374
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "903": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        1346,
        1374
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x396"
    },
    "906": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        1346,
        1374
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "911": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "913": {
      "op": "SHL"
    },
    "914": {
      "op": "SUB"
    },
    "915": {
      "offset": [
        1346,
        1374
      ],
      "op": "AND",
      "path": "10"
    },
    "916": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        1346,
        1374
      ],
      "op": "DUP2",
      "path": "10"
    },
    "917": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        1346,
        1374
      ],
      "op": "JUMP",
      "path": "10"
    },
    "918": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        1346,
        1374
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "919": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        1346,
        1374
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "921": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        1346,
        1374
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "926": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "928": {
      "op": "SHL"
    },
    "929": {
      "op": "SUB"
    },
    "930": {
      "op": "SWAP1"
    },
    "931": {
      "op": "SWAP2"
    },
    "932": {
      "op": "AND"
    },
    "933": {
      "op": "DUP2"
    },
    "934": {
      "op": "MSTORE"
    },
    "935": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "937": {
      "op": "ADD"
    },
    "938": {
      "offset": [
        1346,
        1374
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x32D"
    },
    "941": {
      "op": "JUMP"
    },
    "942": {
      "offset": [
        569,
        592
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "943": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        569,
        592
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x323"
    },
    "946": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        569,
        592
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "948": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        569,
        592
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "949": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        569,
        592
      ],
      "op": "DUP2",
      "path": "9"
    },
    "950": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        569,
        592
      ],
      "op": "JUMP",
      "path": "9"
    },
    "951": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        16968,
        17358
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "952": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        16968,
        17358
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x349"
    },
    "955": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        16968,
        17358
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3C5"
    },
    "958": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        16968,
        17358
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "959": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        16968,
        17358
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "961": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        16968,
        17358
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2529"
    },
    "964": {
      "fn": "Gauge.setRewardManager",
      "jump": "i",
      "offset": [
        16968,
        17358
      ],
      "op": "JUMP",
      "path": "10"
    },
    "965": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        16968,
        17358
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "966": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        16968,
        17358
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x891"
    },
    "969": {
      "fn": "Gauge.setRewardManager",
      "jump": "i",
      "offset": [
        16968,
        17358
      ],
      "op": "JUMP",
      "path": "10"
    },
    "970": {
      "fn": "Gauge.totalSupply",
      "offset": [
        3784,
        3873
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "971": {
      "fn": "Gauge.totalSupply",
      "offset": [
        3854,
        3866
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 0,
      "value": "0x11"
    },
    "973": {
      "fn": "Gauge.totalSupply",
      "offset": [
        3854,
        3866
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "974": {
      "fn": "Gauge.totalSupply",
      "offset": [
        3784,
        3873
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x323"
    },
    "977": {
      "fn": "Gauge.totalSupply",
      "offset": [
        3784,
        3873
      ],
      "op": "JUMP",
      "path": "10"
    },
    "978": {
      "fn": "Gauge.boostedBalanceOf",
      "offset": [
        9372,
        9495
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "979": {
      "fn": "Gauge.boostedBalanceOf",
      "offset": [
        9372,
        9495
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x323"
    },
    "982": {
      "fn": "Gauge.boostedBalanceOf",
      "offset": [
        9372,
        9495
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3E0"
    },
    "985": {
      "fn": "Gauge.boostedBalanceOf",
      "offset": [
        9372,
        9495
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "986": {
      "fn": "Gauge.boostedBalanceOf",
      "offset": [
        9372,
        9495
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "988": {
      "fn": "Gauge.boostedBalanceOf",
      "offset": [
        9372,
        9495
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2529"
    },
    "991": {
      "fn": "Gauge.boostedBalanceOf",
      "jump": "i",
      "offset": [
        9372,
        9495
      ],
      "op": "JUMP",
      "path": "10"
    },
    "992": {
      "fn": "Gauge.boostedBalanceOf",
      "offset": [
        9372,
        9495
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "993": {
      "fn": "Gauge.boostedBalanceOf",
      "offset": [
        9372,
        9495
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x982"
    },
    "996": {
      "fn": "Gauge.boostedBalanceOf",
      "jump": "i",
      "offset": [
        9372,
        9495
      ],
      "op": "JUMP",
      "path": "10"
    },
    "997": {
      "offset": [
        957,
        989
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "998": {
      "fn": "Gauge.boostedBalanceOf",
      "offset": [
        957,
        989
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x323"
    },
    "1001": {
      "fn": "Gauge.boostedBalanceOf",
      "offset": [
        957,
        989
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x9"
    },
    "1003": {
      "fn": "Gauge.boostedBalanceOf",
      "offset": [
        957,
        989
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1004": {
      "fn": "Gauge.boostedBalanceOf",
      "offset": [
        957,
        989
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1005": {
      "fn": "Gauge.boostedBalanceOf",
      "offset": [
        957,
        989
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1006": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16491,
        16785
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1007": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16491,
        16785
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x349"
    },
    "1010": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16491,
        16785
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x993"
    },
    "1013": {
      "fn": "Gauge.transferQueuedPenalty",
      "jump": "i",
      "offset": [
        16491,
        16785
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1014": {
      "fn": "Gauge.depositFor",
      "offset": [
        11222,
        11358
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1015": {
      "fn": "Gauge.depositFor",
      "offset": [
        11222,
        11358
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x349"
    },
    "1018": {
      "fn": "Gauge.depositFor",
      "offset": [
        11222,
        11358
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x404"
    },
    "1021": {
      "fn": "Gauge.depositFor",
      "offset": [
        11222,
        11358
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1022": {
      "fn": "Gauge.depositFor",
      "offset": [
        11222,
        11358
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1024": {
      "fn": "Gauge.depositFor",
      "offset": [
        11222,
        11358
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2544"
    },
    "1027": {
      "fn": "Gauge.depositFor",
      "jump": "i",
      "offset": [
        11222,
        11358
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1028": {
      "fn": "Gauge.depositFor",
      "offset": [
        11222,
        11358
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1029": {
      "fn": "Gauge.depositFor",
      "offset": [
        11222,
        11358
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA8F"
    },
    "1032": {
      "fn": "Gauge.depositFor",
      "jump": "i",
      "offset": [
        11222,
        11358
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1033": {
      "offset": [
        835,
        857
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1034": {
      "fn": "Gauge.depositFor",
      "offset": [
        835,
        857
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xD"
    },
    "1036": {
      "fn": "Gauge.depositFor",
      "offset": [
        835,
        857
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1037": {
      "fn": "Gauge.depositFor",
      "offset": [
        835,
        857
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x396"
    },
    "1040": {
      "fn": "Gauge.depositFor",
      "offset": [
        835,
        857
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1045": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1047": {
      "op": "SHL"
    },
    "1048": {
      "op": "SUB"
    },
    "1049": {
      "offset": [
        835,
        857
      ],
      "op": "AND",
      "path": "10"
    },
    "1050": {
      "fn": "Gauge.depositFor",
      "offset": [
        835,
        857
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1051": {
      "fn": "Gauge.depositFor",
      "offset": [
        835,
        857
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1052": {
      "fn": "Gauge.withdraw",
      "offset": [
        13962,
        14089
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1053": {
      "fn": "Gauge.withdraw",
      "offset": [
        13962,
        14089
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x349"
    },
    "1056": {
      "fn": "Gauge.withdraw",
      "offset": [
        13962,
        14089
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAA4"
    },
    "1059": {
      "fn": "Gauge.withdraw",
      "jump": "i",
      "offset": [
        13962,
        14089
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1060": {
      "fn": "Gauge.getReward",
      "offset": [
        14939,
        15082
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1061": {
      "fn": "Gauge.getReward",
      "offset": [
        14939,
        15082
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x349"
    },
    "1064": {
      "fn": "Gauge.getReward",
      "offset": [
        14939,
        15082
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAC7"
    },
    "1067": {
      "fn": "Gauge.getReward",
      "jump": "i",
      "offset": [
        14939,
        15082
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1068": {
      "offset": [
        1718,
        1747
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1069": {
      "fn": "Gauge.getReward",
      "offset": [
        1718,
        1747
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x396"
    },
    "1072": {
      "fn": "Gauge.getReward",
      "offset": [
        1718,
        1747
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x43A"
    },
    "1075": {
      "fn": "Gauge.getReward",
      "offset": [
        1718,
        1747
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1076": {
      "fn": "Gauge.getReward",
      "offset": [
        1718,
        1747
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1078": {
      "fn": "Gauge.getReward",
      "offset": [
        1718,
        1747
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x256E"
    },
    "1081": {
      "fn": "Gauge.getReward",
      "jump": "i",
      "offset": [
        1718,
        1747
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1082": {
      "fn": "Gauge.getReward",
      "offset": [
        1718,
        1747
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1083": {
      "fn": "Gauge.getReward",
      "offset": [
        1718,
        1747
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAE9"
    },
    "1086": {
      "fn": "Gauge.getReward",
      "jump": "i",
      "offset": [
        1718,
        1747
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1087": {
      "fn": "Gauge.getReward",
      "offset": [
        14267,
        14475
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1088": {
      "fn": "Gauge.getReward",
      "offset": [
        14267,
        14475
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x349"
    },
    "1091": {
      "fn": "Gauge.getReward",
      "offset": [
        14267,
        14475
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x44D"
    },
    "1094": {
      "fn": "Gauge.getReward",
      "offset": [
        14267,
        14475
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1095": {
      "fn": "Gauge.getReward",
      "offset": [
        14267,
        14475
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1097": {
      "fn": "Gauge.getReward",
      "offset": [
        14267,
        14475
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2595"
    },
    "1100": {
      "fn": "Gauge.getReward",
      "jump": "i",
      "offset": [
        14267,
        14475
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1101": {
      "fn": "Gauge.getReward",
      "offset": [
        14267,
        14475
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1102": {
      "fn": "Gauge.getReward",
      "offset": [
        14267,
        14475
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB13"
    },
    "1105": {
      "fn": "Gauge.getReward",
      "jump": "i",
      "offset": [
        14267,
        14475
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1106": {
      "offset": [
        1554,
        1582
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1107": {
      "fn": "Gauge.getReward",
      "offset": [
        1554,
        1582
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x323"
    },
    "1110": {
      "fn": "Gauge.getReward",
      "offset": [
        1554,
        1582
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x10"
    },
    "1112": {
      "fn": "Gauge.getReward",
      "offset": [
        1554,
        1582
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1113": {
      "fn": "Gauge.getReward",
      "offset": [
        1554,
        1582
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1114": {
      "fn": "Gauge.getReward",
      "offset": [
        1554,
        1582
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1115": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4264,
        5256
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1116": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4264,
        5256
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x349"
    },
    "1119": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4264,
        5256
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x469"
    },
    "1122": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4264,
        5256
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1123": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4264,
        5256
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1125": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4264,
        5256
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x256E"
    },
    "1128": {
      "fn": "BaseGauge.queueNewRewards",
      "jump": "i",
      "offset": [
        4264,
        5256
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1129": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4264,
        5256
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1130": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4264,
        5256
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB34"
    },
    "1133": {
      "fn": "BaseGauge.queueNewRewards",
      "jump": "i",
      "offset": [
        4264,
        5256
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1134": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4497,
        4806
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1135": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4497,
        4806
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x349"
    },
    "1138": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4497,
        4806
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x47C"
    },
    "1141": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4497,
        4806
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1142": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4497,
        4806
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1144": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4497,
        4806
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2529"
    },
    "1147": {
      "fn": "Gauge.addExtraReward",
      "jump": "i",
      "offset": [
        4497,
        4806
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1148": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4497,
        4806
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1149": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4497,
        4806
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC53"
    },
    "1152": {
      "fn": "Gauge.addExtraReward",
      "jump": "i",
      "offset": [
        4497,
        4806
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1153": {
      "offset": [
        888,
        916
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1154": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        888,
        916
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x323"
    },
    "1157": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        888,
        916
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x7"
    },
    "1159": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        888,
        916
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1160": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        888,
        916
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1161": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        888,
        916
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1162": {
      "offset": [
        1033,
        1083
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1163": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        1033,
        1083
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x323"
    },
    "1166": {
      "offset": [
        1068,
        1083
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x784CE00"
    },
    "1171": {
      "offset": [
        1033,
        1083
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1172": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        1033,
        1083
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1173": {
      "fn": "Gauge.withdraw",
      "offset": [
        13347,
        13498
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1174": {
      "fn": "Gauge.withdraw",
      "offset": [
        13347,
        13498
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x349"
    },
    "1177": {
      "fn": "Gauge.withdraw",
      "offset": [
        13347,
        13498
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4A3"
    },
    "1180": {
      "fn": "Gauge.withdraw",
      "offset": [
        13347,
        13498
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1181": {
      "fn": "Gauge.withdraw",
      "offset": [
        13347,
        13498
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1183": {
      "fn": "Gauge.withdraw",
      "offset": [
        13347,
        13498
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2595"
    },
    "1186": {
      "fn": "Gauge.withdraw",
      "jump": "i",
      "offset": [
        13347,
        13498
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1187": {
      "fn": "Gauge.withdraw",
      "offset": [
        13347,
        13498
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1188": {
      "fn": "Gauge.withdraw",
      "offset": [
        13347,
        13498
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD5A"
    },
    "1191": {
      "fn": "Gauge.withdraw",
      "jump": "i",
      "offset": [
        13347,
        13498
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1192": {
      "fn": "Gauge.balanceOf",
      "offset": [
        3984,
        4139
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1193": {
      "fn": "Gauge.balanceOf",
      "offset": [
        3984,
        4139
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x323"
    },
    "1196": {
      "fn": "Gauge.balanceOf",
      "offset": [
        3984,
        4139
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4B6"
    },
    "1199": {
      "fn": "Gauge.balanceOf",
      "offset": [
        3984,
        4139
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1200": {
      "fn": "Gauge.balanceOf",
      "offset": [
        3984,
        4139
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1202": {
      "fn": "Gauge.balanceOf",
      "offset": [
        3984,
        4139
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2529"
    },
    "1205": {
      "fn": "Gauge.balanceOf",
      "jump": "i",
      "offset": [
        3984,
        4139
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1206": {
      "fn": "Gauge.balanceOf",
      "offset": [
        3984,
        4139
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1213": {
      "op": "SHL"
    },
    "1214": {
      "op": "SUB"
    },
    "1215": {
      "fn": "Gauge.balanceOf",
      "offset": [
        4114,
        4132
      ],
      "op": "AND",
      "path": "10",
      "statement": 1
    },
    "1216": {
      "fn": "Gauge.balanceOf",
      "offset": [
        4084,
        4091
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1218": {
      "fn": "Gauge.balanceOf",
      "offset": [
        4114,
        4132
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1219": {
      "fn": "Gauge.balanceOf",
      "offset": [
        4114,
        4132
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1220": {
      "fn": "Gauge.balanceOf",
      "offset": [
        4114,
        4132
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1221": {
      "fn": "Gauge.balanceOf",
      "offset": [
        4114,
        4123
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x12"
    },
    "1223": {
      "fn": "Gauge.balanceOf",
      "offset": [
        4114,
        4132
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1225": {
      "fn": "Gauge.balanceOf",
      "offset": [
        4114,
        4132
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1226": {
      "fn": "Gauge.balanceOf",
      "offset": [
        4114,
        4132
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1228": {
      "fn": "Gauge.balanceOf",
      "offset": [
        4114,
        4132
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1229": {
      "fn": "Gauge.balanceOf",
      "offset": [
        4114,
        4132
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1230": {
      "fn": "Gauge.balanceOf",
      "offset": [
        4114,
        4132
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1231": {
      "fn": "Gauge.balanceOf",
      "offset": [
        4114,
        4132
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1232": {
      "fn": "Gauge.balanceOf",
      "offset": [
        3984,
        4139
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1233": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1234": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x361"
    },
    "1237": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD75"
    },
    "1240": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1241": {
      "offset": [
        780,
        806
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1242": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        780,
        806
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xC"
    },
    "1244": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        780,
        806
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1245": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        780,
        806
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x396"
    },
    "1248": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        780,
        806
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1253": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1255": {
      "op": "SHL"
    },
    "1256": {
      "op": "SUB"
    },
    "1257": {
      "offset": [
        780,
        806
      ],
      "op": "AND",
      "path": "10"
    },
    "1258": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        780,
        806
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1259": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        780,
        806
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1260": {
      "fn": "Gauge.setVe",
      "offset": [
        3611,
        3722
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1261": {
      "fn": "Gauge.setVe",
      "offset": [
        3611,
        3722
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x361"
    },
    "1264": {
      "fn": "Gauge.setVe",
      "offset": [
        3611,
        3722
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4FA"
    },
    "1267": {
      "fn": "Gauge.setVe",
      "offset": [
        3611,
        3722
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1268": {
      "fn": "Gauge.setVe",
      "offset": [
        3611,
        3722
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1270": {
      "fn": "Gauge.setVe",
      "offset": [
        3611,
        3722
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2529"
    },
    "1273": {
      "fn": "Gauge.setVe",
      "jump": "i",
      "offset": [
        3611,
        3722
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1274": {
      "fn": "Gauge.setVe",
      "offset": [
        3611,
        3722
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1275": {
      "fn": "Gauge.setVe",
      "offset": [
        3611,
        3722
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDA9"
    },
    "1278": {
      "fn": "Gauge.setVe",
      "jump": "i",
      "offset": [
        3611,
        3722
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1279": {
      "offset": [
        631,
        656
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1280": {
      "fn": "Gauge.setVe",
      "offset": [
        631,
        656
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x323"
    },
    "1283": {
      "fn": "Gauge.setVe",
      "offset": [
        631,
        656
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1285": {
      "fn": "Gauge.setVe",
      "offset": [
        631,
        656
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1286": {
      "fn": "Gauge.setVe",
      "offset": [
        631,
        656
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1287": {
      "fn": "Gauge.setVe",
      "offset": [
        631,
        656
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1288": {
      "fn": "BaseGauge.lastTimeRewardApplicable",
      "offset": [
        2835,
        2964
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1289": {
      "fn": "BaseGauge.lastTimeRewardApplicable",
      "offset": [
        2835,
        2964
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x323"
    },
    "1292": {
      "fn": "BaseGauge.lastTimeRewardApplicable",
      "offset": [
        2835,
        2964
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xE28"
    },
    "1295": {
      "fn": "BaseGauge.lastTimeRewardApplicable",
      "jump": "i",
      "offset": [
        2835,
        2964
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1296": {
      "offset": [
        996,
        1053
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1297": {
      "fn": "BaseGauge.lastTimeRewardApplicable",
      "offset": [
        996,
        1053
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x323"
    },
    "1300": {
      "fn": "BaseGauge.lastTimeRewardApplicable",
      "offset": [
        996,
        1053
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x51E"
    },
    "1303": {
      "fn": "BaseGauge.lastTimeRewardApplicable",
      "offset": [
        996,
        1053
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1304": {
      "fn": "BaseGauge.lastTimeRewardApplicable",
      "offset": [
        996,
        1053
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1306": {
      "fn": "BaseGauge.lastTimeRewardApplicable",
      "offset": [
        996,
        1053
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2529"
    },
    "1309": {
      "fn": "BaseGauge.lastTimeRewardApplicable",
      "jump": "i",
      "offset": [
        996,
        1053
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1310": {
      "fn": "BaseGauge.lastTimeRewardApplicable",
      "offset": [
        996,
        1053
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1311": {
      "fn": "BaseGauge.lastTimeRewardApplicable",
      "offset": [
        996,
        1053
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA"
    },
    "1313": {
      "fn": "BaseGauge.lastTimeRewardApplicable",
      "offset": [
        996,
        1053
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1315": {
      "fn": "BaseGauge.lastTimeRewardApplicable",
      "offset": [
        996,
        1053
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1316": {
      "fn": "BaseGauge.lastTimeRewardApplicable",
      "offset": [
        996,
        1053
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1318": {
      "fn": "BaseGauge.lastTimeRewardApplicable",
      "offset": [
        996,
        1053
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1319": {
      "fn": "BaseGauge.lastTimeRewardApplicable",
      "offset": [
        996,
        1053
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1320": {
      "fn": "BaseGauge.lastTimeRewardApplicable",
      "offset": [
        996,
        1053
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1321": {
      "fn": "BaseGauge.lastTimeRewardApplicable",
      "offset": [
        996,
        1053
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1323": {
      "fn": "BaseGauge.lastTimeRewardApplicable",
      "offset": [
        996,
        1053
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1324": {
      "fn": "BaseGauge.lastTimeRewardApplicable",
      "offset": [
        996,
        1053
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1325": {
      "fn": "BaseGauge.lastTimeRewardApplicable",
      "offset": [
        996,
        1053
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1326": {
      "fn": "BaseGauge.lastTimeRewardApplicable",
      "offset": [
        996,
        1053
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1327": {
      "fn": "BaseGauge.lastTimeRewardApplicable",
      "offset": [
        996,
        1053
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1328": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1329": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1331": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 2
    },
    "1332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1336": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1338": {
      "op": "SHL"
    },
    "1339": {
      "op": "SUB"
    },
    "1340": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1341": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x396"
    },
    "1344": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1345": {
      "offset": [
        922,
        951
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1346": {
      "fn": "Ownable.owner",
      "offset": [
        922,
        951
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x323"
    },
    "1349": {
      "fn": "Ownable.owner",
      "offset": [
        922,
        951
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x8"
    },
    "1351": {
      "fn": "Ownable.owner",
      "offset": [
        922,
        951
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1352": {
      "fn": "Ownable.owner",
      "offset": [
        922,
        951
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1353": {
      "fn": "Ownable.owner",
      "offset": [
        922,
        951
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1354": {
      "offset": [
        1089,
        1136
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1355": {
      "fn": "Ownable.owner",
      "offset": [
        1089,
        1136
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x323"
    },
    "1358": {
      "offset": [
        1131,
        1136
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0xF4240"
    },
    "1362": {
      "offset": [
        1089,
        1136
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1363": {
      "fn": "Ownable.owner",
      "offset": [
        1089,
        1136
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1364": {
      "fn": "Gauge.withdraw",
      "offset": [
        12325,
        13072
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1365": {
      "fn": "Gauge.withdraw",
      "offset": [
        12325,
        13072
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x349"
    },
    "1368": {
      "fn": "Gauge.withdraw",
      "offset": [
        12325,
        13072
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x562"
    },
    "1371": {
      "fn": "Gauge.withdraw",
      "offset": [
        12325,
        13072
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1372": {
      "fn": "Gauge.withdraw",
      "offset": [
        12325,
        13072
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1374": {
      "fn": "Gauge.withdraw",
      "offset": [
        12325,
        13072
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x25CE"
    },
    "1377": {
      "fn": "Gauge.withdraw",
      "jump": "i",
      "offset": [
        12325,
        13072
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1378": {
      "fn": "Gauge.withdraw",
      "offset": [
        12325,
        13072
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1379": {
      "fn": "Gauge.withdraw",
      "offset": [
        12325,
        13072
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE3B"
    },
    "1382": {
      "fn": "Gauge.withdraw",
      "jump": "i",
      "offset": [
        12325,
        13072
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1383": {
      "offset": [
        942,
        972
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1384": {
      "fn": "Gauge.withdraw",
      "offset": [
        942,
        972
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE"
    },
    "1386": {
      "fn": "Gauge.withdraw",
      "offset": [
        942,
        972
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1387": {
      "fn": "Gauge.withdraw",
      "offset": [
        942,
        972
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x396"
    },
    "1390": {
      "fn": "Gauge.withdraw",
      "offset": [
        942,
        972
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1395": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1397": {
      "op": "SHL"
    },
    "1398": {
      "op": "SUB"
    },
    "1399": {
      "offset": [
        942,
        972
      ],
      "op": "AND",
      "path": "10"
    },
    "1400": {
      "fn": "Gauge.withdraw",
      "offset": [
        942,
        972
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1401": {
      "fn": "Gauge.withdraw",
      "offset": [
        942,
        972
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1402": {
      "fn": "Gauge.getReward",
      "offset": [
        14632,
        14813
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1403": {
      "fn": "Gauge.getReward",
      "offset": [
        14632,
        14813
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x349"
    },
    "1406": {
      "fn": "Gauge.getReward",
      "offset": [
        14632,
        14813
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x588"
    },
    "1409": {
      "fn": "Gauge.getReward",
      "offset": [
        14632,
        14813
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1410": {
      "fn": "Gauge.getReward",
      "offset": [
        14632,
        14813
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1412": {
      "fn": "Gauge.getReward",
      "offset": [
        14632,
        14813
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2610"
    },
    "1415": {
      "fn": "Gauge.getReward",
      "jump": "i",
      "offset": [
        14632,
        14813
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1416": {
      "fn": "Gauge.getReward",
      "offset": [
        14632,
        14813
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1417": {
      "fn": "Gauge.getReward",
      "offset": [
        14632,
        14813
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFE9"
    },
    "1420": {
      "fn": "Gauge.getReward",
      "jump": "i",
      "offset": [
        14632,
        14813
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1421": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        4980,
        5618
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1422": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        4980,
        5618
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x349"
    },
    "1425": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        4980,
        5618
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x59B"
    },
    "1428": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        4980,
        5618
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1429": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        4980,
        5618
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1431": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        4980,
        5618
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2529"
    },
    "1434": {
      "fn": "Gauge.removeExtraReward",
      "jump": "i",
      "offset": [
        4980,
        5618
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1435": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        4980,
        5618
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1436": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        4980,
        5618
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1001"
    },
    "1439": {
      "fn": "Gauge.removeExtraReward",
      "jump": "i",
      "offset": [
        4980,
        5618
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1440": {
      "fn": "Gauge.withdraw",
      "offset": [
        13689,
        13828
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1441": {
      "fn": "Gauge.withdraw",
      "offset": [
        13689,
        13828
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x349"
    },
    "1444": {
      "fn": "Gauge.withdraw",
      "offset": [
        13689,
        13828
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5AE"
    },
    "1447": {
      "fn": "Gauge.withdraw",
      "offset": [
        13689,
        13828
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1448": {
      "fn": "Gauge.withdraw",
      "offset": [
        13689,
        13828
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1450": {
      "fn": "Gauge.withdraw",
      "offset": [
        13689,
        13828
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2610"
    },
    "1453": {
      "fn": "Gauge.withdraw",
      "jump": "i",
      "offset": [
        13689,
        13828
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1454": {
      "fn": "Gauge.withdraw",
      "offset": [
        13689,
        13828
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1455": {
      "fn": "Gauge.withdraw",
      "offset": [
        13689,
        13828
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11D1"
    },
    "1458": {
      "fn": "Gauge.withdraw",
      "jump": "i",
      "offset": [
        13689,
        13828
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1459": {
      "fn": "Gauge.deposit",
      "offset": [
        10280,
        10403
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1460": {
      "fn": "Gauge.deposit",
      "offset": [
        10280,
        10403
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x349"
    },
    "1463": {
      "fn": "Gauge.deposit",
      "offset": [
        10280,
        10403
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5C1"
    },
    "1466": {
      "fn": "Gauge.deposit",
      "offset": [
        10280,
        10403
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1467": {
      "fn": "Gauge.deposit",
      "offset": [
        10280,
        10403
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1469": {
      "fn": "Gauge.deposit",
      "offset": [
        10280,
        10403
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x256E"
    },
    "1472": {
      "fn": "Gauge.deposit",
      "jump": "i",
      "offset": [
        10280,
        10403
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1473": {
      "fn": "Gauge.deposit",
      "offset": [
        10280,
        10403
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1474": {
      "fn": "Gauge.deposit",
      "offset": [
        10280,
        10403
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11EC"
    },
    "1477": {
      "fn": "Gauge.deposit",
      "jump": "i",
      "offset": [
        10280,
        10403
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1478": {
      "offset": [
        1211,
        1257
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1479": {
      "fn": "Gauge.deposit",
      "offset": [
        1211,
        1257
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x323"
    },
    "1482": {
      "offset": [
        1250,
        1257
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0x278D00"
    },
    "1486": {
      "offset": [
        1211,
        1257
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1487": {
      "fn": "Gauge.deposit",
      "offset": [
        1211,
        1257
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1488": {
      "offset": [
        662,
        691
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1489": {
      "fn": "Gauge.deposit",
      "offset": [
        662,
        691
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x323"
    },
    "1492": {
      "fn": "Gauge.deposit",
      "offset": [
        662,
        691
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x5"
    },
    "1494": {
      "fn": "Gauge.deposit",
      "offset": [
        662,
        691
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1495": {
      "fn": "Gauge.deposit",
      "offset": [
        662,
        691
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1496": {
      "fn": "Gauge.deposit",
      "offset": [
        662,
        691
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1497": {
      "fn": "Gauge.initialize",
      "offset": [
        2684,
        3605
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1498": {
      "fn": "Gauge.initialize",
      "offset": [
        2684,
        3605
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x361"
    },
    "1501": {
      "fn": "Gauge.initialize",
      "offset": [
        2684,
        3605
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5E7"
    },
    "1504": {
      "fn": "Gauge.initialize",
      "offset": [
        2684,
        3605
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1505": {
      "fn": "Gauge.initialize",
      "offset": [
        2684,
        3605
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1507": {
      "fn": "Gauge.initialize",
      "offset": [
        2684,
        3605
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x262D"
    },
    "1510": {
      "fn": "Gauge.initialize",
      "jump": "i",
      "offset": [
        2684,
        3605
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1511": {
      "fn": "Gauge.initialize",
      "offset": [
        2684,
        3605
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1512": {
      "fn": "Gauge.initialize",
      "offset": [
        2684,
        3605
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1200"
    },
    "1515": {
      "fn": "Gauge.initialize",
      "jump": "i",
      "offset": [
        2684,
        3605
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1516": {
      "fn": "BaseGauge.rewardPerToken",
      "offset": [
        3155,
        3254
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1517": {
      "fn": "BaseGauge.rewardPerToken",
      "offset": [
        3155,
        3254
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x323"
    },
    "1520": {
      "fn": "BaseGauge.rewardPerToken",
      "offset": [
        3155,
        3254
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1473"
    },
    "1523": {
      "fn": "BaseGauge.rewardPerToken",
      "jump": "i",
      "offset": [
        3155,
        3254
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1524": {
      "fn": "Gauge.deposit",
      "offset": [
        10668,
        10935
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1525": {
      "fn": "Gauge.deposit",
      "offset": [
        10668,
        10935
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x349"
    },
    "1528": {
      "fn": "Gauge.deposit",
      "offset": [
        10668,
        10935
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x147D"
    },
    "1531": {
      "fn": "Gauge.deposit",
      "jump": "i",
      "offset": [
        10668,
        10935
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1532": {
      "fn": "Gauge.extraRewardsLength",
      "offset": [
        4202,
        4307
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1533": {
      "fn": "Gauge.extraRewardsLength",
      "offset": [
        4281,
        4293
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 3,
      "value": "0x13"
    },
    "1535": {
      "fn": "Gauge.extraRewardsLength",
      "offset": [
        4281,
        4300
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1536": {
      "fn": "Gauge.extraRewardsLength",
      "offset": [
        4202,
        4307
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x323"
    },
    "1539": {
      "fn": "Gauge.extraRewardsLength",
      "offset": [
        4202,
        4307
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1540": {
      "fn": "Gauge.lockingRatio",
      "offset": [
        7195,
        7312
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1541": {
      "fn": "Gauge.lockingRatio",
      "offset": [
        7195,
        7312
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x323"
    },
    "1544": {
      "fn": "Gauge.lockingRatio",
      "offset": [
        7195,
        7312
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x612"
    },
    "1547": {
      "fn": "Gauge.lockingRatio",
      "offset": [
        7195,
        7312
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1548": {
      "fn": "Gauge.lockingRatio",
      "offset": [
        7195,
        7312
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1550": {
      "fn": "Gauge.lockingRatio",
      "offset": [
        7195,
        7312
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2529"
    },
    "1553": {
      "fn": "Gauge.lockingRatio",
      "jump": "i",
      "offset": [
        7195,
        7312
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1554": {
      "fn": "Gauge.lockingRatio",
      "offset": [
        7195,
        7312
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1555": {
      "fn": "Gauge.lockingRatio",
      "offset": [
        7195,
        7312
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1573"
    },
    "1558": {
      "fn": "Gauge.lockingRatio",
      "jump": "i",
      "offset": [
        7195,
        7312
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1559": {
      "offset": [
        697,
        732
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1560": {
      "fn": "Gauge.lockingRatio",
      "offset": [
        697,
        732
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x323"
    },
    "1563": {
      "fn": "Gauge.lockingRatio",
      "offset": [
        697,
        732
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x6"
    },
    "1565": {
      "fn": "Gauge.lockingRatio",
      "offset": [
        697,
        732
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1566": {
      "fn": "Gauge.lockingRatio",
      "offset": [
        697,
        732
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1567": {
      "fn": "Gauge.lockingRatio",
      "offset": [
        697,
        732
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1568": {
      "offset": [
        598,
        625
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1569": {
      "fn": "Gauge.lockingRatio",
      "offset": [
        598,
        625
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x323"
    },
    "1572": {
      "fn": "Gauge.lockingRatio",
      "offset": [
        598,
        625
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "1574": {
      "fn": "Gauge.lockingRatio",
      "offset": [
        598,
        625
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1575": {
      "fn": "Gauge.lockingRatio",
      "offset": [
        598,
        625
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1576": {
      "fn": "Gauge.lockingRatio",
      "offset": [
        598,
        625
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1577": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1578": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x361"
    },
    "1581": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x637"
    },
    "1584": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1585": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1587": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2529"
    },
    "1590": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1591": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1592": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x157E"
    },
    "1595": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1596": {
      "fn": "Gauge.getRewardFor",
      "offset": [
        15310,
        15523
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1597": {
      "fn": "Gauge.getRewardFor",
      "offset": [
        15310,
        15523
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x349"
    },
    "1600": {
      "fn": "Gauge.getRewardFor",
      "offset": [
        15310,
        15523
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x64A"
    },
    "1603": {
      "fn": "Gauge.getRewardFor",
      "offset": [
        15310,
        15523
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1604": {
      "fn": "Gauge.getRewardFor",
      "offset": [
        15310,
        15523
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1606": {
      "fn": "Gauge.getRewardFor",
      "offset": [
        15310,
        15523
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26A1"
    },
    "1609": {
      "fn": "Gauge.getRewardFor",
      "jump": "i",
      "offset": [
        15310,
        15523
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1610": {
      "fn": "Gauge.getRewardFor",
      "offset": [
        15310,
        15523
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1611": {
      "fn": "Gauge.getRewardFor",
      "offset": [
        15310,
        15523
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1619"
    },
    "1614": {
      "fn": "Gauge.getRewardFor",
      "jump": "i",
      "offset": [
        15310,
        15523
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1615": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2325,
        2757
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1616": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2325,
        2757
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x361"
    },
    "1619": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2325,
        2757
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x65D"
    },
    "1622": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2325,
        2757
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1623": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2325,
        2757
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1625": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2325,
        2757
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x256E"
    },
    "1628": {
      "fn": "BaseGauge.setDuration",
      "jump": "i",
      "offset": [
        2325,
        2757
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1629": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2325,
        2757
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1630": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2325,
        2757
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1631"
    },
    "1633": {
      "fn": "BaseGauge.setDuration",
      "jump": "i",
      "offset": [
        2325,
        2757
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1634": {
      "offset": [
        461,
        495
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1635": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        461,
        495
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1637": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        461,
        495
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1638": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        461,
        495
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x396"
    },
    "1641": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        461,
        495
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1648": {
      "op": "SHL"
    },
    "1649": {
      "op": "SUB"
    },
    "1650": {
      "offset": [
        461,
        495
      ],
      "op": "AND",
      "path": "9"
    },
    "1651": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        461,
        495
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1652": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        461,
        495
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1653": {
      "fn": "Gauge.earned",
      "offset": [
        8379,
        8698
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1654": {
      "fn": "Gauge.earned",
      "offset": [
        8499,
        8506
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1656": {
      "fn": "Gauge.earned",
      "offset": [
        8522,
        8540
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1657": {
      "fn": "Gauge.earned",
      "offset": [
        8543,
        8563
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x681"
    },
    "1660": {
      "fn": "Gauge.earned",
      "offset": [
        8555,
        8562
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1661": {
      "fn": "Gauge.earned",
      "offset": [
        8543,
        8554
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x16EB"
    },
    "1664": {
      "fn": "Gauge.earned",
      "jump": "i",
      "offset": [
        8543,
        8563
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1665": {
      "fn": "Gauge.earned",
      "offset": [
        8543,
        8563
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1670": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1672": {
      "op": "SHL"
    },
    "1673": {
      "op": "SUB"
    },
    "1674": {
      "fn": "Gauge.earned",
      "offset": [
        8675,
        8691
      ],
      "op": "DUP5",
      "path": "10",
      "statement": 4
    },
    "1675": {
      "fn": "Gauge.earned",
      "offset": [
        8675,
        8691
      ],
      "op": "AND",
      "path": "10"
    },
    "1676": {
      "fn": "Gauge.earned",
      "offset": [
        8675,
        8691
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1678": {
      "fn": "Gauge.earned",
      "offset": [
        8675,
        8691
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1679": {
      "fn": "Gauge.earned",
      "offset": [
        8675,
        8691
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1680": {
      "fn": "Gauge.earned",
      "offset": [
        8675,
        8691
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1681": {
      "fn": "Gauge.earned",
      "offset": [
        8675,
        8682
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xB"
    },
    "1683": {
      "fn": "Gauge.earned",
      "offset": [
        8675,
        8691
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1685": {
      "fn": "Gauge.earned",
      "offset": [
        8675,
        8691
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1686": {
      "fn": "Gauge.earned",
      "offset": [
        8675,
        8691
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1688": {
      "fn": "Gauge.earned",
      "offset": [
        8675,
        8691
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1689": {
      "fn": "Gauge.earned",
      "offset": [
        8675,
        8691
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1690": {
      "fn": "Gauge.earned",
      "offset": [
        8675,
        8691
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1691": {
      "fn": "Gauge.earned",
      "offset": [
        8522,
        8563
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1692": {
      "fn": "Gauge.earned",
      "offset": [
        8522,
        8563
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1693": {
      "op": "POP"
    },
    "1694": {
      "offset": [
        1131,
        1136
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0xF4240"
    },
    "1698": {
      "fn": "Gauge.earned",
      "offset": [
        8522,
        8563
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1699": {
      "fn": "Gauge.earned",
      "offset": [
        8594,
        8616
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6AB"
    },
    "1702": {
      "fn": "Gauge.earned",
      "offset": [
        8683,
        8690
      ],
      "op": "DUP7",
      "path": "10"
    },
    "1703": {
      "fn": "Gauge.earned",
      "offset": [
        8594,
        8607
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x173D"
    },
    "1706": {
      "fn": "Gauge.earned",
      "jump": "i",
      "offset": [
        8594,
        8616
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1707": {
      "fn": "Gauge.earned",
      "offset": [
        8594,
        8616
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1708": {
      "fn": "Gauge.earned",
      "offset": [
        8594,
        8629
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6B5"
    },
    "1711": {
      "fn": "Gauge.earned",
      "offset": [
        8594,
        8629
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1712": {
      "fn": "Gauge.earned",
      "offset": [
        8594,
        8629
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1713": {
      "fn": "Gauge.earned",
      "offset": [
        8594,
        8629
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26D3"
    },
    "1716": {
      "fn": "Gauge.earned",
      "jump": "i",
      "offset": [
        8594,
        8629
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1717": {
      "fn": "Gauge.earned",
      "offset": [
        8594,
        8629
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1718": {
      "fn": "Gauge.earned",
      "offset": [
        8593,
        8660
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6BF"
    },
    "1721": {
      "fn": "Gauge.earned",
      "offset": [
        8593,
        8660
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1722": {
      "fn": "Gauge.earned",
      "offset": [
        8593,
        8660
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1723": {
      "fn": "Gauge.earned",
      "offset": [
        8593,
        8660
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26F2"
    },
    "1726": {
      "fn": "Gauge.earned",
      "jump": "i",
      "offset": [
        8593,
        8660
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1727": {
      "fn": "Gauge.earned",
      "offset": [
        8593,
        8660
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1728": {
      "fn": "Gauge.earned",
      "offset": [
        8593,
        8691
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6C9"
    },
    "1731": {
      "fn": "Gauge.earned",
      "offset": [
        8593,
        8691
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1732": {
      "fn": "Gauge.earned",
      "offset": [
        8593,
        8691
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1733": {
      "fn": "Gauge.earned",
      "offset": [
        8593,
        8691
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2714"
    },
    "1736": {
      "fn": "Gauge.earned",
      "jump": "i",
      "offset": [
        8593,
        8691
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1737": {
      "fn": "Gauge.earned",
      "offset": [
        8593,
        8691
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1738": {
      "fn": "Gauge.earned",
      "offset": [
        8574,
        8691
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "1739": {
      "fn": "Gauge.earned",
      "offset": [
        8379,
        8698
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1740": {
      "op": "POP"
    },
    "1741": {
      "op": "POP"
    },
    "1742": {
      "op": "POP"
    },
    "1743": {
      "fn": "Gauge.earned",
      "jump": "o",
      "offset": [
        8379,
        8698
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1744": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3438,
        3764
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1745": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3497,
        3501
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1747": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1748": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1753": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1755": {
      "op": "SHL"
    },
    "1756": {
      "op": "SUB"
    },
    "1757": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1758": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "7",
      "statement": 5
    },
    "1759": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1760": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x704"
    },
    "1763": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1764": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1766": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1767": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1771": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1773": {
      "op": "SHL"
    },
    "1774": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1775": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1776": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1778": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1779": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6FB"
    },
    "1782": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1783": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x272C"
    },
    "1786": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1787": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1788": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1790": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1791": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1792": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1793": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SUB",
      "path": "0"
    },
    "1794": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1795": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "1796": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1797": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3521,
        3548
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 6,
      "value": "0x70D"
    },
    "1800": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3541,
        3547
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1801": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3521,
        3540
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x189C"
    },
    "1804": {
      "fn": "BaseGauge.sweep",
      "jump": "i",
      "offset": [
        3521,
        3548
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1805": {
      "branch": 170,
      "fn": "BaseGauge.sweep",
      "offset": [
        3521,
        3548
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1806": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3513,
        3568
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x74B"
    },
    "1809": {
      "branch": 170,
      "fn": "BaseGauge.sweep",
      "offset": [
        3513,
        3568
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1810": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3513,
        3568
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1812": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3513,
        3568
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1813": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1817": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1819": {
      "op": "SHL"
    },
    "1820": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3513,
        3568
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1821": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3513,
        3568
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1824": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3513,
        3568
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1826": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3513,
        3568
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1827": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3513,
        3568
      ],
      "op": "ADD",
      "path": "9"
    },
    "1828": {
      "op": "MSTORE"
    },
    "1829": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "1831": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1833": {
      "op": "DUP3"
    },
    "1834": {
      "op": "ADD"
    },
    "1835": {
      "op": "MSTORE"
    },
    "1836": {
      "op": "PUSH15",
      "value": "0x383937BA32B1BA32B2103A37B5B2B7"
    },
    "1852": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "1854": {
      "op": "SHL"
    },
    "1855": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1857": {
      "op": "DUP3"
    },
    "1858": {
      "op": "ADD"
    },
    "1859": {
      "op": "MSTORE"
    },
    "1860": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1862": {
      "op": "ADD"
    },
    "1863": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3513,
        3568
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x6FB"
    },
    "1866": {
      "op": "JUMP"
    },
    "1867": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3513,
        3568
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1868": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1870": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1871": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1876": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1878": {
      "op": "SHL"
    },
    "1879": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1880": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1881": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3628,
        3632
      ],
      "op": "ADDRESS",
      "path": "9"
    },
    "1882": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1884": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1885": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "ADD",
      "path": "9"
    },
    "1886": {
      "op": "MSTORE"
    },
    "1887": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3578,
        3592
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1889": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3578,
        3592
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1894": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1896": {
      "op": "SHL"
    },
    "1897": {
      "op": "SUB"
    },
    "1898": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3619
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1899": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3619
      ],
      "op": "AND",
      "path": "9"
    },
    "1900": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3619
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1901": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3619
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x70A08231"
    },
    "1906": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3619
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1907": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1909": {
      "op": "ADD"
    },
    "1910": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1912": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1914": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1915": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1916": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1917": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "SUB",
      "path": "9"
    },
    "1918": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1919": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "DUP7",
      "path": "9"
    },
    "1920": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "GAS",
      "path": "9"
    },
    "1921": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "STATICCALL",
      "path": "9"
    },
    "1922": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1923": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1924": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1925": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x792"
    },
    "1928": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1929": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "1930": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1932": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1933": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "RETURNDATACOPY",
      "path": "9"
    },
    "1934": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "1935": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1937": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "REVERT",
      "path": "9"
    },
    "1938": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1939": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "POP",
      "path": "9"
    },
    "1940": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "POP",
      "path": "9"
    },
    "1941": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "POP",
      "path": "9"
    },
    "1942": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "POP",
      "path": "9"
    },
    "1943": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1945": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1946": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "1947": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "1949": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "NOT",
      "path": "9"
    },
    "1950": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "1952": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1953": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "ADD",
      "path": "9"
    },
    "1954": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "AND",
      "path": "9"
    },
    "1955": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1956": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "ADD",
      "path": "9"
    },
    "1957": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1958": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1960": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1961": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "POP",
      "path": "9"
    },
    "1962": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1963": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "ADD",
      "path": "9"
    },
    "1964": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1965": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x7B6"
    },
    "1968": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1969": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1970": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2761"
    },
    "1973": {
      "fn": "BaseGauge.sweep",
      "jump": "i",
      "offset": [
        3595,
        3634
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1974": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3595,
        3634
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1975": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3578,
        3634
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1976": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3578,
        3634
      ],
      "op": "POP",
      "path": "9"
    },
    "1977": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3645,
        3700
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 7,
      "value": "0x7D4"
    },
    "1980": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3675,
        3681
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1981": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3684,
        3691
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x7CE"
    },
    "1984": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1986": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1991": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1993": {
      "op": "SHL"
    },
    "1994": {
      "op": "SUB"
    },
    "1995": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1996": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1997": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1998": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3684,
        3691
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1999": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3693,
        3699
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2000": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3645,
        3667
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x18CE"
    },
    "2003": {
      "fn": "BaseGauge.sweep",
      "jump": "i",
      "offset": [
        3645,
        3700
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2004": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3645,
        3700
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2005": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3715,
        3736
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 8,
      "value": "0x40"
    },
    "2007": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3715,
        3736
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2008": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3715,
        3736
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2013": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2015": {
      "op": "SHL"
    },
    "2016": {
      "op": "SUB"
    },
    "2017": {
      "op": "DUP6"
    },
    "2018": {
      "op": "AND"
    },
    "2019": {
      "op": "DUP2"
    },
    "2020": {
      "op": "MSTORE"
    },
    "2021": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2023": {
      "op": "DUP2"
    },
    "2024": {
      "op": "ADD"
    },
    "2025": {
      "op": "DUP4"
    },
    "2026": {
      "op": "SWAP1"
    },
    "2027": {
      "op": "MSTORE"
    },
    "2028": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3715,
        3736
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0xAB2246061D7B0DD3631D037E3F6DA75782AE489EEB9F6AF878A4B25DF9B07C77"
    },
    "2061": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3715,
        3736
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2062": {
      "op": "ADD"
    },
    "2063": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3715,
        3736
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2065": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3715,
        3736
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2066": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3715,
        3736
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2067": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3715,
        3736
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2068": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3715,
        3736
      ],
      "op": "SUB",
      "path": "9"
    },
    "2069": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3715,
        3736
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2070": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3715,
        3736
      ],
      "op": "LOG1",
      "path": "9"
    },
    "2071": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3753,
        3757
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 9,
      "value": "0x1"
    },
    "2073": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3746,
        3757
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2074": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3746,
        3757
      ],
      "op": "POP",
      "path": "9"
    },
    "2075": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3746,
        3757
      ],
      "op": "POP",
      "path": "9"
    },
    "2076": {
      "offset": [
        1318,
        1319
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2077": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3438,
        3764
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2078": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3438,
        3764
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2079": {
      "fn": "BaseGauge.sweep",
      "offset": [
        3438,
        3764
      ],
      "op": "POP",
      "path": "9"
    },
    "2080": {
      "fn": "BaseGauge.sweep",
      "jump": "o",
      "offset": [
        3438,
        3764
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2081": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5716,
        5899
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2082": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5786,
        5799
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 10,
      "value": "0xF"
    },
    "2084": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5786,
        5799
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2091": {
      "op": "SHL"
    },
    "2092": {
      "op": "SUB"
    },
    "2093": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5786,
        5799
      ],
      "op": "AND",
      "path": "10"
    },
    "2094": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5772,
        5782
      ],
      "op": "CALLER",
      "path": "10"
    },
    "2095": {
      "branch": 145,
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5772,
        5799
      ],
      "op": "EQ",
      "path": "10"
    },
    "2096": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5764,
        5815
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x84B"
    },
    "2099": {
      "branch": 145,
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5764,
        5815
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2100": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5764,
        5815
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2102": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5764,
        5815
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2103": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2107": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2109": {
      "op": "SHL"
    },
    "2110": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5764,
        5815
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2111": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5764,
        5815
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2112": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5764,
        5815
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2114": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5764,
        5815
      ],
      "op": "ADD",
      "path": "10"
    },
    "2115": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5764,
        5815
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6FB"
    },
    "2118": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5764,
        5815
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2119": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5764,
        5815
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x277A"
    },
    "2122": {
      "fn": "Gauge.clearExtraRewards",
      "jump": "i",
      "offset": [
        5764,
        5815
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2123": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5764,
        5815
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2124": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5830,
        5863
      ],
      "op": "PUSH32",
      "path": "10",
      "statement": 11,
      "value": "0x90503A14A60F24042CA91FABB5544C78B3845CF06963FB78ADAC5538B9138111"
    },
    "2157": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5850,
        5862
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x13"
    },
    "2159": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5830,
        5863
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2161": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5830,
        5863
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2162": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5830,
        5863
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x87B"
    },
    "2165": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5830,
        5863
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2166": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5830,
        5863
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2167": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5830,
        5863
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x279F"
    },
    "2170": {
      "fn": "Gauge.clearExtraRewards",
      "jump": "i",
      "offset": [
        5830,
        5863
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2171": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5830,
        5863
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2172": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5830,
        5863
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2174": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5830,
        5863
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2175": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5830,
        5863
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2176": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5830,
        5863
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2177": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5830,
        5863
      ],
      "op": "SUB",
      "path": "10"
    },
    "2178": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5830,
        5863
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2179": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5830,
        5863
      ],
      "op": "LOG1",
      "path": "10"
    },
    "2180": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5873,
        5892
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 12,
      "value": "0x88F"
    },
    "2183": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5880,
        5892
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x13"
    },
    "2185": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5880,
        5892
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2187": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5873,
        5892
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x24E4"
    },
    "2190": {
      "fn": "Gauge.clearExtraRewards",
      "jump": "i",
      "offset": [
        5873,
        5892
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2191": {
      "fn": "Gauge.clearExtraRewards",
      "offset": [
        5873,
        5892
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2192": {
      "fn": "Gauge.clearExtraRewards",
      "jump": "o",
      "offset": [
        5716,
        5899
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2193": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        16968,
        17358
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2194": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17087,
        17100
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 13,
      "value": "0xF"
    },
    "2196": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17087,
        17100
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2197": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17036,
        17040
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2199": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17036,
        17040
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2204": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2206": {
      "op": "SHL"
    },
    "2207": {
      "op": "SUB"
    },
    "2208": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17087,
        17100
      ],
      "op": "AND",
      "path": "10"
    },
    "2209": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17073,
        17083
      ],
      "op": "CALLER",
      "path": "10"
    },
    "2210": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17073,
        17100
      ],
      "op": "EQ",
      "path": "10"
    },
    "2211": {
      "branch": 146,
      "fn": "Gauge.setRewardManager",
      "offset": [
        17073,
        17100
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2212": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17073,
        17125
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8B7"
    },
    "2215": {
      "branch": 146,
      "fn": "Gauge.setRewardManager",
      "offset": [
        17073,
        17125
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2216": {
      "op": "POP"
    },
    "2217": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2219": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2224": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2226": {
      "op": "SHL"
    },
    "2227": {
      "op": "SUB"
    },
    "2228": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2229": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17104,
        17114
      ],
      "op": "CALLER",
      "path": "10"
    },
    "2230": {
      "branch": 147,
      "fn": "Gauge.setRewardManager",
      "offset": [
        17104,
        17125
      ],
      "op": "EQ",
      "path": "10"
    },
    "2231": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17073,
        17125
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2232": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17052,
        17162
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8D3"
    },
    "2235": {
      "branch": 147,
      "fn": "Gauge.setRewardManager",
      "offset": [
        17052,
        17162
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2236": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17052,
        17162
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2238": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17052,
        17162
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2239": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2243": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2245": {
      "op": "SHL"
    },
    "2246": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17052,
        17162
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2247": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17052,
        17162
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2248": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17052,
        17162
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2250": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17052,
        17162
      ],
      "op": "ADD",
      "path": "10"
    },
    "2251": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17052,
        17162
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6FB"
    },
    "2254": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17052,
        17162
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2255": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17052,
        17162
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x277A"
    },
    "2258": {
      "fn": "Gauge.setRewardManager",
      "jump": "i",
      "offset": [
        17052,
        17162
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2259": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17052,
        17162
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2264": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2266": {
      "op": "SHL"
    },
    "2267": {
      "op": "SUB"
    },
    "2268": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17181,
        17209
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 14
    },
    "2269": {
      "branch": 148,
      "fn": "Gauge.setRewardManager",
      "offset": [
        17181,
        17209
      ],
      "op": "AND",
      "path": "10"
    },
    "2270": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17173,
        17240
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x929"
    },
    "2273": {
      "branch": 148,
      "fn": "Gauge.setRewardManager",
      "offset": [
        17173,
        17240
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2274": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17173,
        17240
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2276": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17173,
        17240
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2277": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2281": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2283": {
      "op": "SHL"
    },
    "2284": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17173,
        17240
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2285": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17173,
        17240
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2286": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2288": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17173,
        17240
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2290": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17173,
        17240
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2291": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17173,
        17240
      ],
      "op": "ADD",
      "path": "10"
    },
    "2292": {
      "op": "MSTORE"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "2295": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2297": {
      "op": "DUP3"
    },
    "2298": {
      "op": "ADD"
    },
    "2299": {
      "op": "MSTORE"
    },
    "2300": {
      "op": "PUSH32",
      "value": "0x5F7265776172644D616E61676572203078302061646472657373000000000000"
    },
    "2333": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2335": {
      "op": "DUP3"
    },
    "2336": {
      "op": "ADD"
    },
    "2337": {
      "op": "MSTORE"
    },
    "2338": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2340": {
      "op": "ADD"
    },
    "2341": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17173,
        17240
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6FB"
    },
    "2344": {
      "op": "JUMP"
    },
    "2345": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17173,
        17240
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2346": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17250,
        17263
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 15,
      "value": "0xF"
    },
    "2348": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17250,
        17280
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2349": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17250,
        17280
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2354": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2356": {
      "op": "SHL"
    },
    "2357": {
      "op": "SUB"
    },
    "2358": {
      "op": "NOT"
    },
    "2359": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17250,
        17280
      ],
      "op": "AND",
      "path": "10"
    },
    "2360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2364": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2366": {
      "op": "SHL"
    },
    "2367": {
      "op": "SUB"
    },
    "2368": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17250,
        17280
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2369": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17250,
        17280
      ],
      "op": "AND",
      "path": "10"
    },
    "2370": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17250,
        17280
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2371": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17250,
        17280
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2372": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17250,
        17280
      ],
      "op": "OR",
      "path": "10"
    },
    "2373": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17250,
        17280
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2374": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17250,
        17280
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2375": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17250,
        17280
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2376": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17295,
        17330
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 16,
      "value": "0x40"
    },
    "2378": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17295,
        17330
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2379": {
      "op": "SWAP1"
    },
    "2380": {
      "op": "DUP2"
    },
    "2381": {
      "op": "MSTORE"
    },
    "2382": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17295,
        17330
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x79ECF8371E520AE99BD7BA1F0E87DCC921A946D9CA58230EEF986803E0AC9C45"
    },
    "2415": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17295,
        17330
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2416": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2418": {
      "op": "ADD"
    },
    "2419": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17295,
        17330
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2421": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17295,
        17330
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2422": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17295,
        17330
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2423": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17295,
        17330
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2424": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17295,
        17330
      ],
      "op": "SUB",
      "path": "10"
    },
    "2425": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17295,
        17330
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2426": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17295,
        17330
      ],
      "op": "LOG1",
      "path": "10"
    },
    "2427": {
      "op": "POP"
    },
    "2428": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17347,
        17351
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 17,
      "value": "0x1"
    },
    "2430": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        17347,
        17351
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2431": {
      "fn": "Gauge.setRewardManager",
      "offset": [
        16968,
        17358
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2432": {
      "op": "POP"
    },
    "2433": {
      "fn": "Gauge.setRewardManager",
      "jump": "o",
      "offset": [
        16968,
        17358
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2434": {
      "fn": "Gauge.boostedBalanceOf",
      "offset": [
        9372,
        9495
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2435": {
      "fn": "Gauge.boostedBalanceOf",
      "offset": [
        9436,
        9443
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2437": {
      "fn": "Gauge.boostedBalanceOf",
      "offset": [
        9462,
        9488
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 18,
      "value": "0x98D"
    },
    "2440": {
      "fn": "Gauge.boostedBalanceOf",
      "offset": [
        9480,
        9487
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2441": {
      "fn": "Gauge.boostedBalanceOf",
      "offset": [
        9462,
        9479
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1936"
    },
    "2444": {
      "fn": "Gauge.boostedBalanceOf",
      "jump": "i",
      "offset": [
        9462,
        9488
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2445": {
      "fn": "Gauge.boostedBalanceOf",
      "offset": [
        9462,
        9488
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2446": {
      "fn": "Gauge.boostedBalanceOf",
      "offset": [
        9455,
        9488
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2447": {
      "fn": "Gauge.boostedBalanceOf",
      "offset": [
        9372,
        9495
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2448": {
      "op": "POP"
    },
    "2449": {
      "op": "POP"
    },
    "2450": {
      "fn": "Gauge.boostedBalanceOf",
      "jump": "o",
      "offset": [
        9372,
        9495
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2451": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16491,
        16785
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2452": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16579,
        16592
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x10"
    },
    "2454": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16579,
        16592
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2455": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16579,
        16592
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2456": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16542,
        16546
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2458": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16602,
        16619
      ],
      "op": "SWAP2",
      "path": "10",
      "statement": 19
    },
    "2459": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16602,
        16619
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2460": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16602,
        16619
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2461": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16602,
        16619
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2464": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16637,
        16648
      ],
      "op": "SLOAD",
      "path": "10",
      "statement": 20
    },
    "2465": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16658,
        16673
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE"
    },
    "2467": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16658,
        16673
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2468": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2470": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2471": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "2476": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2478": {
      "op": "SHL"
    },
    "2479": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2480": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2485": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2487": {
      "op": "SHL"
    },
    "2488": {
      "op": "SUB"
    },
    "2489": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16658,
        16673
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2490": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16658,
        16673
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2491": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16658,
        16673
      ],
      "op": "AND",
      "path": "10"
    },
    "2492": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2494": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2495": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "ADD",
      "path": "10"
    },
    "2496": {
      "op": "MSTORE"
    },
    "2497": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2499": {
      "op": "DUP2"
    },
    "2500": {
      "op": "ADD"
    },
    "2501": {
      "op": "DUP5"
    },
    "2502": {
      "op": "SWAP1"
    },
    "2503": {
      "op": "MSTORE"
    },
    "2504": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16637,
        16648
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2505": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16637,
        16648
      ],
      "op": "AND",
      "path": "10"
    },
    "2506": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16637,
        16648
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2507": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16657
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x95EA7B3"
    },
    "2512": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16657
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2513": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2515": {
      "op": "ADD"
    },
    "2516": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2518": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2520": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2521": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2522": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2523": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "SUB",
      "path": "10"
    },
    "2524": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2525": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2527": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "DUP8",
      "path": "10"
    },
    "2528": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "GAS",
      "path": "10"
    },
    "2529": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "CALL",
      "path": "10"
    },
    "2530": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2531": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2532": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2533": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x9F2"
    },
    "2536": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2537": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "2538": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2540": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2541": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "2542": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "2543": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2545": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2546": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2547": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "POP",
      "path": "10"
    },
    "2548": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "POP",
      "path": "10"
    },
    "2549": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "POP",
      "path": "10"
    },
    "2550": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "POP",
      "path": "10"
    },
    "2551": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2553": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2554": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "2555": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "2557": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "NOT",
      "path": "10"
    },
    "2558": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "2560": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2561": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "ADD",
      "path": "10"
    },
    "2562": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "AND",
      "path": "10"
    },
    "2563": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2564": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "ADD",
      "path": "10"
    },
    "2565": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2566": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2568": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2569": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "POP",
      "path": "10"
    },
    "2570": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2571": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "ADD",
      "path": "10"
    },
    "2572": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2573": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA16"
    },
    "2576": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2577": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2578": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x27EF"
    },
    "2581": {
      "fn": "Gauge.transferQueuedPenalty",
      "jump": "i",
      "offset": [
        16630,
        16686
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2582": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16630,
        16686
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2583": {
      "op": "POP"
    },
    "2584": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16713,
        16728
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 21,
      "value": "0xE"
    },
    "2586": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16713,
        16728
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2587": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2589": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2590": {
      "op": "PUSH4",
      "value": "0x590A41F5"
    },
    "2595": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2597": {
      "op": "SHL"
    },
    "2598": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2599": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2600": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2602": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2603": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "ADD",
      "path": "10"
    },
    "2604": {
      "op": "DUP4"
    },
    "2605": {
      "op": "SWAP1"
    },
    "2606": {
      "op": "MSTORE"
    },
    "2607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2611": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2613": {
      "op": "SHL"
    },
    "2614": {
      "op": "SUB"
    },
    "2615": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16713,
        16728
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2616": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16713,
        16728
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2617": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16713,
        16728
      ],
      "op": "AND",
      "path": "10"
    },
    "2618": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16713,
        16728
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2619": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16745
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x590A41F5"
    },
    "2624": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16745
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2625": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2627": {
      "op": "ADD"
    },
    "2628": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2630": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2632": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2633": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2634": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2635": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "SUB",
      "path": "10"
    },
    "2636": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2637": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2639": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "DUP8",
      "path": "10"
    },
    "2640": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "GAS",
      "path": "10"
    },
    "2641": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "CALL",
      "path": "10"
    },
    "2642": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2643": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2644": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2645": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA62"
    },
    "2648": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2649": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "2650": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2652": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2653": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "2654": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "2655": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2657": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2658": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2659": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "POP",
      "path": "10"
    },
    "2660": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "POP",
      "path": "10"
    },
    "2661": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "POP",
      "path": "10"
    },
    "2662": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "POP",
      "path": "10"
    },
    "2663": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2665": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2666": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "2667": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "2669": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "NOT",
      "path": "10"
    },
    "2670": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "2672": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2673": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "ADD",
      "path": "10"
    },
    "2674": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "AND",
      "path": "10"
    },
    "2675": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2676": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "ADD",
      "path": "10"
    },
    "2677": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2678": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2680": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2681": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "POP",
      "path": "10"
    },
    "2682": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2683": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "ADD",
      "path": "10"
    },
    "2684": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2685": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA86"
    },
    "2688": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2689": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2690": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x27EF"
    },
    "2693": {
      "fn": "Gauge.transferQueuedPenalty",
      "jump": "i",
      "offset": [
        16696,
        16757
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2694": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2695": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16696,
        16757
      ],
      "op": "POP",
      "path": "10"
    },
    "2696": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16774,
        16778
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 22,
      "value": "0x1"
    },
    "2698": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16767,
        16778
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2699": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16767,
        16778
      ],
      "op": "POP",
      "path": "10"
    },
    "2700": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16767,
        16778
      ],
      "op": "POP",
      "path": "10"
    },
    "2701": {
      "fn": "Gauge.transferQueuedPenalty",
      "offset": [
        16491,
        16785
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2702": {
      "fn": "Gauge.transferQueuedPenalty",
      "jump": "o",
      "offset": [
        16491,
        16785
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2703": {
      "fn": "Gauge.depositFor",
      "offset": [
        11222,
        11358
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2704": {
      "fn": "Gauge.depositFor",
      "offset": [
        11291,
        11295
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2706": {
      "fn": "Gauge.depositFor",
      "offset": [
        11307,
        11330
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 23,
      "value": "0xA9B"
    },
    "2709": {
      "fn": "Gauge.depositFor",
      "offset": [
        11316,
        11320
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2710": {
      "fn": "Gauge.depositFor",
      "offset": [
        11322,
        11329
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2711": {
      "fn": "Gauge.depositFor",
      "offset": [
        11307,
        11315
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1AC3"
    },
    "2714": {
      "fn": "Gauge.depositFor",
      "jump": "i",
      "offset": [
        11307,
        11330
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2715": {
      "fn": "Gauge.depositFor",
      "offset": [
        11307,
        11330
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2716": {
      "op": "POP"
    },
    "2717": {
      "fn": "Gauge.depositFor",
      "offset": [
        11347,
        11351
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 24,
      "value": "0x1"
    },
    "2719": {
      "fn": "Gauge.depositFor",
      "offset": [
        11222,
        11358
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2720": {
      "fn": "Gauge.depositFor",
      "offset": [
        11222,
        11358
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2721": {
      "fn": "Gauge.depositFor",
      "offset": [
        11222,
        11358
      ],
      "op": "POP",
      "path": "10"
    },
    "2722": {
      "fn": "Gauge.depositFor",
      "offset": [
        11222,
        11358
      ],
      "op": "POP",
      "path": "10"
    },
    "2723": {
      "fn": "Gauge.depositFor",
      "jump": "o",
      "offset": [
        11222,
        11358
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2724": {
      "fn": "Gauge.withdraw",
      "offset": [
        13962,
        14089
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2725": {
      "fn": "Gauge.withdraw",
      "offset": [
        14035,
        14045
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 25
    },
    "2726": {
      "fn": "Gauge.withdraw",
      "offset": [
        14000,
        14004
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2728": {
      "fn": "Gauge.withdraw",
      "offset": [
        14025,
        14046
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2729": {
      "fn": "Gauge.withdraw",
      "offset": [
        14025,
        14046
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2730": {
      "fn": "Gauge.withdraw",
      "offset": [
        14025,
        14046
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2731": {
      "fn": "Gauge.withdraw",
      "offset": [
        14025,
        14034
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x12"
    },
    "2733": {
      "fn": "Gauge.withdraw",
      "offset": [
        14025,
        14046
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2735": {
      "fn": "Gauge.withdraw",
      "offset": [
        14025,
        14046
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2736": {
      "fn": "Gauge.withdraw",
      "offset": [
        14025,
        14046
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2738": {
      "fn": "Gauge.withdraw",
      "offset": [
        14025,
        14046
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2739": {
      "fn": "Gauge.withdraw",
      "offset": [
        14025,
        14046
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2740": {
      "fn": "Gauge.withdraw",
      "offset": [
        14025,
        14046
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2741": {
      "fn": "Gauge.withdraw",
      "offset": [
        14016,
        14061
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xABF"
    },
    "2744": {
      "fn": "Gauge.withdraw",
      "offset": [
        14016,
        14061
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2745": {
      "fn": "Gauge.withdraw",
      "offset": [
        14000,
        14004
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2746": {
      "fn": "Gauge.withdraw",
      "offset": [
        14000,
        14004
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2747": {
      "fn": "Gauge.withdraw",
      "offset": [
        14016,
        14024
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE3B"
    },
    "2750": {
      "fn": "Gauge.withdraw",
      "jump": "i",
      "offset": [
        14016,
        14061
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2751": {
      "fn": "Gauge.withdraw",
      "offset": [
        14016,
        14061
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2752": {
      "fn": "Gauge.withdraw",
      "offset": [
        14016,
        14061
      ],
      "op": "POP",
      "path": "10"
    },
    "2753": {
      "fn": "Gauge.withdraw",
      "offset": [
        14078,
        14082
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 26,
      "value": "0x1"
    },
    "2755": {
      "fn": "Gauge.withdraw",
      "offset": [
        14071,
        14082
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2756": {
      "fn": "Gauge.withdraw",
      "offset": [
        14071,
        14082
      ],
      "op": "POP",
      "path": "10"
    },
    "2757": {
      "fn": "Gauge.withdraw",
      "offset": [
        13962,
        14089
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2758": {
      "fn": "Gauge.withdraw",
      "jump": "o",
      "offset": [
        13962,
        14089
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2759": {
      "fn": "Gauge.getReward",
      "offset": [
        14939,
        15082
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2760": {
      "fn": "Gauge.getReward",
      "offset": [
        15003,
        15007
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2762": {
      "fn": "Gauge.getReward",
      "offset": [
        14982,
        14992
      ],
      "op": "CALLER",
      "path": "10"
    },
    "2763": {
      "offset": [
        1972,
        1994
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xAD3"
    },
    "2766": {
      "offset": [
        1986,
        1993
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2767": {
      "offset": [
        1972,
        1985
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1C76"
    },
    "2770": {
      "jump": "i",
      "offset": [
        1972,
        1994
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2771": {
      "fn": "Gauge.getReward",
      "offset": [
        1972,
        1994
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2772": {
      "fn": "Gauge.getReward",
      "offset": [
        15019,
        15054
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 27,
      "value": "0xAE0"
    },
    "2775": {
      "fn": "Gauge.getReward",
      "offset": [
        15030,
        15040
      ],
      "op": "CALLER",
      "path": "10"
    },
    "2776": {
      "fn": "Gauge.getReward",
      "offset": [
        15042,
        15047
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2778": {
      "fn": "Gauge.getReward",
      "offset": [
        15049,
        15053
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "2780": {
      "fn": "Gauge.getReward",
      "offset": [
        15019,
        15029
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1DF3"
    },
    "2783": {
      "fn": "Gauge.getReward",
      "jump": "i",
      "offset": [
        15019,
        15054
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2784": {
      "fn": "Gauge.getReward",
      "offset": [
        15019,
        15054
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2785": {
      "fn": "Gauge.getReward",
      "offset": [
        15071,
        15075
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 28,
      "value": "0x1"
    },
    "2787": {
      "fn": "Gauge.getReward",
      "offset": [
        15064,
        15075
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2788": {
      "fn": "Gauge.getReward",
      "offset": [
        15064,
        15075
      ],
      "op": "POP",
      "path": "10"
    },
    "2789": {
      "offset": [
        2004,
        2005
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2790": {
      "fn": "Gauge.getReward",
      "offset": [
        14939,
        15082
      ],
      "op": "POP",
      "path": "10"
    },
    "2791": {
      "fn": "Gauge.getReward",
      "offset": [
        14939,
        15082
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2792": {
      "fn": "Gauge.getReward",
      "jump": "o",
      "offset": [
        14939,
        15082
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2793": {
      "offset": [
        1718,
        1747
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2794": {
      "fn": "Gauge.getReward",
      "offset": [
        1718,
        1747
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x13"
    },
    "2796": {
      "fn": "Gauge.getReward",
      "offset": [
        1718,
        1747
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2797": {
      "fn": "Gauge.getReward",
      "offset": [
        1718,
        1747
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2798": {
      "fn": "Gauge.getReward",
      "offset": [
        1718,
        1747
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2799": {
      "fn": "Gauge.getReward",
      "offset": [
        1718,
        1747
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2800": {
      "fn": "Gauge.getReward",
      "offset": [
        1718,
        1747
      ],
      "op": "LT",
      "path": "10"
    },
    "2801": {
      "fn": "Gauge.getReward",
      "offset": [
        1718,
        1747
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAF9"
    },
    "2804": {
      "fn": "Gauge.getReward",
      "offset": [
        1718,
        1747
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2805": {
      "fn": "Gauge.getReward",
      "offset": [
        1718,
        1747
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2807": {
      "fn": "Gauge.getReward",
      "offset": [
        1718,
        1747
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2808": {
      "fn": "Gauge.getReward",
      "offset": [
        1718,
        1747
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2809": {
      "fn": "Gauge.getReward",
      "offset": [
        1718,
        1747
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2810": {
      "fn": "Gauge.getReward",
      "offset": [
        1718,
        1747
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2812": {
      "fn": "Gauge.getReward",
      "offset": [
        1718,
        1747
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2813": {
      "fn": "Gauge.getReward",
      "offset": [
        1718,
        1747
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2814": {
      "fn": "Gauge.getReward",
      "offset": [
        1718,
        1747
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2815": {
      "fn": "Gauge.getReward",
      "offset": [
        1718,
        1747
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2817": {
      "fn": "Gauge.getReward",
      "offset": [
        1718,
        1747
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2818": {
      "fn": "Gauge.getReward",
      "offset": [
        1718,
        1747
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2819": {
      "fn": "Gauge.getReward",
      "offset": [
        1718,
        1747
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2820": {
      "fn": "Gauge.getReward",
      "offset": [
        1718,
        1747
      ],
      "op": "ADD",
      "path": "10"
    },
    "2821": {
      "fn": "Gauge.getReward",
      "offset": [
        1718,
        1747
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2826": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2828": {
      "op": "SHL"
    },
    "2829": {
      "op": "SUB"
    },
    "2830": {
      "offset": [
        1718,
        1747
      ],
      "op": "AND",
      "path": "10"
    },
    "2831": {
      "fn": "Gauge.getReward",
      "offset": [
        1718,
        1747
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2832": {
      "op": "POP"
    },
    "2833": {
      "offset": [
        1718,
        1747
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2834": {
      "fn": "Gauge.getReward",
      "jump": "o",
      "offset": [
        1718,
        1747
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2835": {
      "fn": "Gauge.getReward",
      "offset": [
        14267,
        14475
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2836": {
      "fn": "Gauge.getReward",
      "offset": [
        14384,
        14388
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2838": {
      "fn": "Gauge.getReward",
      "offset": [
        14355,
        14365
      ],
      "op": "CALLER",
      "path": "10"
    },
    "2839": {
      "offset": [
        1972,
        1994
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB1F"
    },
    "2842": {
      "offset": [
        1986,
        1993
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2843": {
      "offset": [
        1972,
        1985
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1C76"
    },
    "2846": {
      "jump": "i",
      "offset": [
        1972,
        1994
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2847": {
      "fn": "Gauge.getReward",
      "offset": [
        1972,
        1994
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2848": {
      "fn": "Gauge.getReward",
      "offset": [
        14404,
        14447
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 29,
      "value": "0xB2A"
    },
    "2851": {
      "fn": "Gauge.getReward",
      "offset": [
        14415,
        14425
      ],
      "op": "CALLER",
      "path": "10"
    },
    "2852": {
      "fn": "Gauge.getReward",
      "offset": [
        14427,
        14432
      ],
      "op": "DUP6",
      "path": "10"
    },
    "2853": {
      "fn": "Gauge.getReward",
      "offset": [
        14434,
        14446
      ],
      "op": "DUP6",
      "path": "10"
    },
    "2854": {
      "fn": "Gauge.getReward",
      "offset": [
        14404,
        14414
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1DF3"
    },
    "2857": {
      "fn": "Gauge.getReward",
      "jump": "i",
      "offset": [
        14404,
        14447
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2858": {
      "fn": "Gauge.getReward",
      "offset": [
        14404,
        14447
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2859": {
      "op": "POP"
    },
    "2860": {
      "fn": "Gauge.getReward",
      "offset": [
        14464,
        14468
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 30,
      "value": "0x1"
    },
    "2862": {
      "fn": "Gauge.getReward",
      "offset": [
        14464,
        14468
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "2863": {
      "fn": "Gauge.getReward",
      "offset": [
        14267,
        14475
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2864": {
      "op": "POP"
    },
    "2865": {
      "op": "POP"
    },
    "2866": {
      "op": "POP"
    },
    "2867": {
      "fn": "Gauge.getReward",
      "jump": "o",
      "offset": [
        14267,
        14475
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2868": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4264,
        5256
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2869": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4333,
        4337
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2871": {
      "branch": 171,
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4357,
        4369
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 31
    },
    "2872": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4349,
        4377
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB69"
    },
    "2875": {
      "branch": 171,
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4349,
        4377
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2876": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4349,
        4377
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2878": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4349,
        4377
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2879": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2883": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2885": {
      "op": "SHL"
    },
    "2886": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4349,
        4377
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2887": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4349,
        4377
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2888": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2890": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4349,
        4377
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2892": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4349,
        4377
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2893": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4349,
        4377
      ],
      "op": "ADD",
      "path": "9"
    },
    "2894": {
      "op": "MSTORE"
    },
    "2895": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "2897": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2899": {
      "op": "DUP3"
    },
    "2900": {
      "op": "ADD"
    },
    "2901": {
      "op": "MSTORE"
    },
    "2902": {
      "op": "PUSH3",
      "value": "0x3D3D3"
    },
    "2906": {
      "op": "PUSH1",
      "value": "0xEC"
    },
    "2908": {
      "op": "SHL"
    },
    "2909": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2911": {
      "op": "DUP3"
    },
    "2912": {
      "op": "ADD"
    },
    "2913": {
      "op": "MSTORE"
    },
    "2914": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2916": {
      "op": "ADD"
    },
    "2917": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4349,
        4377
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x6FB"
    },
    "2920": {
      "op": "JUMP"
    },
    "2921": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4349,
        4377
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2922": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4434,
        4445
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 32,
      "value": "0x1"
    },
    "2924": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4434,
        4445
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2925": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4387,
        4528
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB81"
    },
    "2928": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4387,
        4528
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2933": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2935": {
      "op": "SHL"
    },
    "2936": {
      "op": "SUB"
    },
    "2937": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4434,
        4445
      ],
      "op": "AND",
      "path": "9"
    },
    "2938": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4460,
        4470
      ],
      "op": "CALLER",
      "path": "9"
    },
    "2939": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4492,
        4496
      ],
      "op": "ADDRESS",
      "path": "9"
    },
    "2940": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4511,
        4518
      ],
      "op": "DUP6",
      "path": "9"
    },
    "2941": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4387,
        4413
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2029"
    },
    "2944": {
      "fn": "BaseGauge.queueNewRewards",
      "jump": "i",
      "offset": [
        4387,
        4528
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2945": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4387,
        4528
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2946": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4543,
        4577
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 33,
      "value": "0x40"
    },
    "2948": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4543,
        4577
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2949": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4543,
        4577
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2950": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4557,
        4567
      ],
      "op": "CALLER",
      "path": "9"
    },
    "2951": {
      "op": "DUP2"
    },
    "2952": {
      "op": "MSTORE"
    },
    "2953": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2955": {
      "op": "DUP2"
    },
    "2956": {
      "op": "ADD"
    },
    "2957": {
      "op": "DUP5"
    },
    "2958": {
      "op": "SWAP1"
    },
    "2959": {
      "op": "MSTORE"
    },
    "2960": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4543,
        4577
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x1C88AA9A39B1A6357A85C97A3BD4E2B0738E74C68B92928276BC85F495B2450B"
    },
    "2993": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4543,
        4577
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2994": {
      "op": "ADD"
    },
    "2995": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4543,
        4577
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2997": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4543,
        4577
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2998": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4543,
        4577
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2999": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4543,
        4577
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3000": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4543,
        4577
      ],
      "op": "SUB",
      "path": "9"
    },
    "3001": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4543,
        4577
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3002": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4543,
        4577
      ],
      "op": "LOG1",
      "path": "9"
    },
    "3003": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4607,
        4620
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 34,
      "value": "0x7"
    },
    "3005": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4607,
        4620
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3006": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4597,
        4620
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xBC7"
    },
    "3009": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4597,
        4620
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3010": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4597,
        4604
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3011": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4597,
        4620
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2714"
    },
    "3014": {
      "fn": "BaseGauge.queueNewRewards",
      "jump": "i",
      "offset": [
        4597,
        4620
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3015": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4597,
        4620
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3016": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4587,
        4620
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3017": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4587,
        4620
      ],
      "op": "POP",
      "path": "9"
    },
    "3018": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4654,
        4666
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "3020": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4654,
        4666
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3021": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4635,
        4650
      ],
      "op": "TIMESTAMP",
      "path": "9"
    },
    "3022": {
      "branch": 172,
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4635,
        4666
      ],
      "op": "LT",
      "path": "9"
    },
    "3023": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4631,
        4777
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xBE7"
    },
    "3026": {
      "branch": 172,
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4631,
        4777
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3027": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4682,
        4710
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 35,
      "value": "0xBDB"
    },
    "3030": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4702,
        4709
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3031": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4682,
        4701
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2061"
    },
    "3034": {
      "fn": "BaseGauge.queueNewRewards",
      "jump": "i",
      "offset": [
        4682,
        4710
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3035": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4682,
        4710
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3036": {
      "op": "POP"
    },
    "3037": {
      "op": "POP"
    },
    "3038": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4740,
        4741
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 36,
      "value": "0x0"
    },
    "3040": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4724,
        4737
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x7"
    },
    "3042": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4724,
        4741
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "3043": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4762,
        4766
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 37,
      "value": "0x1"
    },
    "3045": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4762,
        4766
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3046": {
      "fn": "BaseGauge.queueNewRewards",
      "jump": "o",
      "offset": [
        4264,
        5256
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3047": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4631,
        4777
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3048": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4786,
        4822
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3050": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4871,
        4879
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "3052": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4871,
        4879
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3053": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4856,
        4868
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "3055": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4856,
        4868
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3056": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4856,
        4879
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xBF9"
    },
    "3059": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4856,
        4879
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3060": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4856,
        4879
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3061": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4856,
        4879
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x280C"
    },
    "3064": {
      "fn": "BaseGauge.queueNewRewards",
      "jump": "i",
      "offset": [
        4856,
        4879
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3065": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4856,
        4879
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3066": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4825,
        4880
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC03"
    },
    "3069": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4825,
        4880
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3070": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4825,
        4840
      ],
      "op": "TIMESTAMP",
      "path": "9"
    },
    "3071": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4825,
        4880
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x280C"
    },
    "3074": {
      "fn": "BaseGauge.queueNewRewards",
      "jump": "i",
      "offset": [
        4825,
        4880
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3075": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4825,
        4880
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3076": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4786,
        4880
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3077": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4786,
        4880
      ],
      "op": "POP",
      "path": "9"
    },
    "3078": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4890,
        4914
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3080": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4948,
        4958
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "3082": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4948,
        4958
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3083": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4917,
        4945
      ],
      "op": "DUP3",
      "path": "9"
    },
    "3084": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4917,
        4958
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC15"
    },
    "3087": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4917,
        4958
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3088": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4917,
        4958
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3089": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4917,
        4958
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x26D3"
    },
    "3092": {
      "fn": "BaseGauge.queueNewRewards",
      "jump": "i",
      "offset": [
        4917,
        4958
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3093": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4917,
        4958
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3094": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4890,
        4958
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3095": {
      "op": "POP"
    },
    "3096": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        5082,
        5089
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3097": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        5077,
        5079
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xA"
    },
    "3099": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        5052,
        5073
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC25"
    },
    "3102": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        4890,
        4958
      ],
      "op": "DUP4",
      "path": "9"
    },
    "3103": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        5071,
        5073
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xC"
    },
    "3105": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        5052,
        5073
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x26D3"
    },
    "3108": {
      "fn": "BaseGauge.queueNewRewards",
      "jump": "i",
      "offset": [
        5052,
        5073
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3109": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        5052,
        5073
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3110": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        5051,
        5079
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC2F"
    },
    "3113": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        5051,
        5079
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "3114": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        5051,
        5079
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3115": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        5051,
        5079
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x26F2"
    },
    "3118": {
      "fn": "BaseGauge.queueNewRewards",
      "jump": "i",
      "offset": [
        5051,
        5079
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3119": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        5051,
        5079
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3120": {
      "branch": 173,
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        5051,
        5089
      ],
      "op": "LT",
      "path": "9"
    },
    "3121": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        5047,
        5229
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "3122": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        5047,
        5229
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC48"
    },
    "3125": {
      "branch": 173,
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        5047,
        5229
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "3126": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        5105,
        5133
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 38,
      "value": "0xC3E"
    },
    "3129": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        5125,
        5132
      ],
      "op": "DUP5",
      "path": "9"
    },
    "3130": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        5105,
        5124
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2061"
    },
    "3133": {
      "fn": "BaseGauge.queueNewRewards",
      "jump": "i",
      "offset": [
        5105,
        5133
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3134": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        5105,
        5133
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3135": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        5163,
        5164
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 39,
      "value": "0x0"
    },
    "3137": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        5147,
        5160
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x7"
    },
    "3139": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        5147,
        5164
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "3140": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        5047,
        5229
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB2A"
    },
    "3143": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        5047,
        5229
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3144": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        5047,
        5229
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3145": {
      "op": "POP"
    },
    "3146": {
      "op": "POP"
    },
    "3147": {
      "op": "POP"
    },
    "3148": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        5195,
        5208
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 40,
      "value": "0x7"
    },
    "3150": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        5195,
        5218
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "3151": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        5245,
        5249
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 41,
      "value": "0x1"
    },
    "3153": {
      "fn": "BaseGauge.queueNewRewards",
      "offset": [
        5245,
        5249
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3154": {
      "fn": "BaseGauge.queueNewRewards",
      "jump": "o",
      "offset": [
        4264,
        5256
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3155": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4497,
        4806
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3156": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4599,
        4612
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 42,
      "value": "0xF"
    },
    "3158": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4599,
        4612
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3159": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4561,
        4565
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3161": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4561,
        4565
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3166": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3168": {
      "op": "SHL"
    },
    "3169": {
      "op": "SUB"
    },
    "3170": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4599,
        4612
      ],
      "op": "AND",
      "path": "10"
    },
    "3171": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4585,
        4595
      ],
      "op": "CALLER",
      "path": "10"
    },
    "3172": {
      "branch": 149,
      "fn": "Gauge.addExtraReward",
      "offset": [
        4585,
        4612
      ],
      "op": "EQ",
      "path": "10"
    },
    "3173": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4577,
        4628
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC80"
    },
    "3176": {
      "branch": 149,
      "fn": "Gauge.addExtraReward",
      "offset": [
        4577,
        4628
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3177": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4577,
        4628
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3179": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4577,
        4628
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3180": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3184": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3186": {
      "op": "SHL"
    },
    "3187": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4577,
        4628
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3188": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4577,
        4628
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3189": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4577,
        4628
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3191": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4577,
        4628
      ],
      "op": "ADD",
      "path": "10"
    },
    "3192": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4577,
        4628
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6FB"
    },
    "3195": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4577,
        4628
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3196": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4577,
        4628
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x277A"
    },
    "3199": {
      "fn": "Gauge.addExtraReward",
      "jump": "i",
      "offset": [
        4577,
        4628
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3200": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4577,
        4628
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3205": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3207": {
      "op": "SHL"
    },
    "3208": {
      "op": "SUB"
    },
    "3209": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4646,
        4672
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 43
    },
    "3210": {
      "branch": 150,
      "fn": "Gauge.addExtraReward",
      "offset": [
        4646,
        4672
      ],
      "op": "AND",
      "path": "10"
    },
    "3211": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4638,
        4692
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCC8"
    },
    "3214": {
      "branch": 150,
      "fn": "Gauge.addExtraReward",
      "offset": [
        4638,
        4692
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3215": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4638,
        4692
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3217": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4638,
        4692
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3218": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3222": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3224": {
      "op": "SHL"
    },
    "3225": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4638,
        4692
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3226": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4638,
        4692
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3227": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3229": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4638,
        4692
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3231": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4638,
        4692
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3232": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4638,
        4692
      ],
      "op": "ADD",
      "path": "10"
    },
    "3233": {
      "op": "MSTORE"
    },
    "3234": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "3236": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3238": {
      "op": "DUP3"
    },
    "3239": {
      "op": "ADD"
    },
    "3240": {
      "op": "MSTORE"
    },
    "3241": {
      "op": "PUSH15",
      "value": "0x217265776172642073657474696E67"
    },
    "3257": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "3259": {
      "op": "SHL"
    },
    "3260": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3262": {
      "op": "DUP3"
    },
    "3263": {
      "op": "ADD"
    },
    "3264": {
      "op": "MSTORE"
    },
    "3265": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3267": {
      "op": "ADD"
    },
    "3268": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4638,
        4692
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6FB"
    },
    "3271": {
      "op": "JUMP"
    },
    "3272": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4638,
        4692
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3273": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4707,
        4737
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 44,
      "value": "0x40"
    },
    "3275": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4707,
        4737
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3280": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3282": {
      "op": "SHL"
    },
    "3283": {
      "op": "SUB"
    },
    "3284": {
      "op": "DUP4"
    },
    "3285": {
      "op": "AND"
    },
    "3286": {
      "op": "DUP2"
    },
    "3287": {
      "op": "MSTORE"
    },
    "3288": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4707,
        4737
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x7A486D506196E4AE0E0B063ACCA8CB3E3128C1BA505CD447ED148222C2D0B153"
    },
    "3321": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4707,
        4737
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3322": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3324": {
      "op": "ADD"
    },
    "3325": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4707,
        4737
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3327": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4707,
        4737
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3328": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4707,
        4737
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3329": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4707,
        4737
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3330": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4707,
        4737
      ],
      "op": "SUB",
      "path": "10"
    },
    "3331": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4707,
        4737
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3332": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4707,
        4737
      ],
      "op": "LOG1",
      "path": "10"
    },
    "3333": {
      "op": "POP"
    },
    "3334": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4747,
        4759
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 45,
      "value": "0x13"
    },
    "3336": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4747,
        4778
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3337": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4747,
        4778
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3338": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4747,
        4778
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "3340": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4747,
        4778
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3341": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4747,
        4778
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3342": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4747,
        4778
      ],
      "op": "ADD",
      "path": "10"
    },
    "3343": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4747,
        4778
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3344": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4747,
        4778
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3345": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3347": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4747,
        4778
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3348": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4747,
        4778
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3349": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4747,
        4778
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3350": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4747,
        4778
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3351": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4747,
        4778
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x66DE8FFDA797E3DE9C05E8FC57B3BF0EC28A930D40B0D285D93C06501CF6A090"
    },
    "3384": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4747,
        4778
      ],
      "op": "ADD",
      "path": "10"
    },
    "3385": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4747,
        4778
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3386": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4747,
        4778
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3391": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3393": {
      "op": "SHL"
    },
    "3394": {
      "op": "SUB"
    },
    "3395": {
      "op": "NOT"
    },
    "3396": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4747,
        4778
      ],
      "op": "AND",
      "path": "10"
    },
    "3397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3401": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3403": {
      "op": "SHL"
    },
    "3404": {
      "op": "SUB"
    },
    "3405": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4747,
        4778
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "3406": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4747,
        4778
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3407": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4747,
        4778
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "3408": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4747,
        4778
      ],
      "op": "AND",
      "path": "10"
    },
    "3409": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4747,
        4778
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3410": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4747,
        4778
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3411": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4747,
        4778
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3412": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4747,
        4778
      ],
      "op": "OR",
      "path": "10"
    },
    "3413": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4747,
        4778
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3414": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4747,
        4778
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3415": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4747,
        4778
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3416": {
      "fn": "Gauge.addExtraReward",
      "offset": [
        4747,
        4778
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3417": {
      "fn": "Gauge.addExtraReward",
      "jump": "o",
      "offset": [
        4497,
        4806
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3418": {
      "fn": "Gauge.withdraw",
      "offset": [
        13347,
        13498
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3419": {
      "fn": "Gauge.withdraw",
      "offset": [
        13443,
        13453
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 46
    },
    "3420": {
      "fn": "Gauge.withdraw",
      "offset": [
        13408,
        13412
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3422": {
      "fn": "Gauge.withdraw",
      "offset": [
        13433,
        13454
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3423": {
      "fn": "Gauge.withdraw",
      "offset": [
        13433,
        13454
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3424": {
      "fn": "Gauge.withdraw",
      "offset": [
        13433,
        13454
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3425": {
      "fn": "Gauge.withdraw",
      "offset": [
        13433,
        13442
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x12"
    },
    "3427": {
      "fn": "Gauge.withdraw",
      "offset": [
        13433,
        13454
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3429": {
      "fn": "Gauge.withdraw",
      "offset": [
        13433,
        13454
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3430": {
      "fn": "Gauge.withdraw",
      "offset": [
        13433,
        13454
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3432": {
      "fn": "Gauge.withdraw",
      "offset": [
        13433,
        13454
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3433": {
      "fn": "Gauge.withdraw",
      "offset": [
        13433,
        13454
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3434": {
      "fn": "Gauge.withdraw",
      "offset": [
        13433,
        13454
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3435": {
      "fn": "Gauge.withdraw",
      "offset": [
        13424,
        13470
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB2A"
    },
    "3438": {
      "fn": "Gauge.withdraw",
      "offset": [
        13424,
        13470
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3439": {
      "fn": "Gauge.withdraw",
      "offset": [
        13456,
        13462
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3440": {
      "fn": "Gauge.withdraw",
      "offset": [
        13464,
        13469
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3441": {
      "fn": "Gauge.withdraw",
      "offset": [
        13424,
        13432
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE3B"
    },
    "3444": {
      "fn": "Gauge.withdraw",
      "jump": "i",
      "offset": [
        13424,
        13470
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3445": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3446": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3448": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3453": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3455": {
      "op": "SHL"
    },
    "3456": {
      "op": "SUB"
    },
    "3457": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3458": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "7"
    },
    "3459": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3460": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD9F"
    },
    "3463": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3464": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3466": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3467": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3471": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3473": {
      "op": "SHL"
    },
    "3474": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3475": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3476": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3478": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3479": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6FB"
    },
    "3482": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3483": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x272C"
    },
    "3486": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3487": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3488": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 47,
      "value": "0x88F"
    },
    "3491": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3493": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2157"
    },
    "3496": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3497": {
      "fn": "Gauge.setVe",
      "offset": [
        3611,
        3722
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3498": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3500": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3505": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3507": {
      "op": "SHL"
    },
    "3508": {
      "op": "SUB"
    },
    "3509": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3510": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "7"
    },
    "3511": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3512": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDD3"
    },
    "3515": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3516": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3518": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3519": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3523": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3525": {
      "op": "SHL"
    },
    "3526": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3527": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3528": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3530": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3531": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6FB"
    },
    "3534": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3535": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x272C"
    },
    "3538": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3539": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3540": {
      "fn": "Gauge.setVe",
      "offset": [
        3668,
        3675
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 48,
      "value": "0xD"
    },
    "3542": {
      "fn": "Gauge.setVe",
      "offset": [
        3668,
        3681
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3543": {
      "fn": "Gauge.setVe",
      "offset": [
        3668,
        3681
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3548": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3550": {
      "op": "SHL"
    },
    "3551": {
      "op": "SUB"
    },
    "3552": {
      "op": "NOT"
    },
    "3553": {
      "fn": "Gauge.setVe",
      "offset": [
        3668,
        3681
      ],
      "op": "AND",
      "path": "10"
    },
    "3554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3558": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3560": {
      "op": "SHL"
    },
    "3561": {
      "op": "SUB"
    },
    "3562": {
      "fn": "Gauge.setVe",
      "offset": [
        3668,
        3681
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3563": {
      "fn": "Gauge.setVe",
      "offset": [
        3668,
        3681
      ],
      "op": "AND",
      "path": "10"
    },
    "3564": {
      "fn": "Gauge.setVe",
      "offset": [
        3668,
        3681
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3565": {
      "fn": "Gauge.setVe",
      "offset": [
        3668,
        3681
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3566": {
      "fn": "Gauge.setVe",
      "offset": [
        3668,
        3681
      ],
      "op": "OR",
      "path": "10"
    },
    "3567": {
      "fn": "Gauge.setVe",
      "offset": [
        3668,
        3681
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3568": {
      "fn": "Gauge.setVe",
      "offset": [
        3668,
        3681
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3569": {
      "fn": "Gauge.setVe",
      "offset": [
        3668,
        3681
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3570": {
      "fn": "Gauge.setVe",
      "offset": [
        3696,
        3715
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 49,
      "value": "0x40"
    },
    "3572": {
      "fn": "Gauge.setVe",
      "offset": [
        3696,
        3715
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3573": {
      "op": "SWAP1"
    },
    "3574": {
      "op": "DUP2"
    },
    "3575": {
      "op": "MSTORE"
    },
    "3576": {
      "fn": "Gauge.setVe",
      "offset": [
        3696,
        3715
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0xF382D8404A45286F6180665C3EB5574DF3E6EFDD99AD2E652D8F5D904F264F0"
    },
    "3609": {
      "fn": "Gauge.setVe",
      "offset": [
        3696,
        3715
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3610": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3612": {
      "op": "ADD"
    },
    "3613": {
      "fn": "Gauge.setVe",
      "offset": [
        3696,
        3715
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3614": {
      "fn": "Gauge.setVe",
      "offset": [
        3696,
        3715
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3616": {
      "fn": "Gauge.setVe",
      "offset": [
        3696,
        3715
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3617": {
      "fn": "Gauge.setVe",
      "offset": [
        3696,
        3715
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3618": {
      "fn": "Gauge.setVe",
      "offset": [
        3696,
        3715
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3619": {
      "fn": "Gauge.setVe",
      "offset": [
        3696,
        3715
      ],
      "op": "SUB",
      "path": "10"
    },
    "3620": {
      "fn": "Gauge.setVe",
      "offset": [
        3696,
        3715
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3621": {
      "fn": "Gauge.setVe",
      "offset": [
        3696,
        3715
      ],
      "op": "LOG1",
      "path": "10"
    },
    "3622": {
      "fn": "Gauge.setVe",
      "offset": [
        3611,
        3722
      ],
      "op": "POP",
      "path": "10"
    },
    "3623": {
      "fn": "Gauge.setVe",
      "jump": "o",
      "offset": [
        3611,
        3722
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3624": {
      "fn": "BaseGauge.lastTimeRewardApplicable",
      "offset": [
        2835,
        2964
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3625": {
      "fn": "BaseGauge.lastTimeRewardApplicable",
      "offset": [
        2892,
        2899
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "3627": {
      "fn": "BaseGauge.lastTimeRewardApplicable",
      "offset": [
        2918,
        2957
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 50,
      "value": "0xE36"
    },
    "3630": {
      "fn": "BaseGauge.lastTimeRewardApplicable",
      "offset": [
        2927,
        2942
      ],
      "op": "TIMESTAMP",
      "path": "9"
    },
    "3631": {
      "fn": "BaseGauge.lastTimeRewardApplicable",
      "offset": [
        2944,
        2956
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "3633": {
      "fn": "BaseGauge.lastTimeRewardApplicable",
      "offset": [
        2944,
        2956
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "3634": {
      "fn": "BaseGauge.lastTimeRewardApplicable",
      "offset": [
        2918,
        2926
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x21A7"
    },
    "3637": {
      "fn": "BaseGauge.lastTimeRewardApplicable",
      "jump": "i",
      "offset": [
        2918,
        2957
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3638": {
      "fn": "BaseGauge.lastTimeRewardApplicable",
      "offset": [
        2918,
        2957
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3639": {
      "fn": "BaseGauge.lastTimeRewardApplicable",
      "offset": [
        2911,
        2957
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3640": {
      "fn": "BaseGauge.lastTimeRewardApplicable",
      "offset": [
        2911,
        2957
      ],
      "op": "POP",
      "path": "9"
    },
    "3641": {
      "fn": "BaseGauge.lastTimeRewardApplicable",
      "offset": [
        2835,
        2964
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "3642": {
      "fn": "BaseGauge.lastTimeRewardApplicable",
      "jump": "o",
      "offset": [
        2835,
        2964
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3643": {
      "fn": "Gauge.withdraw",
      "offset": [
        12325,
        13072
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3644": {
      "fn": "Gauge.withdraw",
      "offset": [
        12456,
        12460
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3646": {
      "fn": "Gauge.withdraw",
      "offset": [
        12435,
        12445
      ],
      "op": "CALLER",
      "path": "10"
    },
    "3647": {
      "offset": [
        1972,
        1994
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xE47"
    },
    "3650": {
      "offset": [
        1986,
        1993
      ],
      "op": "DUP2",
      "path": "9"
    },
    "3651": {
      "offset": [
        1972,
        1985
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1C76"
    },
    "3654": {
      "jump": "i",
      "offset": [
        1972,
        1994
      ],
      "op": "JUMP",
      "path": "9"
    },
    "3655": {
      "fn": "Gauge.withdraw",
      "offset": [
        1972,
        1994
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "3656": {
      "fn": "Gauge.withdraw",
      "offset": [
        12490,
        12491
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 51,
      "value": "0x0"
    },
    "3658": {
      "fn": "Gauge.withdraw",
      "offset": [
        12480,
        12487
      ],
      "op": "DUP6",
      "path": "10"
    },
    "3659": {
      "branch": 151,
      "fn": "Gauge.withdraw",
      "offset": [
        12480,
        12491
      ],
      "op": "GT",
      "path": "10"
    },
    "3660": {
      "fn": "Gauge.withdraw",
      "offset": [
        12472,
        12526
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE97"
    },
    "3663": {
      "branch": 151,
      "fn": "Gauge.withdraw",
      "offset": [
        12472,
        12526
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3664": {
      "fn": "Gauge.withdraw",
      "offset": [
        12472,
        12526
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3666": {
      "fn": "Gauge.withdraw",
      "offset": [
        12472,
        12526
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3667": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3671": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3673": {
      "op": "SHL"
    },
    "3674": {
      "fn": "Gauge.withdraw",
      "offset": [
        12472,
        12526
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3675": {
      "fn": "Gauge.withdraw",
      "offset": [
        12472,
        12526
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3676": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3678": {
      "fn": "Gauge.withdraw",
      "offset": [
        12472,
        12526
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3680": {
      "fn": "Gauge.withdraw",
      "offset": [
        12472,
        12526
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3681": {
      "fn": "Gauge.withdraw",
      "offset": [
        12472,
        12526
      ],
      "op": "ADD",
      "path": "10"
    },
    "3682": {
      "op": "MSTORE"
    },
    "3683": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "3685": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3687": {
      "op": "DUP3"
    },
    "3688": {
      "op": "ADD"
    },
    "3689": {
      "op": "MSTORE"
    },
    "3690": {
      "op": "PUSH32",
      "value": "0x526577617264506F6F6C203A2043616E6E6F7420776974686472617720300000"
    },
    "3723": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3725": {
      "op": "DUP3"
    },
    "3726": {
      "op": "ADD"
    },
    "3727": {
      "op": "MSTORE"
    },
    "3728": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3730": {
      "op": "ADD"
    },
    "3731": {
      "fn": "Gauge.withdraw",
      "offset": [
        12472,
        12526
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6FB"
    },
    "3734": {
      "op": "JUMP"
    },
    "3735": {
      "fn": "Gauge.withdraw",
      "offset": [
        12472,
        12526
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3736": {
      "fn": "Gauge.withdraw",
      "offset": [
        12598,
        12610
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x13"
    },
    "3738": {
      "fn": "Gauge.withdraw",
      "offset": [
        12598,
        12617
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3739": {
      "fn": "Gauge.withdraw",
      "offset": [
        12581,
        12595
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3741": {
      "fn": "Gauge.withdraw",
      "offset": [
        12627,
        12747
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3742": {
      "fn": "Gauge.withdraw",
      "offset": [
        12651,
        12657
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3743": {
      "fn": "Gauge.withdraw",
      "offset": [
        12647,
        12648
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3744": {
      "fn": "Gauge.withdraw",
      "offset": [
        12647,
        12657
      ],
      "op": "LT",
      "path": "10"
    },
    "3745": {
      "fn": "Gauge.withdraw",
      "offset": [
        12627,
        12747
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3746": {
      "fn": "Gauge.withdraw",
      "offset": [
        12627,
        12747
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF42"
    },
    "3749": {
      "fn": "Gauge.withdraw",
      "offset": [
        12627,
        12747
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3750": {
      "fn": "Gauge.withdraw",
      "offset": [
        12691,
        12703
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 52,
      "value": "0x13"
    },
    "3752": {
      "fn": "Gauge.withdraw",
      "offset": [
        12704,
        12705
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3753": {
      "fn": "Gauge.withdraw",
      "offset": [
        12691,
        12706
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3754": {
      "fn": "Gauge.withdraw",
      "offset": [
        12691,
        12706
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3755": {
      "fn": "Gauge.withdraw",
      "offset": [
        12691,
        12706
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3756": {
      "fn": "Gauge.withdraw",
      "offset": [
        12691,
        12706
      ],
      "op": "LT",
      "path": "10"
    },
    "3757": {
      "fn": "Gauge.withdraw",
      "offset": [
        12691,
        12706
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xEB8"
    },
    "3760": {
      "fn": "Gauge.withdraw",
      "offset": [
        12691,
        12706
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3761": {
      "fn": "Gauge.withdraw",
      "offset": [
        12691,
        12706
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xEB8"
    },
    "3764": {
      "fn": "Gauge.withdraw",
      "offset": [
        12691,
        12706
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2823"
    },
    "3767": {
      "fn": "Gauge.withdraw",
      "jump": "i",
      "offset": [
        12691,
        12706
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3768": {
      "fn": "Gauge.withdraw",
      "offset": [
        12691,
        12706
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3769": {
      "fn": "Gauge.withdraw",
      "offset": [
        12691,
        12706
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3771": {
      "fn": "Gauge.withdraw",
      "offset": [
        12691,
        12706
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3772": {
      "fn": "Gauge.withdraw",
      "offset": [
        12691,
        12706
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3773": {
      "fn": "Gauge.withdraw",
      "offset": [
        12691,
        12706
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3774": {
      "fn": "Gauge.withdraw",
      "offset": [
        12691,
        12706
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3776": {
      "fn": "Gauge.withdraw",
      "offset": [
        12691,
        12706
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3777": {
      "fn": "Gauge.withdraw",
      "offset": [
        12691,
        12706
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3778": {
      "fn": "Gauge.withdraw",
      "offset": [
        12691,
        12706
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3779": {
      "fn": "Gauge.withdraw",
      "offset": [
        12691,
        12706
      ],
      "op": "ADD",
      "path": "10"
    },
    "3780": {
      "fn": "Gauge.withdraw",
      "offset": [
        12691,
        12706
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3781": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3783": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3784": {
      "op": "PUSH4",
      "value": "0x14640F37"
    },
    "3789": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "3791": {
      "op": "SHL"
    },
    "3792": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3793": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3794": {
      "fn": "Gauge.withdraw",
      "offset": [
        12725,
        12735
      ],
      "op": "CALLER",
      "path": "10"
    },
    "3795": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3797": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3798": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "ADD",
      "path": "10"
    },
    "3799": {
      "op": "MSTORE"
    },
    "3800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3804": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3806": {
      "op": "SHL"
    },
    "3807": {
      "op": "SUB"
    },
    "3808": {
      "fn": "Gauge.withdraw",
      "offset": [
        12691,
        12706
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3809": {
      "fn": "Gauge.withdraw",
      "offset": [
        12691,
        12706
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3810": {
      "fn": "Gauge.withdraw",
      "offset": [
        12691,
        12706
      ],
      "op": "AND",
      "path": "10"
    },
    "3811": {
      "fn": "Gauge.withdraw",
      "offset": [
        12691,
        12706
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3812": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12724
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xA32079B8"
    },
    "3817": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12724
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3818": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3820": {
      "op": "ADD"
    },
    "3821": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3823": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3825": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3826": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3827": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3828": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "SUB",
      "path": "10"
    },
    "3829": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3830": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3832": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "DUP8",
      "path": "10"
    },
    "3833": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "GAS",
      "path": "10"
    },
    "3834": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "CALL",
      "path": "10"
    },
    "3835": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3836": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3837": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3838": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF0B"
    },
    "3841": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3842": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "3843": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3845": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3846": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "3847": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "3848": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3850": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "REVERT",
      "path": "10"
    },
    "3851": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3852": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "POP",
      "path": "10"
    },
    "3853": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "POP",
      "path": "10"
    },
    "3854": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "POP",
      "path": "10"
    },
    "3855": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "POP",
      "path": "10"
    },
    "3856": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3858": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3859": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "3860": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "3862": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "NOT",
      "path": "10"
    },
    "3863": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "3865": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3866": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "ADD",
      "path": "10"
    },
    "3867": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "AND",
      "path": "10"
    },
    "3868": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3869": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "ADD",
      "path": "10"
    },
    "3870": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3871": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3873": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3874": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "POP",
      "path": "10"
    },
    "3875": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3876": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "ADD",
      "path": "10"
    },
    "3877": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3878": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF2F"
    },
    "3881": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3882": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3883": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x27EF"
    },
    "3886": {
      "fn": "Gauge.withdraw",
      "jump": "i",
      "offset": [
        12678,
        12736
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3887": {
      "fn": "Gauge.withdraw",
      "offset": [
        12678,
        12736
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3888": {
      "op": "POP"
    },
    "3889": {
      "fn": "Gauge.withdraw",
      "offset": [
        12659,
        12662
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 53
    },
    "3890": {
      "fn": "Gauge.withdraw",
      "offset": [
        12659,
        12662
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF3A"
    },
    "3893": {
      "fn": "Gauge.withdraw",
      "offset": [
        12659,
        12662
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3894": {
      "fn": "Gauge.withdraw",
      "offset": [
        12659,
        12662
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2839"
    },
    "3897": {
      "fn": "Gauge.withdraw",
      "jump": "i",
      "offset": [
        12659,
        12662
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3898": {
      "fn": "Gauge.withdraw",
      "offset": [
        12659,
        12662
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3899": {
      "fn": "Gauge.withdraw",
      "offset": [
        12659,
        12662
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3900": {
      "fn": "Gauge.withdraw",
      "offset": [
        12659,
        12662
      ],
      "op": "POP",
      "path": "10"
    },
    "3901": {
      "fn": "Gauge.withdraw",
      "offset": [
        12659,
        12662
      ],
      "op": "POP",
      "path": "10"
    },
    "3902": {
      "fn": "Gauge.withdraw",
      "offset": [
        12627,
        12747
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE9D"
    },
    "3905": {
      "fn": "Gauge.withdraw",
      "offset": [
        12627,
        12747
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3906": {
      "fn": "Gauge.withdraw",
      "offset": [
        12627,
        12747
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3907": {
      "fn": "Gauge.withdraw",
      "offset": [
        12627,
        12747
      ],
      "op": "POP",
      "path": "10"
    },
    "3908": {
      "fn": "Gauge.withdraw",
      "offset": [
        12787,
        12794
      ],
      "op": "DUP6",
      "path": "10",
      "statement": 54
    },
    "3909": {
      "fn": "Gauge.withdraw",
      "offset": [
        12772,
        12784
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x11"
    },
    "3911": {
      "fn": "Gauge.withdraw",
      "offset": [
        12772,
        12784
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3912": {
      "fn": "Gauge.withdraw",
      "offset": [
        12772,
        12794
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF51"
    },
    "3915": {
      "fn": "Gauge.withdraw",
      "offset": [
        12772,
        12794
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3916": {
      "fn": "Gauge.withdraw",
      "offset": [
        12772,
        12794
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3917": {
      "fn": "Gauge.withdraw",
      "offset": [
        12772,
        12794
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x280C"
    },
    "3920": {
      "fn": "Gauge.withdraw",
      "jump": "i",
      "offset": [
        12772,
        12794
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3921": {
      "fn": "Gauge.withdraw",
      "offset": [
        12772,
        12794
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3922": {
      "fn": "Gauge.withdraw",
      "offset": [
        12757,
        12769
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x11"
    },
    "3924": {
      "fn": "Gauge.withdraw",
      "offset": [
        12757,
        12794
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3925": {
      "fn": "Gauge.withdraw",
      "offset": [
        12838,
        12848
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 55
    },
    "3926": {
      "fn": "Gauge.withdraw",
      "offset": [
        12828,
        12849
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3928": {
      "fn": "Gauge.withdraw",
      "offset": [
        12828,
        12849
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3929": {
      "fn": "Gauge.withdraw",
      "offset": [
        12828,
        12849
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3930": {
      "fn": "Gauge.withdraw",
      "offset": [
        12828,
        12849
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3931": {
      "fn": "Gauge.withdraw",
      "offset": [
        12828,
        12837
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x12"
    },
    "3933": {
      "fn": "Gauge.withdraw",
      "offset": [
        12828,
        12849
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3935": {
      "fn": "Gauge.withdraw",
      "offset": [
        12828,
        12849
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3936": {
      "fn": "Gauge.withdraw",
      "offset": [
        12828,
        12849
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3938": {
      "fn": "Gauge.withdraw",
      "offset": [
        12828,
        12849
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3939": {
      "fn": "Gauge.withdraw",
      "offset": [
        12828,
        12849
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3940": {
      "fn": "Gauge.withdraw",
      "offset": [
        12828,
        12849
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3941": {
      "fn": "Gauge.withdraw",
      "offset": [
        12828,
        12859
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF6F"
    },
    "3944": {
      "fn": "Gauge.withdraw",
      "offset": [
        12828,
        12859
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3945": {
      "fn": "Gauge.withdraw",
      "offset": [
        12852,
        12859
      ],
      "op": "DUP8",
      "path": "10"
    },
    "3946": {
      "fn": "Gauge.withdraw",
      "offset": [
        12852,
        12859
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3947": {
      "fn": "Gauge.withdraw",
      "offset": [
        12828,
        12859
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x280C"
    },
    "3950": {
      "fn": "Gauge.withdraw",
      "jump": "i",
      "offset": [
        12828,
        12859
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3951": {
      "fn": "Gauge.withdraw",
      "offset": [
        12828,
        12859
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3952": {
      "fn": "Gauge.withdraw",
      "offset": [
        12814,
        12824
      ],
      "op": "CALLER",
      "path": "10"
    },
    "3953": {
      "fn": "Gauge.withdraw",
      "offset": [
        12804,
        12825
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3955": {
      "fn": "Gauge.withdraw",
      "offset": [
        12804,
        12825
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3956": {
      "fn": "Gauge.withdraw",
      "offset": [
        12804,
        12825
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3957": {
      "fn": "Gauge.withdraw",
      "offset": [
        12804,
        12825
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3958": {
      "fn": "Gauge.withdraw",
      "offset": [
        12804,
        12813
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x12"
    },
    "3960": {
      "fn": "Gauge.withdraw",
      "offset": [
        12804,
        12825
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3962": {
      "fn": "Gauge.withdraw",
      "offset": [
        12804,
        12825
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3963": {
      "fn": "Gauge.withdraw",
      "offset": [
        12804,
        12825
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3965": {
      "fn": "Gauge.withdraw",
      "offset": [
        12804,
        12825
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3966": {
      "fn": "Gauge.withdraw",
      "offset": [
        12804,
        12825
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3967": {
      "fn": "Gauge.withdraw",
      "offset": [
        12804,
        12859
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3968": {
      "fn": "Gauge.withdraw",
      "offset": [
        12870,
        12942
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3969": {
      "fn": "Gauge.withdraw",
      "offset": [
        12870,
        12942
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3970": {
      "fn": "Gauge.withdraw",
      "offset": [
        12870,
        12942
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF91"
    },
    "3973": {
      "fn": "Gauge.withdraw",
      "offset": [
        12870,
        12942
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3974": {
      "fn": "Gauge.withdraw",
      "offset": [
        12896,
        12931
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 56,
      "value": "0xF91"
    },
    "3977": {
      "fn": "Gauge.withdraw",
      "offset": [
        12907,
        12917
      ],
      "op": "CALLER",
      "path": "10"
    },
    "3978": {
      "fn": "Gauge.withdraw",
      "offset": [
        12919,
        12924
      ],
      "op": "DUP6",
      "path": "10"
    },
    "3979": {
      "fn": "Gauge.withdraw",
      "offset": [
        12926,
        12930
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "3981": {
      "fn": "Gauge.withdraw",
      "offset": [
        12896,
        12906
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1DF3"
    },
    "3984": {
      "fn": "Gauge.withdraw",
      "jump": "i",
      "offset": [
        12896,
        12931
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3985": {
      "fn": "Gauge.withdraw",
      "offset": [
        12896,
        12931
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3986": {
      "fn": "Gauge.withdraw",
      "offset": [
        12952,
        12964
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 57,
      "value": "0xC"
    },
    "3988": {
      "fn": "Gauge.withdraw",
      "offset": [
        12952,
        12964
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3989": {
      "fn": "Gauge.withdraw",
      "offset": [
        12952,
        12998
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFA8"
    },
    "3992": {
      "fn": "Gauge.withdraw",
      "offset": [
        12952,
        12998
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3997": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3999": {
      "op": "SHL"
    },
    "4000": {
      "op": "SUB"
    },
    "4001": {
      "fn": "Gauge.withdraw",
      "offset": [
        12952,
        12964
      ],
      "op": "AND",
      "path": "10"
    },
    "4002": {
      "fn": "Gauge.withdraw",
      "offset": [
        12978,
        12988
      ],
      "op": "CALLER",
      "path": "10"
    },
    "4003": {
      "fn": "Gauge.withdraw",
      "offset": [
        12990,
        12997
      ],
      "op": "DUP9",
      "path": "10"
    },
    "4004": {
      "fn": "Gauge.withdraw",
      "offset": [
        12952,
        12977
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x18CE"
    },
    "4007": {
      "fn": "Gauge.withdraw",
      "jump": "i",
      "offset": [
        12952,
        12998
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4008": {
      "fn": "Gauge.withdraw",
      "offset": [
        12952,
        12998
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4009": {
      "fn": "Gauge.withdraw",
      "offset": [
        13013,
        13043
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 58,
      "value": "0x40"
    },
    "4011": {
      "fn": "Gauge.withdraw",
      "offset": [
        13013,
        13043
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4012": {
      "op": "DUP7"
    },
    "4013": {
      "op": "DUP2"
    },
    "4014": {
      "op": "MSTORE"
    },
    "4015": {
      "fn": "Gauge.withdraw",
      "offset": [
        13023,
        13033
      ],
      "op": "CALLER",
      "path": "10"
    },
    "4016": {
      "fn": "Gauge.withdraw",
      "offset": [
        13023,
        13033
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4017": {
      "fn": "Gauge.withdraw",
      "offset": [
        13013,
        13043
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
    },
    "4050": {
      "fn": "Gauge.withdraw",
      "offset": [
        13013,
        13043
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4051": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4053": {
      "op": "ADD"
    },
    "4054": {
      "fn": "Gauge.withdraw",
      "offset": [
        13013,
        13043
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4056": {
      "fn": "Gauge.withdraw",
      "offset": [
        13013,
        13043
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4057": {
      "fn": "Gauge.withdraw",
      "offset": [
        13013,
        13043
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4058": {
      "fn": "Gauge.withdraw",
      "offset": [
        13013,
        13043
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4059": {
      "fn": "Gauge.withdraw",
      "offset": [
        13013,
        13043
      ],
      "op": "SUB",
      "path": "10"
    },
    "4060": {
      "fn": "Gauge.withdraw",
      "offset": [
        13013,
        13043
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4061": {
      "fn": "Gauge.withdraw",
      "offset": [
        13013,
        13043
      ],
      "op": "LOG2",
      "path": "10"
    },
    "4062": {
      "op": "POP"
    },
    "4063": {
      "fn": "Gauge.withdraw",
      "offset": [
        13061,
        13065
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 59,
      "value": "0x1"
    },
    "4065": {
      "fn": "Gauge.withdraw",
      "offset": [
        13061,
        13065
      ],
      "op": "SWAP6",
      "path": "10"
    },
    "4066": {
      "fn": "Gauge.withdraw",
      "offset": [
        12325,
        13072
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "4067": {
      "op": "POP"
    },
    "4068": {
      "op": "POP"
    },
    "4069": {
      "op": "POP"
    },
    "4070": {
      "op": "POP"
    },
    "4071": {
      "op": "POP"
    },
    "4072": {
      "fn": "Gauge.withdraw",
      "jump": "o",
      "offset": [
        12325,
        13072
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4073": {
      "fn": "Gauge.getReward",
      "offset": [
        14632,
        14813
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4074": {
      "fn": "Gauge.getReward",
      "offset": [
        14730,
        14734
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4076": {
      "fn": "Gauge.getReward",
      "offset": [
        14701,
        14711
      ],
      "op": "CALLER",
      "path": "10"
    },
    "4077": {
      "offset": [
        1972,
        1994
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xFF5"
    },
    "4080": {
      "offset": [
        1986,
        1993
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4081": {
      "offset": [
        1972,
        1985
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1C76"
    },
    "4084": {
      "jump": "i",
      "offset": [
        1972,
        1994
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4085": {
      "fn": "Gauge.getReward",
      "offset": [
        1972,
        1994
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4086": {
      "fn": "Gauge.getReward",
      "offset": [
        14750,
        14785
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 60,
      "value": "0xA9B"
    },
    "4089": {
      "fn": "Gauge.getReward",
      "offset": [
        14761,
        14771
      ],
      "op": "CALLER",
      "path": "10"
    },
    "4090": {
      "fn": "Gauge.getReward",
      "offset": [
        14773,
        14778
      ],
      "op": "DUP5",
      "path": "10"
    },
    "4091": {
      "fn": "Gauge.getReward",
      "offset": [
        14780,
        14784
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "4093": {
      "fn": "Gauge.getReward",
      "offset": [
        14750,
        14760
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1DF3"
    },
    "4096": {
      "fn": "Gauge.getReward",
      "jump": "i",
      "offset": [
        14750,
        14785
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4097": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        4980,
        5618
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4098": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5085,
        5098
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 61,
      "value": "0xF"
    },
    "4100": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5085,
        5098
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4101": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5047,
        5051
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4103": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5047,
        5051
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4108": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4110": {
      "op": "SHL"
    },
    "4111": {
      "op": "SUB"
    },
    "4112": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5085,
        5098
      ],
      "op": "AND",
      "path": "10"
    },
    "4113": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5071,
        5081
      ],
      "op": "CALLER",
      "path": "10"
    },
    "4114": {
      "branch": 152,
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5071,
        5098
      ],
      "op": "EQ",
      "path": "10"
    },
    "4115": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5063,
        5114
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x102E"
    },
    "4118": {
      "branch": 152,
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5063,
        5114
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4119": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5063,
        5114
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4121": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5063,
        5114
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4122": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4126": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4128": {
      "op": "SHL"
    },
    "4129": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5063,
        5114
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4130": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5063,
        5114
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4131": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5063,
        5114
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4133": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5063,
        5114
      ],
      "op": "ADD",
      "path": "10"
    },
    "4134": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5063,
        5114
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6FB"
    },
    "4137": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5063,
        5114
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4138": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5063,
        5114
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x277A"
    },
    "4141": {
      "fn": "Gauge.removeExtraReward",
      "jump": "i",
      "offset": [
        5063,
        5114
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4142": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5063,
        5114
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4143": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5184,
        5196
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x13"
    },
    "4145": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5184,
        5203
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4146": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4148": {
      "op": "NOT"
    },
    "4149": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5140,
        5157
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4150": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5124,
        5137
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4152": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5213,
        5376
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4153": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5237,
        5243
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4154": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5233,
        5234
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4155": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5233,
        5243
      ],
      "op": "LT",
      "path": "10"
    },
    "4156": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5213,
        5376
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4157": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5213,
        5376
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1092"
    },
    "4160": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5213,
        5376
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4161": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5287,
        5299
      ],
      "op": "DUP5",
      "path": "10"
    },
    "4162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4166": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4168": {
      "op": "SHL"
    },
    "4169": {
      "op": "SUB"
    },
    "4170": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5268,
        5299
      ],
      "op": "AND",
      "path": "10"
    },
    "4171": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5268,
        5280
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x13"
    },
    "4173": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5281,
        5282
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4174": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5268,
        5283
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4175": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5268,
        5283
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4176": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5268,
        5283
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4177": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5268,
        5283
      ],
      "op": "LT",
      "path": "10"
    },
    "4178": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5268,
        5283
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x105D"
    },
    "4181": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5268,
        5283
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4182": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5268,
        5283
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x105D"
    },
    "4185": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5268,
        5283
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2823"
    },
    "4188": {
      "fn": "Gauge.removeExtraReward",
      "jump": "i",
      "offset": [
        5268,
        5283
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4189": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5268,
        5283
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4190": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5268,
        5283
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4192": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5268,
        5283
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4193": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5268,
        5283
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4194": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5268,
        5283
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4195": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5268,
        5283
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4197": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5268,
        5283
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4198": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5268,
        5283
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4199": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5268,
        5283
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4200": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5268,
        5283
      ],
      "op": "ADD",
      "path": "10"
    },
    "4201": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5268,
        5283
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4206": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4208": {
      "op": "SHL"
    },
    "4209": {
      "op": "SUB"
    },
    "4210": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5268,
        5283
      ],
      "op": "AND",
      "path": "10"
    },
    "4211": {
      "branch": 153,
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5268,
        5299
      ],
      "op": "EQ",
      "path": "10"
    },
    "4212": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5264,
        5366
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4213": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5264,
        5366
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1080"
    },
    "4216": {
      "branch": 153,
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5264,
        5366
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4217": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5327,
        5328
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 62
    },
    "4218": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5319,
        5328
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4219": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5319,
        5328
      ],
      "op": "POP",
      "path": "10"
    },
    "4220": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5346,
        5351
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 63,
      "value": "0x1092"
    },
    "4223": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5346,
        5351
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4224": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5264,
        5366
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4225": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5245,
        5248
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 64
    },
    "4226": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5245,
        5248
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x108A"
    },
    "4229": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5245,
        5248
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4230": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5245,
        5248
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2839"
    },
    "4233": {
      "fn": "Gauge.removeExtraReward",
      "jump": "i",
      "offset": [
        5245,
        5248
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4234": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5245,
        5248
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4235": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5245,
        5248
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4236": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5245,
        5248
      ],
      "op": "POP",
      "path": "10"
    },
    "4237": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5245,
        5248
      ],
      "op": "POP",
      "path": "10"
    },
    "4238": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5213,
        5376
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1038"
    },
    "4241": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5213,
        5376
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4242": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5213,
        5376
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4243": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5213,
        5376
      ],
      "op": "POP",
      "path": "10"
    },
    "4244": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4246": {
      "op": "NOT"
    },
    "4247": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5393,
        5398
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 65
    },
    "4248": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5393,
        5419
      ],
      "op": "EQ",
      "path": "10"
    },
    "4249": {
      "branch": 154,
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5393,
        5419
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4250": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5385,
        5446
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10DE"
    },
    "4253": {
      "branch": 154,
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5385,
        5446
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4254": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5385,
        5446
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4256": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5385,
        5446
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4257": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4261": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4263": {
      "op": "SHL"
    },
    "4264": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5385,
        5446
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4265": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5385,
        5446
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4266": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4268": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5385,
        5446
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4270": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5385,
        5446
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4271": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5385,
        5446
      ],
      "op": "ADD",
      "path": "10"
    },
    "4272": {
      "op": "MSTORE"
    },
    "4273": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "4275": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4277": {
      "op": "DUP3"
    },
    "4278": {
      "op": "ADD"
    },
    "4279": {
      "op": "MSTORE"
    },
    "4280": {
      "op": "PUSH22",
      "value": "0x195E1D1C98481C995DD85C99081B9BDD08199BDD5B99"
    },
    "4303": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "4305": {
      "op": "SHL"
    },
    "4306": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4308": {
      "op": "DUP3"
    },
    "4309": {
      "op": "ADD"
    },
    "4310": {
      "op": "MSTORE"
    },
    "4311": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4313": {
      "op": "ADD"
    },
    "4314": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5385,
        5446
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6FB"
    },
    "4317": {
      "op": "JUMP"
    },
    "4318": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5385,
        5446
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4319": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5461,
        5493
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 66,
      "value": "0x40"
    },
    "4321": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5461,
        5493
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4326": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4328": {
      "op": "SHL"
    },
    "4329": {
      "op": "SUB"
    },
    "4330": {
      "op": "DUP6"
    },
    "4331": {
      "op": "AND"
    },
    "4332": {
      "op": "DUP2"
    },
    "4333": {
      "op": "MSTORE"
    },
    "4334": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5461,
        5493
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x8B6E4849B65BA893304022BD0F251B5584E334B1E08550E629E83D733745ED46"
    },
    "4367": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5461,
        5493
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4368": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4370": {
      "op": "ADD"
    },
    "4371": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5461,
        5493
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4373": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5461,
        5493
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4374": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5461,
        5493
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4375": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5461,
        5493
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4376": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5461,
        5493
      ],
      "op": "SUB",
      "path": "10"
    },
    "4377": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5461,
        5493
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4378": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5461,
        5493
      ],
      "op": "LOG1",
      "path": "10"
    },
    "4379": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5525,
        5537
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 67,
      "value": "0x13"
    },
    "4381": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5538,
        5557
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4382": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5538,
        5557
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4383": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5538,
        5561
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x112A"
    },
    "4386": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5538,
        5561
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4387": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5560,
        5561
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "4389": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5560,
        5561
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4390": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5538,
        5561
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x280C"
    },
    "4393": {
      "fn": "Gauge.removeExtraReward",
      "jump": "i",
      "offset": [
        5538,
        5561
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4394": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5538,
        5561
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4395": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5525,
        5562
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4396": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5525,
        5562
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4397": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5525,
        5562
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4398": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5525,
        5562
      ],
      "op": "LT",
      "path": "10"
    },
    "4399": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5525,
        5562
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x113A"
    },
    "4402": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5525,
        5562
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4403": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5525,
        5562
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x113A"
    },
    "4406": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5525,
        5562
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2823"
    },
    "4409": {
      "fn": "Gauge.removeExtraReward",
      "jump": "i",
      "offset": [
        5525,
        5562
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4410": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5525,
        5562
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4411": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5525,
        5562
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4413": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5525,
        5562
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4414": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5525,
        5562
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4415": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5525,
        5562
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4416": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5525,
        5562
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4418": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5525,
        5562
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4419": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5525,
        5562
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4420": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5525,
        5562
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4421": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5525,
        5562
      ],
      "op": "ADD",
      "path": "10"
    },
    "4422": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5525,
        5562
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4423": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5503,
        5515
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x13"
    },
    "4425": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5503,
        5522
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4426": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5503,
        5522
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4431": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4433": {
      "op": "SHL"
    },
    "4434": {
      "op": "SUB"
    },
    "4435": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5525,
        5562
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4436": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5525,
        5562
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4437": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5525,
        5562
      ],
      "op": "AND",
      "path": "10"
    },
    "4438": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5525,
        5562
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4439": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5516,
        5521
      ],
      "op": "DUP5",
      "path": "10"
    },
    "4440": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5516,
        5521
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4441": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5503,
        5522
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4442": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5503,
        5522
      ],
      "op": "LT",
      "path": "10"
    },
    "4443": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5503,
        5522
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1166"
    },
    "4446": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5503,
        5522
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4447": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5503,
        5522
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1166"
    },
    "4450": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5503,
        5522
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2823"
    },
    "4453": {
      "fn": "Gauge.removeExtraReward",
      "jump": "i",
      "offset": [
        5503,
        5522
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4454": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5503,
        5522
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4455": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5503,
        5522
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4456": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5503,
        5522
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4458": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5503,
        5522
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4459": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5503,
        5522
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4461": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5503,
        5522
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4463": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5503,
        5522
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4464": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5503,
        5522
      ],
      "op": "ADD",
      "path": "10"
    },
    "4465": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5503,
        5522
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4467": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5503,
        5562
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "4470": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5503,
        5562
      ],
      "op": "EXP",
      "path": "10"
    },
    "4471": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5503,
        5562
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4472": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5503,
        5562
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4473": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5503,
        5562
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4478": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4480": {
      "op": "SHL"
    },
    "4481": {
      "op": "SUB"
    },
    "4482": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5503,
        5562
      ],
      "op": "MUL",
      "path": "10"
    },
    "4483": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5503,
        5562
      ],
      "op": "NOT",
      "path": "10"
    },
    "4484": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5503,
        5562
      ],
      "op": "AND",
      "path": "10"
    },
    "4485": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5503,
        5562
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4486": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5503,
        5562
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4491": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4493": {
      "op": "SHL"
    },
    "4494": {
      "op": "SUB"
    },
    "4495": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5503,
        5562
      ],
      "op": "AND",
      "path": "10"
    },
    "4496": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5503,
        5562
      ],
      "op": "MUL",
      "path": "10"
    },
    "4497": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5503,
        5562
      ],
      "op": "OR",
      "path": "10"
    },
    "4498": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5503,
        5562
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4499": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5503,
        5562
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4500": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5503,
        5562
      ],
      "op": "POP",
      "path": "10"
    },
    "4501": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5572,
        5584
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 68,
      "value": "0x13"
    },
    "4503": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5572,
        5590
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4504": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5572,
        5590
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4505": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5572,
        5590
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4506": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5572,
        5590
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11A5"
    },
    "4509": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5572,
        5590
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4510": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5572,
        5590
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11A5"
    },
    "4513": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5572,
        5590
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2854"
    },
    "4516": {
      "fn": "Gauge.removeExtraReward",
      "jump": "i",
      "offset": [
        5572,
        5590
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4517": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5572,
        5590
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4518": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5572,
        5590
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4520": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5572,
        5590
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4521": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5572,
        5590
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4522": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5572,
        5590
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4523": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5572,
        5590
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4525": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5572,
        5590
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4526": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5572,
        5590
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4527": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5572,
        5590
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4528": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5572,
        5590
      ],
      "op": "ADD",
      "path": "10"
    },
    "4529": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4531": {
      "op": "NOT"
    },
    "4532": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5572,
        5590
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4533": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5572,
        5590
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4534": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5572,
        5590
      ],
      "op": "ADD",
      "path": "10"
    },
    "4535": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5572,
        5590
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4536": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5572,
        5590
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4541": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4543": {
      "op": "SHL"
    },
    "4544": {
      "op": "SUB"
    },
    "4545": {
      "op": "NOT"
    },
    "4546": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5572,
        5590
      ],
      "op": "AND",
      "path": "10"
    },
    "4547": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5572,
        5590
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4548": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5572,
        5590
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4549": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5572,
        5590
      ],
      "op": "ADD",
      "path": "10"
    },
    "4550": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5572,
        5590
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4551": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5572,
        5590
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4552": {
      "op": "POP"
    },
    "4553": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5572,
        5590
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "4555": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        5572,
        5590
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "4556": {
      "fn": "Gauge.removeExtraReward",
      "offset": [
        4980,
        5618
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4557": {
      "op": "POP"
    },
    "4558": {
      "op": "POP"
    },
    "4559": {
      "op": "POP"
    },
    "4560": {
      "fn": "Gauge.removeExtraReward",
      "jump": "o",
      "offset": [
        4980,
        5618
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4561": {
      "fn": "Gauge.withdraw",
      "offset": [
        13689,
        13828
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4562": {
      "fn": "Gauge.withdraw",
      "offset": [
        13773,
        13783
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 69
    },
    "4563": {
      "fn": "Gauge.withdraw",
      "offset": [
        13738,
        13742
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4565": {
      "fn": "Gauge.withdraw",
      "offset": [
        13763,
        13784
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4566": {
      "fn": "Gauge.withdraw",
      "offset": [
        13763,
        13784
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4567": {
      "fn": "Gauge.withdraw",
      "offset": [
        13763,
        13784
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4568": {
      "fn": "Gauge.withdraw",
      "offset": [
        13763,
        13772
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x12"
    },
    "4570": {
      "fn": "Gauge.withdraw",
      "offset": [
        13763,
        13784
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4572": {
      "fn": "Gauge.withdraw",
      "offset": [
        13763,
        13784
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4573": {
      "fn": "Gauge.withdraw",
      "offset": [
        13763,
        13784
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4575": {
      "fn": "Gauge.withdraw",
      "offset": [
        13763,
        13784
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4576": {
      "fn": "Gauge.withdraw",
      "offset": [
        13763,
        13784
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4577": {
      "fn": "Gauge.withdraw",
      "offset": [
        13763,
        13784
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4578": {
      "fn": "Gauge.withdraw",
      "offset": [
        13754,
        13800
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA9B"
    },
    "4581": {
      "fn": "Gauge.withdraw",
      "offset": [
        13754,
        13800
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4582": {
      "fn": "Gauge.withdraw",
      "offset": [
        13786,
        13792
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4583": {
      "fn": "Gauge.withdraw",
      "offset": [
        13738,
        13742
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4584": {
      "fn": "Gauge.withdraw",
      "offset": [
        13754,
        13762
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE3B"
    },
    "4587": {
      "fn": "Gauge.withdraw",
      "jump": "i",
      "offset": [
        13754,
        13800
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4588": {
      "fn": "Gauge.deposit",
      "offset": [
        10280,
        10403
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4589": {
      "fn": "Gauge.deposit",
      "offset": [
        10330,
        10334
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4591": {
      "fn": "Gauge.deposit",
      "offset": [
        10346,
        10375
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 70,
      "value": "0x11F8"
    },
    "4594": {
      "fn": "Gauge.deposit",
      "offset": [
        10355,
        10365
      ],
      "op": "CALLER",
      "path": "10"
    },
    "4595": {
      "fn": "Gauge.deposit",
      "offset": [
        10367,
        10374
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4596": {
      "fn": "Gauge.deposit",
      "offset": [
        10346,
        10354
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1AC3"
    },
    "4599": {
      "fn": "Gauge.deposit",
      "jump": "i",
      "offset": [
        10346,
        10375
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4600": {
      "fn": "Gauge.deposit",
      "offset": [
        10346,
        10375
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4601": {
      "op": "POP"
    },
    "4602": {
      "fn": "Gauge.deposit",
      "offset": [
        10392,
        10396
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 71,
      "value": "0x1"
    },
    "4604": {
      "fn": "Gauge.deposit",
      "offset": [
        10392,
        10396
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4605": {
      "fn": "Gauge.deposit",
      "offset": [
        10280,
        10403
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4606": {
      "op": "POP"
    },
    "4607": {
      "fn": "Gauge.deposit",
      "jump": "o",
      "offset": [
        10280,
        10403
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4608": {
      "fn": "Gauge.initialize",
      "offset": [
        2684,
        3605
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4609": {
      "offset": [
        2358,
        2371
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4611": {
      "fn": "Gauge.initialize",
      "offset": [
        2358,
        2371
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4614": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4616": {
      "op": "SHL"
    },
    "4617": {
      "offset": [
        2358,
        2371
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4618": {
      "fn": "Gauge.initialize",
      "offset": [
        2358,
        2371
      ],
      "op": "DIV",
      "path": "1"
    },
    "4619": {
      "fn": "Gauge.initialize",
      "offset": [
        2358,
        2371
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "4621": {
      "branch": 177,
      "fn": "Gauge.initialize",
      "offset": [
        2358,
        2371
      ],
      "op": "AND",
      "path": "1"
    },
    "4622": {
      "offset": [
        2358,
        2406
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1224"
    },
    "4625": {
      "branch": 177,
      "fn": "Gauge.initialize",
      "offset": [
        2358,
        2406
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4626": {
      "offset": [
        2394,
        2406
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4628": {
      "fn": "Gauge.initialize",
      "offset": [
        2394,
        2406
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4631": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4633": {
      "op": "SHL"
    },
    "4634": {
      "offset": [
        2394,
        2406
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4635": {
      "fn": "Gauge.initialize",
      "offset": [
        2394,
        2406
      ],
      "op": "DIV",
      "path": "1"
    },
    "4636": {
      "fn": "Gauge.initialize",
      "offset": [
        2394,
        2406
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "4638": {
      "fn": "Gauge.initialize",
      "offset": [
        2394,
        2406
      ],
      "op": "AND",
      "path": "1"
    },
    "4639": {
      "offset": [
        2393,
        2406
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4640": {
      "offset": [
        2358,
        2406
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1228"
    },
    "4643": {
      "fn": "Gauge.initialize",
      "offset": [
        2358,
        2406
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4644": {
      "branch": 178,
      "fn": "Gauge.initialize",
      "offset": [
        2358,
        2406
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4645": {
      "fn": "Initializable._isConstructor",
      "offset": [
        3125,
        3129
      ],
      "op": "ADDRESS",
      "path": "1",
      "statement": 72
    },
    "4646": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "EXTCODESIZE",
      "path": "6",
      "statement": 73
    },
    "4647": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1488
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "4648": {
      "offset": [
        2374,
        2390
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4649": {
      "offset": [
        2350,
        2457
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x128B"
    },
    "4652": {
      "branch": 178,
      "offset": [
        2350,
        2457
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4653": {
      "fn": "Address.isContract",
      "offset": [
        2350,
        2457
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4655": {
      "fn": "Address.isContract",
      "offset": [
        2350,
        2457
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4656": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4660": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4662": {
      "op": "SHL"
    },
    "4663": {
      "offset": [
        2350,
        2457
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4664": {
      "fn": "Address.isContract",
      "offset": [
        2350,
        2457
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4665": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4667": {
      "offset": [
        2350,
        2457
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4669": {
      "fn": "Address.isContract",
      "offset": [
        2350,
        2457
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4670": {
      "fn": "Address.isContract",
      "offset": [
        2350,
        2457
      ],
      "op": "ADD",
      "path": "1"
    },
    "4671": {
      "op": "MSTORE"
    },
    "4672": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "4674": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4676": {
      "op": "DUP3"
    },
    "4677": {
      "op": "ADD"
    },
    "4678": {
      "op": "MSTORE"
    },
    "4679": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "4712": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4714": {
      "op": "DUP3"
    },
    "4715": {
      "op": "ADD"
    },
    "4716": {
      "op": "MSTORE"
    },
    "4717": {
      "op": "PUSH14",
      "value": "0x191E481A5B9A5D1A585B1A5E9959"
    },
    "4732": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "4734": {
      "op": "SHL"
    },
    "4735": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4737": {
      "op": "DUP3"
    },
    "4738": {
      "op": "ADD"
    },
    "4739": {
      "op": "MSTORE"
    },
    "4740": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4742": {
      "op": "ADD"
    },
    "4743": {
      "offset": [
        2350,
        2457
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6FB"
    },
    "4746": {
      "op": "JUMP"
    },
    "4747": {
      "offset": [
        2350,
        2457
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4748": {
      "offset": [
        2468,
        2487
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4750": {
      "offset": [
        2491,
        2504
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4753": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4755": {
      "op": "SHL"
    },
    "4756": {
      "offset": [
        2491,
        2504
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4757": {
      "fn": "Address.isContract",
      "offset": [
        2491,
        2504
      ],
      "op": "DIV",
      "path": "1"
    },
    "4758": {
      "fn": "Address.isContract",
      "offset": [
        2491,
        2504
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "4760": {
      "fn": "Address.isContract",
      "offset": [
        2491,
        2504
      ],
      "op": "AND",
      "path": "1"
    },
    "4761": {
      "offset": [
        2490,
        2504
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4762": {
      "offset": [
        2514,
        2612
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4763": {
      "fn": "Address.isContract",
      "offset": [
        2514,
        2612
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4764": {
      "fn": "Address.isContract",
      "offset": [
        2514,
        2612
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12B5"
    },
    "4767": {
      "fn": "Address.isContract",
      "offset": [
        2514,
        2612
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4768": {
      "offset": [
        2548,
        2561
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4770": {
      "offset": [
        2548,
        2568
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4771": {
      "fn": "Address.isContract",
      "offset": [
        2548,
        2568
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4772": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "4775": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4777": {
      "op": "SHL"
    },
    "4778": {
      "op": "NOT"
    },
    "4779": {
      "offset": [
        2582,
        2601
      ],
      "op": "AND",
      "path": "1"
    },
    "4780": {
      "op": "PUSH2",
      "value": "0x101"
    },
    "4783": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4785": {
      "op": "SHL"
    },
    "4786": {
      "offset": [
        2582,
        2601
      ],
      "op": "OR",
      "path": "1"
    },
    "4787": {
      "fn": "Address.isContract",
      "offset": [
        2582,
        2601
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4788": {
      "fn": "Address.isContract",
      "offset": [
        2582,
        2601
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4789": {
      "offset": [
        2514,
        2612
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4794": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4796": {
      "op": "SHL"
    },
    "4797": {
      "op": "SUB"
    },
    "4798": {
      "fn": "Gauge.initialize",
      "offset": [
        2934,
        2972
      ],
      "op": "DUP8",
      "path": "10",
      "statement": 74
    },
    "4799": {
      "branch": 155,
      "fn": "Gauge.initialize",
      "offset": [
        2934,
        2972
      ],
      "op": "AND",
      "path": "10"
    },
    "4800": {
      "fn": "Gauge.initialize",
      "offset": [
        2913,
        3023
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x130B"
    },
    "4803": {
      "branch": 155,
      "fn": "Gauge.initialize",
      "offset": [
        2913,
        3023
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4804": {
      "fn": "Gauge.initialize",
      "offset": [
        2913,
        3023
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4806": {
      "fn": "Gauge.initialize",
      "offset": [
        2913,
        3023
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4807": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4811": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4813": {
      "op": "SHL"
    },
    "4814": {
      "fn": "Gauge.initialize",
      "offset": [
        2913,
        3023
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4815": {
      "fn": "Gauge.initialize",
      "offset": [
        2913,
        3023
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4816": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4818": {
      "fn": "Gauge.initialize",
      "offset": [
        2913,
        3023
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4820": {
      "fn": "Gauge.initialize",
      "offset": [
        2913,
        3023
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4821": {
      "fn": "Gauge.initialize",
      "offset": [
        2913,
        3023
      ],
      "op": "ADD",
      "path": "10"
    },
    "4822": {
      "op": "MSTORE"
    },
    "4823": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4825": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4827": {
      "op": "DUP3"
    },
    "4828": {
      "op": "ADD"
    },
    "4829": {
      "op": "MSTORE"
    },
    "4830": {
      "op": "PUSH32",
      "value": "0x5F7374616B696E67546F6B656E20307830206164647265737300000000000000"
    },
    "4863": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4865": {
      "op": "DUP3"
    },
    "4866": {
      "op": "ADD"
    },
    "4867": {
      "op": "MSTORE"
    },
    "4868": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4870": {
      "op": "ADD"
    },
    "4871": {
      "fn": "Gauge.initialize",
      "offset": [
        2913,
        3023
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6FB"
    },
    "4874": {
      "op": "JUMP"
    },
    "4875": {
      "fn": "Gauge.initialize",
      "offset": [
        2913,
        3023
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4880": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4882": {
      "op": "SHL"
    },
    "4883": {
      "op": "SUB"
    },
    "4884": {
      "fn": "Gauge.initialize",
      "offset": [
        3041,
        3069
      ],
      "op": "DUP4",
      "path": "10",
      "statement": 75
    },
    "4885": {
      "branch": 156,
      "fn": "Gauge.initialize",
      "offset": [
        3041,
        3069
      ],
      "op": "AND",
      "path": "10"
    },
    "4886": {
      "fn": "Gauge.initialize",
      "offset": [
        3033,
        3089
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1353"
    },
    "4889": {
      "branch": 156,
      "fn": "Gauge.initialize",
      "offset": [
        3033,
        3089
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4890": {
      "fn": "Gauge.initialize",
      "offset": [
        3033,
        3089
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4892": {
      "fn": "Gauge.initialize",
      "offset": [
        3033,
        3089
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4893": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4897": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4899": {
      "op": "SHL"
    },
    "4900": {
      "fn": "Gauge.initialize",
      "offset": [
        3033,
        3089
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4901": {
      "fn": "Gauge.initialize",
      "offset": [
        3033,
        3089
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4902": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4904": {
      "fn": "Gauge.initialize",
      "offset": [
        3033,
        3089
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4906": {
      "fn": "Gauge.initialize",
      "offset": [
        3033,
        3089
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4907": {
      "fn": "Gauge.initialize",
      "offset": [
        3033,
        3089
      ],
      "op": "ADD",
      "path": "10"
    },
    "4908": {
      "op": "MSTORE"
    },
    "4909": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "4911": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4913": {
      "op": "DUP3"
    },
    "4914": {
      "op": "ADD"
    },
    "4915": {
      "op": "MSTORE"
    },
    "4916": {
      "op": "PUSH15",
      "value": "0x5F7665203078302061646472657373"
    },
    "4932": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "4934": {
      "op": "SHL"
    },
    "4935": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4937": {
      "op": "DUP3"
    },
    "4938": {
      "op": "ADD"
    },
    "4939": {
      "op": "MSTORE"
    },
    "4940": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4942": {
      "op": "ADD"
    },
    "4943": {
      "fn": "Gauge.initialize",
      "offset": [
        3033,
        3089
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6FB"
    },
    "4946": {
      "op": "JUMP"
    },
    "4947": {
      "fn": "Gauge.initialize",
      "offset": [
        3033,
        3089
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4952": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4954": {
      "op": "SHL"
    },
    "4955": {
      "op": "SUB"
    },
    "4956": {
      "fn": "Gauge.initialize",
      "offset": [
        3120,
        3161
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 76
    },
    "4957": {
      "branch": 157,
      "fn": "Gauge.initialize",
      "offset": [
        3120,
        3161
      ],
      "op": "AND",
      "path": "10"
    },
    "4958": {
      "fn": "Gauge.initialize",
      "offset": [
        3099,
        3215
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x13A9"
    },
    "4961": {
      "branch": 157,
      "fn": "Gauge.initialize",
      "offset": [
        3099,
        3215
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4962": {
      "fn": "Gauge.initialize",
      "offset": [
        3099,
        3215
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4964": {
      "fn": "Gauge.initialize",
      "offset": [
        3099,
        3215
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4965": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4969": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4971": {
      "op": "SHL"
    },
    "4972": {
      "fn": "Gauge.initialize",
      "offset": [
        3099,
        3215
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4973": {
      "fn": "Gauge.initialize",
      "offset": [
        3099,
        3215
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4974": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4976": {
      "fn": "Gauge.initialize",
      "offset": [
        3099,
        3215
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4978": {
      "fn": "Gauge.initialize",
      "offset": [
        3099,
        3215
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4979": {
      "fn": "Gauge.initialize",
      "offset": [
        3099,
        3215
      ],
      "op": "ADD",
      "path": "10"
    },
    "4980": {
      "op": "MSTORE"
    },
    "4981": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "4983": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4985": {
      "op": "DUP3"
    },
    "4986": {
      "op": "ADD"
    },
    "4987": {
      "op": "MSTORE"
    },
    "4988": {
      "op": "PUSH32",
      "value": "0x5F7665596669526577617264506F6F6C20307830206164647265737300000000"
    },
    "5021": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5023": {
      "op": "DUP3"
    },
    "5024": {
      "op": "ADD"
    },
    "5025": {
      "op": "MSTORE"
    },
    "5026": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5028": {
      "op": "ADD"
    },
    "5029": {
      "fn": "Gauge.initialize",
      "offset": [
        3099,
        3215
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6FB"
    },
    "5032": {
      "op": "JUMP"
    },
    "5033": {
      "fn": "Gauge.initialize",
      "offset": [
        3099,
        3215
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5034": {
      "fn": "Gauge.initialize",
      "offset": [
        3226,
        3260
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 77,
      "value": "0x13B3"
    },
    "5037": {
      "fn": "Gauge.initialize",
      "offset": [
        3239,
        3251
      ],
      "op": "DUP7",
      "path": "10"
    },
    "5038": {
      "fn": "Gauge.initialize",
      "offset": [
        3253,
        3259
      ],
      "op": "DUP7",
      "path": "10"
    },
    "5039": {
      "fn": "Gauge.initialize",
      "offset": [
        3226,
        3238
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x21BD"
    },
    "5042": {
      "fn": "Gauge.initialize",
      "jump": "i",
      "offset": [
        3226,
        3260
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5043": {
      "fn": "Gauge.initialize",
      "offset": [
        3226,
        3260
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5044": {
      "fn": "Gauge.initialize",
      "offset": [
        3270,
        3282
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 78,
      "value": "0xC"
    },
    "5046": {
      "fn": "Gauge.initialize",
      "offset": [
        3270,
        3306
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5047": {
      "fn": "Gauge.initialize",
      "offset": [
        3270,
        3306
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5052": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5054": {
      "op": "SHL"
    },
    "5055": {
      "op": "SUB"
    },
    "5056": {
      "fn": "Gauge.initialize",
      "offset": [
        3270,
        3306
      ],
      "op": "DUP10",
      "path": "10"
    },
    "5057": {
      "fn": "Gauge.initialize",
      "offset": [
        3270,
        3306
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5058": {
      "fn": "Gauge.initialize",
      "offset": [
        3270,
        3306
      ],
      "op": "AND",
      "path": "10"
    },
    "5059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5063": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5065": {
      "op": "SHL"
    },
    "5066": {
      "op": "SUB"
    },
    "5067": {
      "op": "NOT"
    },
    "5068": {
      "fn": "Gauge.initialize",
      "offset": [
        3270,
        3306
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "5069": {
      "fn": "Gauge.initialize",
      "offset": [
        3270,
        3306
      ],
      "op": "DUP4",
      "path": "10"
    },
    "5070": {
      "fn": "Gauge.initialize",
      "offset": [
        3270,
        3306
      ],
      "op": "AND",
      "path": "10"
    },
    "5071": {
      "fn": "Gauge.initialize",
      "offset": [
        3270,
        3306
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5072": {
      "fn": "Gauge.initialize",
      "offset": [
        3270,
        3306
      ],
      "op": "OR",
      "path": "10"
    },
    "5073": {
      "fn": "Gauge.initialize",
      "offset": [
        3270,
        3306
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5074": {
      "fn": "Gauge.initialize",
      "offset": [
        3270,
        3306
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "5075": {
      "fn": "Gauge.initialize",
      "offset": [
        3270,
        3306
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "5076": {
      "fn": "Gauge.initialize",
      "offset": [
        3316,
        3323
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 79,
      "value": "0xD"
    },
    "5078": {
      "fn": "Gauge.initialize",
      "offset": [
        3316,
        3329
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5079": {
      "fn": "Gauge.initialize",
      "offset": [
        3316,
        3329
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5080": {
      "fn": "Gauge.initialize",
      "offset": [
        3316,
        3329
      ],
      "op": "DUP8",
      "path": "10"
    },
    "5081": {
      "fn": "Gauge.initialize",
      "offset": [
        3316,
        3329
      ],
      "op": "DUP4",
      "path": "10"
    },
    "5082": {
      "fn": "Gauge.initialize",
      "offset": [
        3316,
        3329
      ],
      "op": "AND",
      "path": "10"
    },
    "5083": {
      "fn": "Gauge.initialize",
      "offset": [
        3316,
        3329
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5084": {
      "fn": "Gauge.initialize",
      "offset": [
        3316,
        3329
      ],
      "op": "DUP5",
      "path": "10"
    },
    "5085": {
      "fn": "Gauge.initialize",
      "offset": [
        3316,
        3329
      ],
      "op": "AND",
      "path": "10"
    },
    "5086": {
      "fn": "Gauge.initialize",
      "offset": [
        3316,
        3329
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5087": {
      "fn": "Gauge.initialize",
      "offset": [
        3316,
        3329
      ],
      "op": "OR",
      "path": "10"
    },
    "5088": {
      "fn": "Gauge.initialize",
      "offset": [
        3316,
        3329
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5089": {
      "fn": "Gauge.initialize",
      "offset": [
        3316,
        3329
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5090": {
      "fn": "Gauge.initialize",
      "offset": [
        3316,
        3329
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "5091": {
      "fn": "Gauge.initialize",
      "offset": [
        3339,
        3352
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 80,
      "value": "0xF"
    },
    "5093": {
      "fn": "Gauge.initialize",
      "offset": [
        3339,
        3369
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5094": {
      "fn": "Gauge.initialize",
      "offset": [
        3339,
        3369
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5095": {
      "fn": "Gauge.initialize",
      "offset": [
        3339,
        3369
      ],
      "op": "DUP10",
      "path": "10"
    },
    "5096": {
      "fn": "Gauge.initialize",
      "offset": [
        3339,
        3369
      ],
      "op": "DUP5",
      "path": "10"
    },
    "5097": {
      "fn": "Gauge.initialize",
      "offset": [
        3339,
        3369
      ],
      "op": "AND",
      "path": "10"
    },
    "5098": {
      "fn": "Gauge.initialize",
      "offset": [
        3339,
        3369
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5099": {
      "fn": "Gauge.initialize",
      "offset": [
        3339,
        3369
      ],
      "op": "DUP6",
      "path": "10"
    },
    "5100": {
      "fn": "Gauge.initialize",
      "offset": [
        3339,
        3369
      ],
      "op": "AND",
      "path": "10"
    },
    "5101": {
      "fn": "Gauge.initialize",
      "offset": [
        3339,
        3369
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5102": {
      "fn": "Gauge.initialize",
      "offset": [
        3339,
        3369
      ],
      "op": "OR",
      "path": "10"
    },
    "5103": {
      "fn": "Gauge.initialize",
      "offset": [
        3339,
        3369
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5104": {
      "fn": "Gauge.initialize",
      "offset": [
        3339,
        3369
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5105": {
      "fn": "Gauge.initialize",
      "offset": [
        3339,
        3369
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "5106": {
      "fn": "Gauge.initialize",
      "offset": [
        3379,
        3394
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 81,
      "value": "0xE"
    },
    "5108": {
      "fn": "Gauge.initialize",
      "offset": [
        3379,
        3413
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5109": {
      "fn": "Gauge.initialize",
      "offset": [
        3379,
        3413
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5110": {
      "fn": "Gauge.initialize",
      "offset": [
        3379,
        3413
      ],
      "op": "DUP9",
      "path": "10"
    },
    "5111": {
      "fn": "Gauge.initialize",
      "offset": [
        3379,
        3413
      ],
      "op": "DUP6",
      "path": "10"
    },
    "5112": {
      "fn": "Gauge.initialize",
      "offset": [
        3379,
        3413
      ],
      "op": "AND",
      "path": "10"
    },
    "5113": {
      "fn": "Gauge.initialize",
      "offset": [
        3379,
        3413
      ],
      "op": "SWAP6",
      "path": "10"
    },
    "5114": {
      "fn": "Gauge.initialize",
      "offset": [
        3379,
        3413
      ],
      "op": "AND",
      "path": "10"
    },
    "5115": {
      "fn": "Gauge.initialize",
      "offset": [
        3379,
        3413
      ],
      "op": "DUP6",
      "path": "10"
    },
    "5116": {
      "fn": "Gauge.initialize",
      "offset": [
        3379,
        3413
      ],
      "op": "OR",
      "path": "10"
    },
    "5117": {
      "fn": "Gauge.initialize",
      "offset": [
        3379,
        3413
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5118": {
      "fn": "Gauge.initialize",
      "offset": [
        3379,
        3413
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "5119": {
      "fn": "Gauge.initialize",
      "offset": [
        3429,
        3598
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 82,
      "value": "0x40"
    },
    "5121": {
      "fn": "Gauge.initialize",
      "offset": [
        3429,
        3598
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5122": {
      "fn": "Gauge.initialize",
      "offset": [
        3429,
        3598
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5123": {
      "op": "SWAP6"
    },
    "5124": {
      "op": "DUP7"
    },
    "5125": {
      "op": "MSTORE"
    },
    "5126": {
      "op": "DUP12"
    },
    "5127": {
      "op": "DUP5"
    },
    "5128": {
      "op": "AND"
    },
    "5129": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5131": {
      "op": "DUP8"
    },
    "5132": {
      "op": "ADD"
    },
    "5133": {
      "op": "MSTORE"
    },
    "5134": {
      "op": "SWAP3"
    },
    "5135": {
      "op": "DUP11"
    },
    "5136": {
      "op": "AND"
    },
    "5137": {
      "op": "SWAP3"
    },
    "5138": {
      "op": "DUP6"
    },
    "5139": {
      "op": "ADD"
    },
    "5140": {
      "op": "SWAP3"
    },
    "5141": {
      "op": "SWAP1"
    },
    "5142": {
      "op": "SWAP3"
    },
    "5143": {
      "op": "MSTORE"
    },
    "5144": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5146": {
      "op": "DUP5"
    },
    "5147": {
      "op": "ADD"
    },
    "5148": {
      "op": "SWAP2"
    },
    "5149": {
      "op": "SWAP1"
    },
    "5150": {
      "op": "SWAP2"
    },
    "5151": {
      "op": "MSTORE"
    },
    "5152": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5154": {
      "op": "DUP4"
    },
    "5155": {
      "op": "ADD"
    },
    "5156": {
      "op": "MSTORE"
    },
    "5157": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5159": {
      "op": "DUP3"
    },
    "5160": {
      "op": "ADD"
    },
    "5161": {
      "op": "MSTORE"
    },
    "5162": {
      "fn": "Gauge.initialize",
      "offset": [
        3429,
        3598
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x58CA036ED94EE2B2004ADAC9F54A88961A882010564179AEFA6106F7977102A9"
    },
    "5195": {
      "fn": "Gauge.initialize",
      "offset": [
        3429,
        3598
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5196": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5198": {
      "op": "ADD"
    },
    "5199": {
      "fn": "Gauge.initialize",
      "offset": [
        3429,
        3598
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5201": {
      "fn": "Gauge.initialize",
      "offset": [
        3429,
        3598
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5202": {
      "fn": "Gauge.initialize",
      "offset": [
        3429,
        3598
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5203": {
      "fn": "Gauge.initialize",
      "offset": [
        3429,
        3598
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5204": {
      "fn": "Gauge.initialize",
      "offset": [
        3429,
        3598
      ],
      "op": "SUB",
      "path": "10"
    },
    "5205": {
      "fn": "Gauge.initialize",
      "offset": [
        3429,
        3598
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5206": {
      "fn": "Gauge.initialize",
      "offset": [
        3429,
        3598
      ],
      "op": "LOG1",
      "path": "10"
    },
    "5207": {
      "offset": [
        2638,
        2652
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5208": {
      "offset": [
        2634,
        2700
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5209": {
      "fn": "Gauge.initialize",
      "offset": [
        2634,
        2700
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x146A"
    },
    "5212": {
      "offset": [
        2634,
        2700
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5213": {
      "offset": [
        2684,
        2689
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5215": {
      "offset": [
        2668,
        2689
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5216": {
      "fn": "Gauge.initialize",
      "offset": [
        2668,
        2689
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5217": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5219": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "5221": {
      "op": "SHL"
    },
    "5222": {
      "op": "NOT"
    },
    "5223": {
      "offset": [
        2668,
        2689
      ],
      "op": "AND",
      "path": "1"
    },
    "5224": {
      "fn": "Gauge.initialize",
      "offset": [
        2668,
        2689
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5225": {
      "fn": "Gauge.initialize",
      "offset": [
        2668,
        2689
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5226": {
      "offset": [
        2634,
        2700
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5227": {
      "offset": [
        2069,
        2706
      ],
      "op": "POP",
      "path": "1"
    },
    "5228": {
      "fn": "Gauge.initialize",
      "offset": [
        2684,
        3605
      ],
      "op": "POP",
      "path": "10"
    },
    "5229": {
      "fn": "Gauge.initialize",
      "offset": [
        2684,
        3605
      ],
      "op": "POP",
      "path": "10"
    },
    "5230": {
      "fn": "Gauge.initialize",
      "offset": [
        2684,
        3605
      ],
      "op": "POP",
      "path": "10"
    },
    "5231": {
      "fn": "Gauge.initialize",
      "offset": [
        2684,
        3605
      ],
      "op": "POP",
      "path": "10"
    },
    "5232": {
      "fn": "Gauge.initialize",
      "offset": [
        2684,
        3605
      ],
      "op": "POP",
      "path": "10"
    },
    "5233": {
      "fn": "Gauge.initialize",
      "offset": [
        2684,
        3605
      ],
      "op": "POP",
      "path": "10"
    },
    "5234": {
      "fn": "Gauge.initialize",
      "jump": "o",
      "offset": [
        2684,
        3605
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5235": {
      "fn": "BaseGauge.rewardPerToken",
      "offset": [
        3155,
        3254
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5236": {
      "fn": "BaseGauge.rewardPerToken",
      "offset": [
        3204,
        3211
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "5238": {
      "fn": "BaseGauge.rewardPerToken",
      "offset": [
        3230,
        3247
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 83,
      "value": "0xE36"
    },
    "5241": {
      "fn": "BaseGauge.rewardPerToken",
      "offset": [
        3230,
        3245
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2242"
    },
    "5244": {
      "fn": "BaseGauge.rewardPerToken",
      "jump": "i",
      "offset": [
        3230,
        3247
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5245": {
      "fn": "Gauge.deposit",
      "offset": [
        10668,
        10935
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5246": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10773
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xC"
    },
    "5248": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10773
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5249": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5251": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5252": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "5257": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5259": {
      "op": "SHL"
    },
    "5260": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5261": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5262": {
      "fn": "Gauge.deposit",
      "offset": [
        10784,
        10794
      ],
      "op": "CALLER",
      "path": "10"
    },
    "5263": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "5265": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5266": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "ADD",
      "path": "10"
    },
    "5267": {
      "op": "MSTORE"
    },
    "5268": {
      "fn": "Gauge.deposit",
      "offset": [
        10705,
        10709
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5270": {
      "fn": "Gauge.deposit",
      "offset": [
        10705,
        10709
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5271": {
      "fn": "Gauge.deposit",
      "offset": [
        10705,
        10709
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5272": {
      "fn": "Gauge.deposit",
      "offset": [
        10705,
        10709
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5273": {
      "fn": "Gauge.deposit",
      "offset": [
        10739,
        10868
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1567"
    },
    "5276": {
      "fn": "Gauge.deposit",
      "offset": [
        10739,
        10868
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5281": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5283": {
      "op": "SHL"
    },
    "5284": {
      "op": "SUB"
    },
    "5285": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10773
      ],
      "op": "AND",
      "path": "10"
    },
    "5286": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10773
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5287": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10783
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x70A08231"
    },
    "5292": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10783
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5293": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5295": {
      "op": "ADD"
    },
    "5296": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5298": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5300": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5301": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5302": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "DUP4",
      "path": "10"
    },
    "5303": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "SUB",
      "path": "10"
    },
    "5304": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5305": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "DUP7",
      "path": "10"
    },
    "5306": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "GAS",
      "path": "10"
    },
    "5307": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "STATICCALL",
      "path": "10"
    },
    "5308": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "5309": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5310": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "5311": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14CC"
    },
    "5314": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5315": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "5316": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5318": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5319": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "5320": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "5321": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5323": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "REVERT",
      "path": "10"
    },
    "5324": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5325": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "POP",
      "path": "10"
    },
    "5326": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "POP",
      "path": "10"
    },
    "5327": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "POP",
      "path": "10"
    },
    "5328": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "POP",
      "path": "10"
    },
    "5329": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5331": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5332": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "5333": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "5335": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "NOT",
      "path": "10"
    },
    "5336": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "5338": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5339": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "ADD",
      "path": "10"
    },
    "5340": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "AND",
      "path": "10"
    },
    "5341": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5342": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "ADD",
      "path": "10"
    },
    "5343": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5344": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5346": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5347": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "POP",
      "path": "10"
    },
    "5348": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5349": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "ADD",
      "path": "10"
    },
    "5350": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5351": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14F0"
    },
    "5354": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5355": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5356": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2761"
    },
    "5359": {
      "fn": "Gauge.deposit",
      "jump": "i",
      "offset": [
        10761,
        10795
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5360": {
      "fn": "Gauge.deposit",
      "offset": [
        10761,
        10795
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5361": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10821
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xC"
    },
    "5363": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10821
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5364": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5366": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5367": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "5372": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "5374": {
      "op": "SHL"
    },
    "5375": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5376": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5377": {
      "fn": "Gauge.deposit",
      "offset": [
        10832,
        10842
      ],
      "op": "CALLER",
      "path": "10"
    },
    "5378": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "5380": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5381": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "ADD",
      "path": "10"
    },
    "5382": {
      "op": "MSTORE"
    },
    "5383": {
      "fn": "Gauge.deposit",
      "offset": [
        10852,
        10856
      ],
      "op": "ADDRESS",
      "path": "10"
    },
    "5384": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5386": {
      "op": "DUP3"
    },
    "5387": {
      "op": "ADD"
    },
    "5388": {
      "op": "MSTORE"
    },
    "5389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5393": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5395": {
      "op": "SHL"
    },
    "5396": {
      "op": "SUB"
    },
    "5397": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10821
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5398": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10821
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5399": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10821
      ],
      "op": "AND",
      "path": "10"
    },
    "5400": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10821
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5401": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10831
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xDD62ED3E"
    },
    "5406": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10831
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5407": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5409": {
      "op": "ADD"
    },
    "5410": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5412": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5414": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5415": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5416": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "DUP4",
      "path": "10"
    },
    "5417": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "SUB",
      "path": "10"
    },
    "5418": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5419": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "DUP7",
      "path": "10"
    },
    "5420": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "GAS",
      "path": "10"
    },
    "5421": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "STATICCALL",
      "path": "10"
    },
    "5422": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "5423": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5424": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "5425": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x153E"
    },
    "5428": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5429": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "5430": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5432": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5433": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "5434": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "5435": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5437": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "REVERT",
      "path": "10"
    },
    "5438": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5439": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "POP",
      "path": "10"
    },
    "5440": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "POP",
      "path": "10"
    },
    "5441": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "POP",
      "path": "10"
    },
    "5442": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "POP",
      "path": "10"
    },
    "5443": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5445": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5446": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "5447": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "5449": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "NOT",
      "path": "10"
    },
    "5450": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "5452": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5453": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "ADD",
      "path": "10"
    },
    "5454": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "AND",
      "path": "10"
    },
    "5455": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5456": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "ADD",
      "path": "10"
    },
    "5457": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5458": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5460": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5461": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "POP",
      "path": "10"
    },
    "5462": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5463": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "ADD",
      "path": "10"
    },
    "5464": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5465": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1562"
    },
    "5468": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5469": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5470": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2761"
    },
    "5473": {
      "fn": "Gauge.deposit",
      "jump": "i",
      "offset": [
        10809,
        10858
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5474": {
      "fn": "Gauge.deposit",
      "offset": [
        10809,
        10858
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5475": {
      "fn": "Gauge.deposit",
      "offset": [
        10739,
        10747
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x21A7"
    },
    "5478": {
      "fn": "Gauge.deposit",
      "jump": "i",
      "offset": [
        10739,
        10868
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5479": {
      "fn": "Gauge.deposit",
      "offset": [
        10739,
        10868
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5480": {
      "fn": "Gauge.deposit",
      "offset": [
        10721,
        10868
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5481": {
      "fn": "Gauge.deposit",
      "offset": [
        10721,
        10868
      ],
      "op": "POP",
      "path": "10"
    },
    "5482": {
      "fn": "Gauge.deposit",
      "offset": [
        10878,
        10907
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 84,
      "value": "0xAE0"
    },
    "5485": {
      "fn": "Gauge.deposit",
      "offset": [
        10887,
        10897
      ],
      "op": "CALLER",
      "path": "10"
    },
    "5486": {
      "fn": "Gauge.deposit",
      "offset": [
        10899,
        10906
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5487": {
      "fn": "Gauge.deposit",
      "offset": [
        10878,
        10886
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1AC3"
    },
    "5490": {
      "fn": "Gauge.deposit",
      "jump": "i",
      "offset": [
        10878,
        10907
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5491": {
      "fn": "Gauge.lockingRatio",
      "offset": [
        7195,
        7312
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5492": {
      "fn": "Gauge.lockingRatio",
      "offset": [
        7257,
        7264
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5494": {
      "fn": "Gauge.lockingRatio",
      "offset": [
        7283,
        7305
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 85,
      "value": "0x98D"
    },
    "5497": {
      "fn": "Gauge.lockingRatio",
      "offset": [
        7297,
        7304
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5498": {
      "fn": "Gauge.lockingRatio",
      "offset": [
        7283,
        7296
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x173D"
    },
    "5501": {
      "fn": "Gauge.lockingRatio",
      "jump": "i",
      "offset": [
        7283,
        7305
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5502": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5503": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5505": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5510": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5512": {
      "op": "SHL"
    },
    "5513": {
      "op": "SUB"
    },
    "5514": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5515": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "7"
    },
    "5516": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5517": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15A8"
    },
    "5520": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5521": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5523": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5524": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5528": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5530": {
      "op": "SHL"
    },
    "5531": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5532": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5533": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5535": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5536": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6FB"
    },
    "5539": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5540": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x272C"
    },
    "5543": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5544": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5549": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5551": {
      "op": "SHL"
    },
    "5552": {
      "op": "SUB"
    },
    "5553": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 86
    },
    "5554": {
      "branch": 180,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "5555": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x160D"
    },
    "5558": {
      "branch": 180,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5559": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5561": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5562": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5566": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5568": {
      "op": "SHL"
    },
    "5569": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5570": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5571": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5573": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5575": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5576": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "5577": {
      "op": "MSTORE"
    },
    "5578": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "5580": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5582": {
      "op": "DUP3"
    },
    "5583": {
      "op": "ADD"
    },
    "5584": {
      "op": "MSTORE"
    },
    "5585": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "5618": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5620": {
      "op": "DUP3"
    },
    "5621": {
      "op": "ADD"
    },
    "5622": {
      "op": "MSTORE"
    },
    "5623": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "5630": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "5632": {
      "op": "SHL"
    },
    "5633": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5635": {
      "op": "DUP3"
    },
    "5636": {
      "op": "ADD"
    },
    "5637": {
      "op": "MSTORE"
    },
    "5638": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5640": {
      "op": "ADD"
    },
    "5641": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6FB"
    },
    "5644": {
      "op": "JUMP"
    },
    "5645": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5646": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 87,
      "value": "0x1616"
    },
    "5649": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5650": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2157"
    },
    "5653": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5654": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5655": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "5656": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5657": {
      "fn": "Gauge.getRewardFor",
      "offset": [
        15310,
        15523
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5658": {
      "fn": "Gauge.getRewardFor",
      "offset": [
        15434,
        15438
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5660": {
      "fn": "Gauge.getRewardFor",
      "offset": [
        15407,
        15415
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5661": {
      "offset": [
        1972,
        1994
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1625"
    },
    "5664": {
      "offset": [
        1986,
        1993
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5665": {
      "offset": [
        1972,
        1985
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1C76"
    },
    "5668": {
      "jump": "i",
      "offset": [
        1972,
        1994
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5669": {
      "fn": "Gauge.getRewardFor",
      "offset": [
        1972,
        1994
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5670": {
      "fn": "Gauge.getRewardFor",
      "offset": [
        15454,
        15495
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 88,
      "value": "0xB2A"
    },
    "5673": {
      "fn": "Gauge.getRewardFor",
      "offset": [
        15465,
        15473
      ],
      "op": "DUP5",
      "path": "10"
    },
    "5674": {
      "fn": "Gauge.getRewardFor",
      "offset": [
        15475,
        15480
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5676": {
      "fn": "Gauge.getRewardFor",
      "offset": [
        15482,
        15494
      ],
      "op": "DUP6",
      "path": "10"
    },
    "5677": {
      "fn": "Gauge.getRewardFor",
      "offset": [
        15454,
        15464
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1DF3"
    },
    "5680": {
      "fn": "Gauge.getRewardFor",
      "jump": "i",
      "offset": [
        15454,
        15495
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5681": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2325,
        2757
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5682": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5684": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5689": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5691": {
      "op": "SHL"
    },
    "5692": {
      "op": "SUB"
    },
    "5693": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5694": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "7"
    },
    "5695": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5696": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x165B"
    },
    "5699": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5700": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5702": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5703": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5707": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5709": {
      "op": "SHL"
    },
    "5710": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5711": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5712": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5714": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5715": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6FB"
    },
    "5718": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5719": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x272C"
    },
    "5722": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5723": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5724": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2431,
        2432
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "5726": {
      "offset": [
        1972,
        1994
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1666"
    },
    "5729": {
      "offset": [
        1986,
        1993
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5730": {
      "offset": [
        1972,
        1985
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1C76"
    },
    "5733": {
      "jump": "i",
      "offset": [
        1972,
        1994
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5734": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        1972,
        1994
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5735": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2471,
        2483
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "5737": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2471,
        2483
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "5738": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2453,
        2468
      ],
      "op": "TIMESTAMP",
      "path": "9"
    },
    "5739": {
      "branch": 174,
      "fn": "BaseGauge.setDuration",
      "offset": [
        2453,
        2483
      ],
      "op": "LT",
      "path": "9"
    },
    "5740": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2449,
        2664
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "5741": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2449,
        2664
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x16A4"
    },
    "5744": {
      "branch": 174,
      "fn": "BaseGauge.setDuration",
      "offset": [
        2449,
        2664
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "5745": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2499,
        2516
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "5747": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2534,
        2549
      ],
      "op": "TIMESTAMP",
      "path": "9"
    },
    "5748": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2519,
        2531
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "5750": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2519,
        2531
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "5751": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2519,
        2549
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1680"
    },
    "5754": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2519,
        2549
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "5755": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2519,
        2549
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5756": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2519,
        2549
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x280C"
    },
    "5759": {
      "fn": "BaseGauge.setDuration",
      "jump": "i",
      "offset": [
        2519,
        2549
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5760": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2519,
        2549
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5761": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2499,
        2549
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5762": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2499,
        2549
      ],
      "op": "POP",
      "path": "9"
    },
    "5763": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2563,
        2579
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "5765": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2594,
        2604
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "5767": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2594,
        2604
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "5768": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2582,
        2591
      ],
      "op": "DUP3",
      "path": "9"
    },
    "5769": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2582,
        2604
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1692"
    },
    "5772": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2582,
        2604
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "5773": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2582,
        2604
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5774": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2582,
        2604
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x26D3"
    },
    "5777": {
      "fn": "BaseGauge.setDuration",
      "jump": "i",
      "offset": [
        2582,
        2604
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5778": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2582,
        2604
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5779": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2563,
        2604
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5780": {
      "op": "POP"
    },
    "5781": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2631,
        2653
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 89,
      "value": "0x169E"
    },
    "5784": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2642,
        2653
      ],
      "op": "DUP5",
      "path": "9"
    },
    "5785": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2563,
        2604
      ],
      "op": "DUP3",
      "path": "9"
    },
    "5786": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2631,
        2653
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x26F2"
    },
    "5789": {
      "fn": "BaseGauge.setDuration",
      "jump": "i",
      "offset": [
        2631,
        2653
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5790": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2631,
        2653
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5791": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2618,
        2628
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "5793": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2618,
        2653
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "5794": {
      "op": "POP"
    },
    "5795": {
      "op": "POP"
    },
    "5796": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2449,
        2664
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5797": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2673,
        2681
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 90,
      "value": "0x2"
    },
    "5799": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2673,
        2695
      ],
      "op": "DUP3",
      "path": "9"
    },
    "5800": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2673,
        2695
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5801": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2673,
        2695
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "5802": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2739,
        2749
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 91,
      "value": "0x4"
    },
    "5804": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2739,
        2749
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "5805": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2710,
        2750
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "5807": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2710,
        2750
      ],
      "op": "DUP1",
      "path": "9"
    },
    "5808": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2710,
        2750
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "5809": {
      "op": "DUP5"
    },
    "5810": {
      "op": "DUP2"
    },
    "5811": {
      "op": "MSTORE"
    },
    "5812": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5814": {
      "op": "DUP2"
    },
    "5815": {
      "op": "ADD"
    },
    "5816": {
      "op": "SWAP3"
    },
    "5817": {
      "op": "SWAP1"
    },
    "5818": {
      "op": "SWAP3"
    },
    "5819": {
      "op": "MSTORE"
    },
    "5820": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2710,
        2750
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0xF899C6D536E6CDA78C5F4DCE43CA0E8C47167DEB2875EA8B777F21CC85899B1F"
    },
    "5853": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2710,
        2750
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "5854": {
      "op": "ADD"
    },
    "5855": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2710,
        2750
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "5856": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2710,
        2750
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "5858": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2710,
        2750
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "5859": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2710,
        2750
      ],
      "op": "DUP1",
      "path": "9"
    },
    "5860": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2710,
        2750
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "5861": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2710,
        2750
      ],
      "op": "SUB",
      "path": "9"
    },
    "5862": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2710,
        2750
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "5863": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2710,
        2750
      ],
      "op": "LOG1",
      "path": "9"
    },
    "5864": {
      "offset": [
        1318,
        1319
      ],
      "op": "POP",
      "path": "0"
    },
    "5865": {
      "fn": "BaseGauge.setDuration",
      "offset": [
        2325,
        2757
      ],
      "op": "POP",
      "path": "9"
    },
    "5866": {
      "fn": "BaseGauge.setDuration",
      "jump": "o",
      "offset": [
        2325,
        2757
      ],
      "op": "JUMP",
      "path": "9"
    },
    "5867": {
      "fn": "Gauge._newEarning",
      "offset": [
        8704,
        8962
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5872": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5874": {
      "op": "SHL"
    },
    "5875": {
      "op": "SUB"
    },
    "5876": {
      "fn": "Gauge._newEarning",
      "offset": [
        8915,
        8946
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 92
    },
    "5877": {
      "fn": "Gauge._newEarning",
      "offset": [
        8915,
        8946
      ],
      "op": "AND",
      "path": "10"
    },
    "5878": {
      "fn": "Gauge._newEarning",
      "offset": [
        8806,
        8813
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5880": {
      "fn": "Gauge._newEarning",
      "offset": [
        8915,
        8946
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5881": {
      "fn": "Gauge._newEarning",
      "offset": [
        8915,
        8946
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5882": {
      "fn": "Gauge._newEarning",
      "offset": [
        8915,
        8946
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5883": {
      "fn": "Gauge._newEarning",
      "offset": [
        8915,
        8937
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "5885": {
      "fn": "Gauge._newEarning",
      "offset": [
        8915,
        8946
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5887": {
      "fn": "Gauge._newEarning",
      "offset": [
        8915,
        8946
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5888": {
      "fn": "Gauge._newEarning",
      "offset": [
        8915,
        8946
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5890": {
      "fn": "Gauge._newEarning",
      "offset": [
        8915,
        8946
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5891": {
      "fn": "Gauge._newEarning",
      "offset": [
        8915,
        8946
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "5892": {
      "fn": "Gauge._newEarning",
      "offset": [
        8915,
        8946
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5893": {
      "fn": "Gauge._newEarning",
      "offset": [
        8951,
        8955
      ],
      "op": "PUSH8",
      "path": "10",
      "value": "0xDE0B6B3A7640000"
    },
    "5902": {
      "fn": "Gauge._newEarning",
      "offset": [
        8951,
        8955
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5903": {
      "fn": "Gauge._newEarning",
      "offset": [
        8895,
        8912
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1716"
    },
    "5906": {
      "fn": "Gauge._newEarning",
      "offset": [
        8895,
        8910
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2242"
    },
    "5909": {
      "fn": "Gauge._newEarning",
      "jump": "i",
      "offset": [
        8895,
        8912
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5910": {
      "fn": "Gauge._newEarning",
      "offset": [
        8895,
        8912
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5911": {
      "fn": "Gauge._newEarning",
      "offset": [
        8895,
        8946
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1720"
    },
    "5914": {
      "fn": "Gauge._newEarning",
      "offset": [
        8895,
        8946
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5915": {
      "fn": "Gauge._newEarning",
      "offset": [
        8895,
        8946
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5916": {
      "fn": "Gauge._newEarning",
      "offset": [
        8895,
        8946
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x280C"
    },
    "5919": {
      "fn": "Gauge._newEarning",
      "jump": "i",
      "offset": [
        8895,
        8946
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5920": {
      "fn": "Gauge._newEarning",
      "offset": [
        8895,
        8946
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5921": {
      "fn": "Gauge._newEarning",
      "offset": [
        8849,
        8875
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1729"
    },
    "5924": {
      "fn": "Gauge._newEarning",
      "offset": [
        8867,
        8874
      ],
      "op": "DUP5",
      "path": "10"
    },
    "5925": {
      "fn": "Gauge._newEarning",
      "offset": [
        8849,
        8866
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1936"
    },
    "5928": {
      "fn": "Gauge._newEarning",
      "jump": "i",
      "offset": [
        8849,
        8875
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5929": {
      "fn": "Gauge._newEarning",
      "offset": [
        8849,
        8875
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5930": {
      "fn": "Gauge._newEarning",
      "offset": [
        8849,
        8947
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1733"
    },
    "5933": {
      "fn": "Gauge._newEarning",
      "offset": [
        8849,
        8947
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5934": {
      "fn": "Gauge._newEarning",
      "offset": [
        8849,
        8947
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5935": {
      "fn": "Gauge._newEarning",
      "offset": [
        8849,
        8947
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26D3"
    },
    "5938": {
      "fn": "Gauge._newEarning",
      "jump": "i",
      "offset": [
        8849,
        8947
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5939": {
      "fn": "Gauge._newEarning",
      "offset": [
        8849,
        8947
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5940": {
      "fn": "Gauge._newEarning",
      "offset": [
        8848,
        8955
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x98D"
    },
    "5943": {
      "fn": "Gauge._newEarning",
      "offset": [
        8848,
        8955
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5944": {
      "fn": "Gauge._newEarning",
      "offset": [
        8848,
        8955
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5945": {
      "fn": "Gauge._newEarning",
      "offset": [
        8848,
        8955
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26F2"
    },
    "5948": {
      "fn": "Gauge._newEarning",
      "jump": "i",
      "offset": [
        8848,
        8955
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5949": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7318,
        7881
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5950": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7419,
        7426
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xD"
    },
    "5952": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7419,
        7426
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5953": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5955": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5956": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5957": {
      "op": "PUSH4",
      "value": "0x1705A3BD"
    },
    "5962": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5964": {
      "op": "SHL"
    },
    "5965": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5966": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5967": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5968": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5969": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7382,
        7389
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5971": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7382,
        7389
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "5972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5976": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5978": {
      "op": "SHL"
    },
    "5979": {
      "op": "SUB"
    },
    "5980": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7419,
        7426
      ],
      "op": "AND",
      "path": "10"
    },
    "5981": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7419,
        7426
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5982": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7437
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x1705A3BD"
    },
    "5987": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7437
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5988": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "5990": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5991": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "DUP4",
      "path": "10"
    },
    "5992": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "ADD",
      "path": "10"
    },
    "5993": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "5994": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5996": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "5997": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5998": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5999": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6000": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6001": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "SUB",
      "path": "10"
    },
    "6002": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "ADD",
      "path": "10"
    },
    "6003": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6004": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7419,
        7426
      ],
      "op": "DUP7",
      "path": "10"
    },
    "6005": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "GAS",
      "path": "10"
    },
    "6006": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "STATICCALL",
      "path": "10"
    },
    "6007": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "6008": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6009": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "6010": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1787"
    },
    "6013": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6014": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "6015": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6017": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6018": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "6019": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "6020": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6022": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "REVERT",
      "path": "10"
    },
    "6023": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6024": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "POP",
      "path": "10"
    },
    "6025": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "POP",
      "path": "10"
    },
    "6026": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "POP",
      "path": "10"
    },
    "6027": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "POP",
      "path": "10"
    },
    "6028": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6030": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6031": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "6032": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "6034": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "NOT",
      "path": "10"
    },
    "6035": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "6037": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6038": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "ADD",
      "path": "10"
    },
    "6039": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "AND",
      "path": "10"
    },
    "6040": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6041": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "ADD",
      "path": "10"
    },
    "6042": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6043": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6045": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6046": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "POP",
      "path": "10"
    },
    "6047": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6048": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "ADD",
      "path": "10"
    },
    "6049": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6050": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x17AB"
    },
    "6053": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6054": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6055": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x27EF"
    },
    "6058": {
      "fn": "Gauge._lockingRatio",
      "jump": "i",
      "offset": [
        7405,
        7439
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6059": {
      "branch": 158,
      "fn": "Gauge._lockingRatio",
      "offset": [
        7405,
        7439
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6060": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7401,
        7488
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "6061": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7401,
        7488
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x17BA"
    },
    "6064": {
      "branch": 158,
      "fn": "Gauge._lockingRatio",
      "offset": [
        7401,
        7488
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6065": {
      "op": "POP"
    },
    "6066": {
      "offset": [
        1131,
        1136
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0xF4240"
    },
    "6070": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        1131,
        1136
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6071": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7318,
        7881
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6072": {
      "op": "POP"
    },
    "6073": {
      "fn": "Gauge._lockingRatio",
      "jump": "o",
      "offset": [
        7318,
        7881
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6074": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7401,
        7488
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6075": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7534,
        7541
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xD"
    },
    "6077": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7534,
        7541
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6078": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6080": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6081": {
      "op": "PUSH4",
      "value": "0xADC63589"
    },
    "6086": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6088": {
      "op": "SHL"
    },
    "6089": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6090": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6095": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6097": {
      "op": "SHL"
    },
    "6098": {
      "op": "SUB"
    },
    "6099": {
      "op": "DUP5"
    },
    "6100": {
      "op": "DUP2"
    },
    "6101": {
      "op": "AND"
    },
    "6102": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "6104": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6105": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "ADD",
      "path": "10"
    },
    "6106": {
      "op": "MSTORE"
    },
    "6107": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7498,
        7517
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6109": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7498,
        7517
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "6110": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7534,
        7541
      ],
      "op": "AND",
      "path": "10"
    },
    "6111": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7534,
        7541
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6112": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7554
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xADC63589"
    },
    "6117": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7554
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6118": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6120": {
      "op": "ADD"
    },
    "6121": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6123": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6125": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6126": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6127": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6128": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "SUB",
      "path": "10"
    },
    "6129": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6130": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "DUP7",
      "path": "10"
    },
    "6131": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "GAS",
      "path": "10"
    },
    "6132": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "STATICCALL",
      "path": "10"
    },
    "6133": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "6134": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6135": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "6136": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1805"
    },
    "6139": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6140": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "6141": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6143": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6144": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "6145": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "6146": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6148": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "REVERT",
      "path": "10"
    },
    "6149": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6150": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "POP",
      "path": "10"
    },
    "6151": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "POP",
      "path": "10"
    },
    "6152": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "POP",
      "path": "10"
    },
    "6153": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "POP",
      "path": "10"
    },
    "6154": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6156": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6157": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "6158": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "6160": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "NOT",
      "path": "10"
    },
    "6161": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "6163": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6164": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "ADD",
      "path": "10"
    },
    "6165": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "AND",
      "path": "10"
    },
    "6166": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6167": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "ADD",
      "path": "10"
    },
    "6168": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6169": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6171": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6172": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "POP",
      "path": "10"
    },
    "6173": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6174": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "ADD",
      "path": "10"
    },
    "6175": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6176": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1829"
    },
    "6179": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6180": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6181": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2761"
    },
    "6184": {
      "fn": "Gauge._lockingRatio",
      "jump": "i",
      "offset": [
        7520,
        7564
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6185": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7520,
        7564
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6186": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7498,
        7564
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6187": {
      "op": "POP"
    },
    "6188": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7578,
        7594
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6189": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7578,
        7594
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "6190": {
      "branch": 159,
      "fn": "Gauge._lockingRatio",
      "offset": [
        7578,
        7594
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6191": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7578,
        7628
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1838"
    },
    "6194": {
      "branch": 159,
      "fn": "Gauge._lockingRatio",
      "offset": [
        7578,
        7628
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6195": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7578,
        7628
      ],
      "op": "POP",
      "path": "10"
    },
    "6196": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7613,
        7628
      ],
      "op": "TIMESTAMP",
      "path": "10"
    },
    "6197": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7598,
        7609
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6198": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7598,
        7628
      ],
      "op": "GT",
      "path": "10"
    },
    "6199": {
      "branch": 160,
      "fn": "Gauge._lockingRatio",
      "offset": [
        7598,
        7628
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "6200": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7578,
        7628
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6201": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7574,
        7663
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "6202": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7574,
        7663
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1846"
    },
    "6205": {
      "branch": 160,
      "fn": "Gauge._lockingRatio",
      "offset": [
        7574,
        7663
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6206": {
      "op": "POP"
    },
    "6207": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7651,
        7652
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 93,
      "value": "0x0"
    },
    "6209": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7651,
        7652
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "6210": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7318,
        7881
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6211": {
      "op": "POP"
    },
    "6212": {
      "op": "POP"
    },
    "6213": {
      "fn": "Gauge._lockingRatio",
      "jump": "o",
      "offset": [
        7318,
        7881
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6214": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7574,
        7663
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6215": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7673,
        7689
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6217": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7692,
        7721
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1852"
    },
    "6220": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7706,
        7721
      ],
      "op": "TIMESTAMP",
      "path": "10"
    },
    "6221": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7692,
        7703
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6222": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7692,
        7721
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x280C"
    },
    "6225": {
      "fn": "Gauge._lockingRatio",
      "jump": "i",
      "offset": [
        7692,
        7721
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6226": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7692,
        7721
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6227": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7673,
        7721
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6228": {
      "op": "POP"
    },
    "6229": {
      "offset": [
        1250,
        1257
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0x278D00"
    },
    "6233": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7735,
        7754
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1866"
    },
    "6236": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7673,
        7721
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6237": {
      "offset": [
        1068,
        1083
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x784CE00"
    },
    "6242": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7735,
        7754
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x280C"
    },
    "6245": {
      "fn": "Gauge._lockingRatio",
      "jump": "i",
      "offset": [
        7735,
        7754
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6246": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7735,
        7754
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6247": {
      "branch": 161,
      "fn": "Gauge._lockingRatio",
      "offset": [
        7735,
        7769
      ],
      "op": "LT",
      "path": "10"
    },
    "6248": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7731,
        7818
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "6249": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7731,
        7818
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1878"
    },
    "6252": {
      "branch": 161,
      "fn": "Gauge._lockingRatio",
      "offset": [
        7731,
        7818
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6253": {
      "op": "POP"
    },
    "6254": {
      "offset": [
        1131,
        1136
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0xF4240"
    },
    "6258": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        1131,
        1136
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "6259": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7318,
        7881
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "6260": {
      "op": "POP"
    },
    "6261": {
      "op": "POP"
    },
    "6262": {
      "op": "POP"
    },
    "6263": {
      "fn": "Gauge._lockingRatio",
      "jump": "o",
      "offset": [
        7318,
        7881
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6264": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7731,
        7818
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6265": {
      "offset": [
        1068,
        1083
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x784CE00"
    },
    "6270": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7836,
        7862
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 94,
      "value": "0x188A"
    },
    "6273": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7854,
        7862
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6274": {
      "offset": [
        1131,
        1136
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0xF4240"
    },
    "6278": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7836,
        7862
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26D3"
    },
    "6281": {
      "fn": "Gauge._lockingRatio",
      "jump": "i",
      "offset": [
        7836,
        7862
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6282": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7836,
        7862
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6283": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7835,
        7874
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1894"
    },
    "6286": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7835,
        7874
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6287": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7835,
        7874
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6288": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7835,
        7874
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26F2"
    },
    "6291": {
      "fn": "Gauge._lockingRatio",
      "jump": "i",
      "offset": [
        7835,
        7874
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6292": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7835,
        7874
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6293": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7828,
        7874
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "6294": {
      "fn": "Gauge._lockingRatio",
      "offset": [
        7318,
        7881
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "6295": {
      "op": "POP"
    },
    "6296": {
      "op": "POP"
    },
    "6297": {
      "op": "POP"
    },
    "6298": {
      "op": "POP"
    },
    "6299": {
      "fn": "Gauge._lockingRatio",
      "jump": "o",
      "offset": [
        7318,
        7881
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6300": {
      "fn": "Gauge._notProtectedTokens",
      "offset": [
        17364,
        17584
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6301": {
      "fn": "Gauge._notProtectedTokens",
      "offset": [
        17530,
        17541
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 95,
      "value": "0x1"
    },
    "6303": {
      "fn": "Gauge._notProtectedTokens",
      "offset": [
        17530,
        17541
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6304": {
      "fn": "Gauge._notProtectedTokens",
      "offset": [
        17473,
        17477
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6306": {
      "fn": "Gauge._notProtectedTokens",
      "offset": [
        17473,
        17477
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6311": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6313": {
      "op": "SHL"
    },
    "6314": {
      "op": "SUB"
    },
    "6315": {
      "fn": "Gauge._notProtectedTokens",
      "offset": [
        17512,
        17542
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6316": {
      "fn": "Gauge._notProtectedTokens",
      "offset": [
        17512,
        17542
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6317": {
      "fn": "Gauge._notProtectedTokens",
      "offset": [
        17512,
        17542
      ],
      "op": "AND",
      "path": "10"
    },
    "6318": {
      "fn": "Gauge._notProtectedTokens",
      "offset": [
        17530,
        17541
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6319": {
      "fn": "Gauge._notProtectedTokens",
      "offset": [
        17530,
        17541
      ],
      "op": "AND",
      "path": "10"
    },
    "6320": {
      "fn": "Gauge._notProtectedTokens",
      "offset": [
        17512,
        17542
      ],
      "op": "EQ",
      "path": "10"
    },
    "6321": {
      "fn": "Gauge._notProtectedTokens",
      "offset": [
        17512,
        17542
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6322": {
      "fn": "Gauge._notProtectedTokens",
      "offset": [
        17512,
        17542
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "6323": {
      "fn": "Gauge._notProtectedTokens",
      "offset": [
        17512,
        17542
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6324": {
      "fn": "Gauge._notProtectedTokens",
      "offset": [
        17512,
        17577
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x98D"
    },
    "6327": {
      "fn": "Gauge._notProtectedTokens",
      "offset": [
        17512,
        17577
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6328": {
      "op": "POP"
    },
    "6329": {
      "op": "POP"
    },
    "6330": {
      "fn": "Gauge._notProtectedTokens",
      "offset": [
        17564,
        17576
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xC"
    },
    "6332": {
      "fn": "Gauge._notProtectedTokens",
      "offset": [
        17564,
        17576
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6337": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6339": {
      "op": "SHL"
    },
    "6340": {
      "op": "SUB"
    },
    "6341": {
      "fn": "Gauge._notProtectedTokens",
      "offset": [
        17564,
        17576
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6342": {
      "fn": "Gauge._notProtectedTokens",
      "offset": [
        17564,
        17576
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6343": {
      "fn": "Gauge._notProtectedTokens",
      "offset": [
        17564,
        17576
      ],
      "op": "AND",
      "path": "10"
    },
    "6344": {
      "fn": "Gauge._notProtectedTokens",
      "offset": [
        17546,
        17577
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6345": {
      "fn": "Gauge._notProtectedTokens",
      "offset": [
        17546,
        17577
      ],
      "op": "AND",
      "path": "10"
    },
    "6346": {
      "fn": "Gauge._notProtectedTokens",
      "offset": [
        17546,
        17577
      ],
      "op": "EQ",
      "path": "10"
    },
    "6347": {
      "fn": "Gauge._notProtectedTokens",
      "offset": [
        17546,
        17577
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "6348": {
      "fn": "Gauge._notProtectedTokens",
      "offset": [
        17546,
        17577
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6349": {
      "fn": "Gauge._notProtectedTokens",
      "jump": "o",
      "offset": [
        17364,
        17584
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6350": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6351": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 96,
      "value": "0x40"
    },
    "6353": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6358": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6360": {
      "op": "SHL"
    },
    "6361": {
      "op": "SUB"
    },
    "6362": {
      "op": "DUP4"
    },
    "6363": {
      "op": "AND"
    },
    "6364": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "6366": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6367": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "5"
    },
    "6368": {
      "op": "MSTORE"
    },
    "6369": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6371": {
      "op": "DUP2"
    },
    "6372": {
      "op": "ADD"
    },
    "6373": {
      "op": "DUP3"
    },
    "6374": {
      "op": "SWAP1"
    },
    "6375": {
      "op": "MSTORE"
    },
    "6376": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1931"
    },
    "6379": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6380": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6381": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6382": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "6387": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6389": {
      "op": "SHL"
    },
    "6390": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        886
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6391": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6393": {
      "op": "ADD"
    },
    "6394": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6395": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6397": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6398": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6399": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6401": {
      "op": "NOT"
    },
    "6402": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6403": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6404": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SUB",
      "path": "5"
    },
    "6405": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "5"
    },
    "6406": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6407": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6408": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6409": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6410": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6411": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6413": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6414": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "5"
    },
    "6415": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6416": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6421": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6423": {
      "op": "SHL"
    },
    "6424": {
      "op": "SUB"
    },
    "6425": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "AND",
      "path": "5"
    },
    "6426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6430": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6432": {
      "op": "SHL"
    },
    "6433": {
      "op": "SUB"
    },
    "6434": {
      "op": "NOT"
    },
    "6435": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6436": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "6437": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "AND",
      "path": "5"
    },
    "6438": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6439": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6440": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6441": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "OR",
      "path": "5"
    },
    "6442": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6443": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6444": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6445": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x22A6"
    },
    "6448": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        813,
        899
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6449": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6450": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "5"
    },
    "6451": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "5"
    },
    "6452": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "5"
    },
    "6453": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        701,
        906
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6454": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9501,
        10058
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6455": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9592,
        9599
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6457": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9615,
        9636
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6458": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9653,
        9660
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xD"
    },
    "6460": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9653,
        9660
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6462": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9653,
        9660
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6463": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9653,
        9660
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6464": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9653,
        9660
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6465": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9653,
        9660
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "6468": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9653,
        9660
      ],
      "op": "EXP",
      "path": "10"
    },
    "6469": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9653,
        9660
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6470": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9653,
        9660
      ],
      "op": "DIV",
      "path": "10"
    },
    "6471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6475": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6477": {
      "op": "SHL"
    },
    "6478": {
      "op": "SUB"
    },
    "6479": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9653,
        9660
      ],
      "op": "AND",
      "path": "10"
    },
    "6480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6484": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6486": {
      "op": "SHL"
    },
    "6487": {
      "op": "SUB"
    },
    "6488": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9673
      ],
      "op": "AND",
      "path": "10"
    },
    "6489": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9673
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x18160DDD"
    },
    "6494": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6496": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6497": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6498": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "6503": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "AND",
      "path": "10"
    },
    "6504": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "6506": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "SHL",
      "path": "10"
    },
    "6507": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6508": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6509": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "6511": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "ADD",
      "path": "10"
    },
    "6512": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6514": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6516": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6517": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6518": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6519": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "SUB",
      "path": "10"
    },
    "6520": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6521": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "DUP7",
      "path": "10"
    },
    "6522": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "GAS",
      "path": "10"
    },
    "6523": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "STATICCALL",
      "path": "10"
    },
    "6524": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "6525": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6526": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "6527": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x198C"
    },
    "6530": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6531": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "6532": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6534": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6535": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "6536": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "6537": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6539": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "REVERT",
      "path": "10"
    },
    "6540": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6541": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "POP",
      "path": "10"
    },
    "6542": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "POP",
      "path": "10"
    },
    "6543": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "POP",
      "path": "10"
    },
    "6544": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "POP",
      "path": "10"
    },
    "6545": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6547": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6548": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "6549": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "6551": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "NOT",
      "path": "10"
    },
    "6552": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "6554": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6555": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "ADD",
      "path": "10"
    },
    "6556": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "AND",
      "path": "10"
    },
    "6557": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6558": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "ADD",
      "path": "10"
    },
    "6559": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6560": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6562": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6563": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "POP",
      "path": "10"
    },
    "6564": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6565": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "ADD",
      "path": "10"
    },
    "6566": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6567": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x19B0"
    },
    "6570": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6571": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6572": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2761"
    },
    "6575": {
      "fn": "Gauge._boostedBalanceOf",
      "jump": "i",
      "offset": [
        9639,
        9675
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6576": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9639,
        9675
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6577": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9615,
        9675
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6578": {
      "op": "POP"
    },
    "6579": {
      "branch": 162,
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9689,
        9707
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6580": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9685,
        9759
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x19D4"
    },
    "6583": {
      "branch": 162,
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9685,
        9759
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6584": {
      "op": "POP"
    },
    "6585": {
      "op": "POP"
    },
    "6586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6590": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6592": {
      "op": "SHL"
    },
    "6593": {
      "op": "SUB"
    },
    "6594": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9730,
        9748
      ],
      "op": "AND",
      "path": "10",
      "statement": 97
    },
    "6595": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9730,
        9748
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6597": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9730,
        9748
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6598": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9730,
        9748
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6599": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9730,
        9748
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6600": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9730,
        9739
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x12"
    },
    "6602": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9730,
        9748
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6604": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9730,
        9748
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6605": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9730,
        9748
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6607": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9730,
        9748
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6608": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9730,
        9748
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "6609": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9730,
        9748
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6610": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9730,
        9748
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6611": {
      "fn": "Gauge._boostedBalanceOf",
      "jump": "o",
      "offset": [
        9501,
        10058
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6612": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9685,
        9759
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6613": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9919,
        9926
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 98,
      "value": "0xD"
    },
    "6615": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9919,
        9926
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6616": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6618": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6619": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "6624": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6626": {
      "op": "SHL"
    },
    "6627": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6628": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6633": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6635": {
      "op": "SHL"
    },
    "6636": {
      "op": "SUB"
    },
    "6637": {
      "op": "DUP6"
    },
    "6638": {
      "op": "DUP2"
    },
    "6639": {
      "op": "AND"
    },
    "6640": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "6642": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6643": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "ADD",
      "path": "10"
    },
    "6644": {
      "op": "MSTORE"
    },
    "6645": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9788,
        10051
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6C9"
    },
    "6648": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9788,
        10051
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "6649": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9998,
        10001
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x64"
    },
    "6651": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9998,
        10001
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "6652": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9974,
        9987
      ],
      "op": "DUP6",
      "path": "10"
    },
    "6653": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9974,
        9987
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "6654": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9919,
        9926
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6655": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9919,
        9926
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6656": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9919,
        9926
      ],
      "op": "AND",
      "path": "10"
    },
    "6657": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9919,
        9926
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6658": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9937
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x70A08231"
    },
    "6663": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9937
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6664": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6666": {
      "op": "ADD"
    },
    "6667": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6669": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6671": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6672": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6673": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6674": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "SUB",
      "path": "10"
    },
    "6675": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6676": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "DUP7",
      "path": "10"
    },
    "6677": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "GAS",
      "path": "10"
    },
    "6678": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "STATICCALL",
      "path": "10"
    },
    "6679": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "6680": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6681": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "6682": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1A27"
    },
    "6685": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6686": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "6687": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6689": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6690": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "6691": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "6692": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6694": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "REVERT",
      "path": "10"
    },
    "6695": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6696": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "POP",
      "path": "10"
    },
    "6697": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "POP",
      "path": "10"
    },
    "6698": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "POP",
      "path": "10"
    },
    "6699": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "POP",
      "path": "10"
    },
    "6700": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6702": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6703": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "6704": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "6706": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "NOT",
      "path": "10"
    },
    "6707": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "6709": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6710": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "ADD",
      "path": "10"
    },
    "6711": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "AND",
      "path": "10"
    },
    "6712": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6713": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "ADD",
      "path": "10"
    },
    "6714": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6715": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6717": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6718": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "POP",
      "path": "10"
    },
    "6719": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6720": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "ADD",
      "path": "10"
    },
    "6721": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6722": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1A4B"
    },
    "6725": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6726": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6727": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2761"
    },
    "6730": {
      "fn": "Gauge._boostedBalanceOf",
      "jump": "i",
      "offset": [
        9905,
        9946
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6731": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9905,
        9946
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6732": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9866,
        9878
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x11"
    },
    "6734": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9866,
        9878
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6735": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9866,
        9946
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1A58"
    },
    "6738": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9866,
        9946
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6739": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9866,
        9946
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6740": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9866,
        9946
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26D3"
    },
    "6743": {
      "fn": "Gauge._boostedBalanceOf",
      "jump": "i",
      "offset": [
        9866,
        9946
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6744": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9866,
        9946
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6745": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9865,
        9987
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1A62"
    },
    "6748": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9865,
        9987
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6749": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9865,
        9987
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6750": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9865,
        9987
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26F2"
    },
    "6753": {
      "fn": "Gauge._boostedBalanceOf",
      "jump": "i",
      "offset": [
        9865,
        9987
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6754": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9865,
        9987
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6755": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9864,
        9993
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1A6D"
    },
    "6758": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9864,
        9993
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6759": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9991,
        9993
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3C"
    },
    "6761": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9864,
        9993
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26D3"
    },
    "6764": {
      "fn": "Gauge._boostedBalanceOf",
      "jump": "i",
      "offset": [
        9864,
        9993
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6765": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9864,
        9993
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6770": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6772": {
      "op": "SHL"
    },
    "6773": {
      "op": "SUB"
    },
    "6774": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9816,
        9834
      ],
      "op": "DUP7",
      "path": "10"
    },
    "6775": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9816,
        9834
      ],
      "op": "AND",
      "path": "10"
    },
    "6776": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9816,
        9834
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6778": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9816,
        9834
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6779": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9816,
        9834
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6780": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9816,
        9834
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6781": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9816,
        9825
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x12"
    },
    "6783": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9816,
        9834
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6785": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9816,
        9834
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6786": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9816,
        9834
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6788": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9816,
        9834
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6789": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9816,
        9834
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "6790": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9816,
        9834
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6791": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9816,
        9839
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1A91"
    },
    "6794": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9816,
        9839
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6795": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9837,
        9839
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x28"
    },
    "6797": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9816,
        9839
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26D3"
    },
    "6800": {
      "fn": "Gauge._boostedBalanceOf",
      "jump": "i",
      "offset": [
        9816,
        9839
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6801": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9816,
        9839
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6802": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9815,
        9994
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1A9B"
    },
    "6805": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9815,
        9994
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6806": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9815,
        9994
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6807": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9815,
        9994
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2714"
    },
    "6810": {
      "fn": "Gauge._boostedBalanceOf",
      "jump": "i",
      "offset": [
        9815,
        9994
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6811": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9815,
        9994
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6812": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9814,
        10001
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1AA5"
    },
    "6815": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9814,
        10001
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6816": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9814,
        10001
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6817": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9814,
        10001
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26F2"
    },
    "6820": {
      "fn": "Gauge._boostedBalanceOf",
      "jump": "i",
      "offset": [
        9814,
        10001
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6821": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9814,
        10001
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6826": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6828": {
      "op": "SHL"
    },
    "6829": {
      "op": "SUB"
    },
    "6830": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        10019,
        10037
      ],
      "op": "DUP6",
      "path": "10"
    },
    "6831": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        10019,
        10037
      ],
      "op": "AND",
      "path": "10"
    },
    "6832": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        10019,
        10037
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6834": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        10019,
        10037
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6835": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        10019,
        10037
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6836": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        10019,
        10037
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6837": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        10019,
        10028
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x12"
    },
    "6839": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        10019,
        10037
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6841": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        10019,
        10037
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6842": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        10019,
        10037
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6844": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        10019,
        10037
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6845": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        10019,
        10037
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "6846": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        10019,
        10037
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6847": {
      "fn": "Gauge._boostedBalanceOf",
      "offset": [
        9788,
        9796
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x21A7"
    },
    "6850": {
      "fn": "Gauge._boostedBalanceOf",
      "jump": "i",
      "offset": [
        9788,
        10051
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6851": {
      "fn": "Gauge._deposit",
      "offset": [
        11364,
        12010
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6852": {
      "fn": "Gauge._deposit",
      "offset": [
        11451,
        11455
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6853": {
      "offset": [
        1972,
        1994
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1ACD"
    },
    "6856": {
      "offset": [
        1986,
        1993
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6857": {
      "offset": [
        1972,
        1985
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1C76"
    },
    "6860": {
      "jump": "i",
      "offset": [
        1972,
        1994
      ],
      "op": "JUMP",
      "path": "9"
    },
    "6861": {
      "fn": "Gauge._deposit",
      "offset": [
        1972,
        1994
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "6862": {
      "fn": "Gauge._deposit",
      "offset": [
        11489,
        11490
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 99,
      "value": "0x0"
    },
    "6864": {
      "fn": "Gauge._deposit",
      "offset": [
        11479,
        11486
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6865": {
      "branch": 163,
      "fn": "Gauge._deposit",
      "offset": [
        11479,
        11490
      ],
      "op": "GT",
      "path": "10"
    },
    "6866": {
      "fn": "Gauge._deposit",
      "offset": [
        11471,
        11524
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1B1D"
    },
    "6869": {
      "branch": 163,
      "fn": "Gauge._deposit",
      "offset": [
        11471,
        11524
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6870": {
      "fn": "Gauge._deposit",
      "offset": [
        11471,
        11524
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6872": {
      "fn": "Gauge._deposit",
      "offset": [
        11471,
        11524
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6873": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6877": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6879": {
      "op": "SHL"
    },
    "6880": {
      "fn": "Gauge._deposit",
      "offset": [
        11471,
        11524
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6881": {
      "fn": "Gauge._deposit",
      "offset": [
        11471,
        11524
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6882": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6884": {
      "fn": "Gauge._deposit",
      "offset": [
        11471,
        11524
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "6886": {
      "fn": "Gauge._deposit",
      "offset": [
        11471,
        11524
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6887": {
      "fn": "Gauge._deposit",
      "offset": [
        11471,
        11524
      ],
      "op": "ADD",
      "path": "10"
    },
    "6888": {
      "op": "MSTORE"
    },
    "6889": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "6891": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6893": {
      "op": "DUP3"
    },
    "6894": {
      "op": "ADD"
    },
    "6895": {
      "op": "MSTORE"
    },
    "6896": {
      "op": "PUSH32",
      "value": "0x526577617264506F6F6C203A2043616E6E6F74206465706F7369742030000000"
    },
    "6929": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6931": {
      "op": "DUP3"
    },
    "6932": {
      "op": "ADD"
    },
    "6933": {
      "op": "MSTORE"
    },
    "6934": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6936": {
      "op": "ADD"
    },
    "6937": {
      "fn": "Gauge._deposit",
      "offset": [
        11471,
        11524
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6FB"
    },
    "6940": {
      "op": "JUMP"
    },
    "6941": {
      "fn": "Gauge._deposit",
      "offset": [
        11471,
        11524
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6942": {
      "fn": "Gauge._deposit",
      "offset": [
        11593,
        11605
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x13"
    },
    "6944": {
      "fn": "Gauge._deposit",
      "offset": [
        11593,
        11612
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6945": {
      "fn": "Gauge._deposit",
      "offset": [
        11576,
        11590
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6947": {
      "fn": "Gauge._deposit",
      "offset": [
        11622,
        11736
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6948": {
      "fn": "Gauge._deposit",
      "offset": [
        11646,
        11652
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6949": {
      "fn": "Gauge._deposit",
      "offset": [
        11642,
        11643
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6950": {
      "fn": "Gauge._deposit",
      "offset": [
        11642,
        11652
      ],
      "op": "LT",
      "path": "10"
    },
    "6951": {
      "fn": "Gauge._deposit",
      "offset": [
        11622,
        11736
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "6952": {
      "fn": "Gauge._deposit",
      "offset": [
        11622,
        11736
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1BCA"
    },
    "6955": {
      "fn": "Gauge._deposit",
      "offset": [
        11622,
        11736
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6956": {
      "fn": "Gauge._deposit",
      "offset": [
        11686,
        11698
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 100,
      "value": "0x13"
    },
    "6958": {
      "fn": "Gauge._deposit",
      "offset": [
        11699,
        11700
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6959": {
      "fn": "Gauge._deposit",
      "offset": [
        11686,
        11701
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6960": {
      "fn": "Gauge._deposit",
      "offset": [
        11686,
        11701
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6961": {
      "fn": "Gauge._deposit",
      "offset": [
        11686,
        11701
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6962": {
      "fn": "Gauge._deposit",
      "offset": [
        11686,
        11701
      ],
      "op": "LT",
      "path": "10"
    },
    "6963": {
      "fn": "Gauge._deposit",
      "offset": [
        11686,
        11701
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1B3E"
    },
    "6966": {
      "fn": "Gauge._deposit",
      "offset": [
        11686,
        11701
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6967": {
      "fn": "Gauge._deposit",
      "offset": [
        11686,
        11701
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1B3E"
    },
    "6970": {
      "fn": "Gauge._deposit",
      "offset": [
        11686,
        11701
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2823"
    },
    "6973": {
      "fn": "Gauge._deposit",
      "jump": "i",
      "offset": [
        11686,
        11701
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6974": {
      "fn": "Gauge._deposit",
      "offset": [
        11686,
        11701
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6975": {
      "fn": "Gauge._deposit",
      "offset": [
        11686,
        11701
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6977": {
      "fn": "Gauge._deposit",
      "offset": [
        11686,
        11701
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6978": {
      "fn": "Gauge._deposit",
      "offset": [
        11686,
        11701
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6979": {
      "fn": "Gauge._deposit",
      "offset": [
        11686,
        11701
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6980": {
      "fn": "Gauge._deposit",
      "offset": [
        11686,
        11701
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6982": {
      "fn": "Gauge._deposit",
      "offset": [
        11686,
        11701
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6983": {
      "fn": "Gauge._deposit",
      "offset": [
        11686,
        11701
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6984": {
      "fn": "Gauge._deposit",
      "offset": [
        11686,
        11701
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "6985": {
      "fn": "Gauge._deposit",
      "offset": [
        11686,
        11701
      ],
      "op": "ADD",
      "path": "10"
    },
    "6986": {
      "fn": "Gauge._deposit",
      "offset": [
        11686,
        11701
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6987": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6989": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6990": {
      "op": "PUSH4",
      "value": "0x14640F37"
    },
    "6995": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "6997": {
      "op": "SHL"
    },
    "6998": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6999": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7004": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7006": {
      "op": "SHL"
    },
    "7007": {
      "op": "SUB"
    },
    "7008": {
      "op": "DUP8"
    },
    "7009": {
      "op": "DUP2"
    },
    "7010": {
      "op": "AND"
    },
    "7011": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "7013": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "DUP4",
      "path": "10"
    },
    "7014": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "ADD",
      "path": "10"
    },
    "7015": {
      "op": "MSTORE"
    },
    "7016": {
      "fn": "Gauge._deposit",
      "offset": [
        11686,
        11701
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7017": {
      "fn": "Gauge._deposit",
      "offset": [
        11686,
        11701
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7018": {
      "fn": "Gauge._deposit",
      "offset": [
        11686,
        11701
      ],
      "op": "AND",
      "path": "10"
    },
    "7019": {
      "fn": "Gauge._deposit",
      "offset": [
        11686,
        11701
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7020": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11719
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xA32079B8"
    },
    "7025": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11719
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7026": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7028": {
      "op": "ADD"
    },
    "7029": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "7031": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7033": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7034": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7035": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "DUP4",
      "path": "10"
    },
    "7036": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "SUB",
      "path": "10"
    },
    "7037": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7038": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7040": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "DUP8",
      "path": "10"
    },
    "7041": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "GAS",
      "path": "10"
    },
    "7042": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "CALL",
      "path": "10"
    },
    "7043": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "7044": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7045": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "7046": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1B93"
    },
    "7049": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7050": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "7051": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7053": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7054": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "7055": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "7056": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7058": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "REVERT",
      "path": "10"
    },
    "7059": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7060": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "POP",
      "path": "10"
    },
    "7061": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "POP",
      "path": "10"
    },
    "7062": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "POP",
      "path": "10"
    },
    "7063": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "POP",
      "path": "10"
    },
    "7064": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7066": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7067": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "7068": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "7070": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "NOT",
      "path": "10"
    },
    "7071": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "7073": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7074": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "ADD",
      "path": "10"
    },
    "7075": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "AND",
      "path": "10"
    },
    "7076": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7077": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "ADD",
      "path": "10"
    },
    "7078": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7079": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7081": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7082": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "POP",
      "path": "10"
    },
    "7083": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7084": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "ADD",
      "path": "10"
    },
    "7085": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7086": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1BB7"
    },
    "7089": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7090": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7091": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x27EF"
    },
    "7094": {
      "fn": "Gauge._deposit",
      "jump": "i",
      "offset": [
        11673,
        11725
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7095": {
      "fn": "Gauge._deposit",
      "offset": [
        11673,
        11725
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7096": {
      "op": "POP"
    },
    "7097": {
      "fn": "Gauge._deposit",
      "offset": [
        11654,
        11657
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 101
    },
    "7098": {
      "fn": "Gauge._deposit",
      "offset": [
        11654,
        11657
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1BC2"
    },
    "7101": {
      "fn": "Gauge._deposit",
      "offset": [
        11654,
        11657
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7102": {
      "fn": "Gauge._deposit",
      "offset": [
        11654,
        11657
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2839"
    },
    "7105": {
      "fn": "Gauge._deposit",
      "jump": "i",
      "offset": [
        11654,
        11657
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7106": {
      "fn": "Gauge._deposit",
      "offset": [
        11654,
        11657
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7107": {
      "fn": "Gauge._deposit",
      "offset": [
        11654,
        11657
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7108": {
      "fn": "Gauge._deposit",
      "offset": [
        11654,
        11657
      ],
      "op": "POP",
      "path": "10"
    },
    "7109": {
      "fn": "Gauge._deposit",
      "offset": [
        11654,
        11657
      ],
      "op": "POP",
      "path": "10"
    },
    "7110": {
      "fn": "Gauge._deposit",
      "offset": [
        11622,
        11736
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1B23"
    },
    "7113": {
      "fn": "Gauge._deposit",
      "offset": [
        11622,
        11736
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7114": {
      "fn": "Gauge._deposit",
      "offset": [
        11622,
        11736
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7115": {
      "fn": "Gauge._deposit",
      "offset": [
        11622,
        11736
      ],
      "op": "POP",
      "path": "10"
    },
    "7116": {
      "fn": "Gauge._deposit",
      "offset": [
        11799,
        11806
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 102
    },
    "7117": {
      "fn": "Gauge._deposit",
      "offset": [
        11784,
        11796
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x11"
    },
    "7119": {
      "fn": "Gauge._deposit",
      "offset": [
        11784,
        11796
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7120": {
      "fn": "Gauge._deposit",
      "offset": [
        11784,
        11806
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1BD9"
    },
    "7123": {
      "fn": "Gauge._deposit",
      "offset": [
        11784,
        11806
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7124": {
      "fn": "Gauge._deposit",
      "offset": [
        11784,
        11806
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7125": {
      "fn": "Gauge._deposit",
      "offset": [
        11784,
        11806
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2714"
    },
    "7128": {
      "fn": "Gauge._deposit",
      "jump": "i",
      "offset": [
        11784,
        11806
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7129": {
      "fn": "Gauge._deposit",
      "offset": [
        11784,
        11806
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7130": {
      "fn": "Gauge._deposit",
      "offset": [
        11769,
        11781
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x11"
    },
    "7132": {
      "fn": "Gauge._deposit",
      "offset": [
        11769,
        11806
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "7133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7137": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7139": {
      "op": "SHL"
    },
    "7140": {
      "op": "SUB"
    },
    "7141": {
      "fn": "Gauge._deposit",
      "offset": [
        11834,
        11849
      ],
      "op": "DUP5",
      "path": "10",
      "statement": 103
    },
    "7142": {
      "fn": "Gauge._deposit",
      "offset": [
        11834,
        11849
      ],
      "op": "AND",
      "path": "10"
    },
    "7143": {
      "fn": "Gauge._deposit",
      "offset": [
        11834,
        11849
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7145": {
      "fn": "Gauge._deposit",
      "offset": [
        11834,
        11849
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7146": {
      "fn": "Gauge._deposit",
      "offset": [
        11834,
        11849
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7147": {
      "fn": "Gauge._deposit",
      "offset": [
        11834,
        11849
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7148": {
      "fn": "Gauge._deposit",
      "offset": [
        11834,
        11843
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x12"
    },
    "7150": {
      "fn": "Gauge._deposit",
      "offset": [
        11834,
        11849
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "7152": {
      "fn": "Gauge._deposit",
      "offset": [
        11834,
        11849
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7153": {
      "fn": "Gauge._deposit",
      "offset": [
        11834,
        11849
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7155": {
      "fn": "Gauge._deposit",
      "offset": [
        11834,
        11849
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7156": {
      "fn": "Gauge._deposit",
      "offset": [
        11834,
        11849
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "7157": {
      "fn": "Gauge._deposit",
      "offset": [
        11834,
        11849
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7158": {
      "fn": "Gauge._deposit",
      "offset": [
        11834,
        11859
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1C00"
    },
    "7161": {
      "fn": "Gauge._deposit",
      "offset": [
        11834,
        11859
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7162": {
      "fn": "Gauge._deposit",
      "offset": [
        11852,
        11859
      ],
      "op": "DUP5",
      "path": "10"
    },
    "7163": {
      "fn": "Gauge._deposit",
      "offset": [
        11852,
        11859
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7164": {
      "fn": "Gauge._deposit",
      "offset": [
        11834,
        11859
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2714"
    },
    "7167": {
      "fn": "Gauge._deposit",
      "jump": "i",
      "offset": [
        11834,
        11859
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7168": {
      "fn": "Gauge._deposit",
      "offset": [
        11834,
        11859
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7173": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7175": {
      "op": "SHL"
    },
    "7176": {
      "op": "SUB"
    },
    "7177": {
      "fn": "Gauge._deposit",
      "offset": [
        11816,
        11831
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7178": {
      "fn": "Gauge._deposit",
      "offset": [
        11816,
        11831
      ],
      "op": "DUP7",
      "path": "10"
    },
    "7179": {
      "fn": "Gauge._deposit",
      "offset": [
        11816,
        11831
      ],
      "op": "AND",
      "path": "10"
    },
    "7180": {
      "fn": "Gauge._deposit",
      "offset": [
        11816,
        11831
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7182": {
      "fn": "Gauge._deposit",
      "offset": [
        11816,
        11831
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7183": {
      "fn": "Gauge._deposit",
      "offset": [
        11816,
        11831
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7184": {
      "fn": "Gauge._deposit",
      "offset": [
        11816,
        11831
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7185": {
      "fn": "Gauge._deposit",
      "offset": [
        11816,
        11825
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x12"
    },
    "7187": {
      "fn": "Gauge._deposit",
      "offset": [
        11816,
        11831
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "7189": {
      "fn": "Gauge._deposit",
      "offset": [
        11816,
        11831
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7190": {
      "fn": "Gauge._deposit",
      "offset": [
        11816,
        11831
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7192": {
      "fn": "Gauge._deposit",
      "offset": [
        11816,
        11831
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7193": {
      "fn": "Gauge._deposit",
      "offset": [
        11816,
        11831
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "7194": {
      "fn": "Gauge._deposit",
      "offset": [
        11816,
        11859
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7195": {
      "fn": "Gauge._deposit",
      "offset": [
        11816,
        11859
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7196": {
      "fn": "Gauge._deposit",
      "offset": [
        11816,
        11859
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7197": {
      "fn": "Gauge._deposit",
      "offset": [
        11816,
        11859
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "7198": {
      "fn": "Gauge._deposit",
      "offset": [
        11902,
        11914
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 104,
      "value": "0xC"
    },
    "7200": {
      "fn": "Gauge._deposit",
      "offset": [
        11902,
        11914
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7201": {
      "fn": "Gauge._deposit",
      "offset": [
        11902,
        11967
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1C2D"
    },
    "7204": {
      "fn": "Gauge._deposit",
      "offset": [
        11902,
        11967
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7205": {
      "fn": "Gauge._deposit",
      "offset": [
        11902,
        11914
      ],
      "op": "AND",
      "path": "10"
    },
    "7206": {
      "fn": "Gauge._deposit",
      "offset": [
        11932,
        11942
      ],
      "op": "CALLER",
      "path": "10"
    },
    "7207": {
      "fn": "Gauge._deposit",
      "offset": [
        11952,
        11956
      ],
      "op": "ADDRESS",
      "path": "10"
    },
    "7208": {
      "fn": "Gauge._deposit",
      "offset": [
        11959,
        11966
      ],
      "op": "DUP7",
      "path": "10"
    },
    "7209": {
      "fn": "Gauge._deposit",
      "offset": [
        11902,
        11931
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2029"
    },
    "7212": {
      "fn": "Gauge._deposit",
      "jump": "i",
      "offset": [
        11902,
        11967
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7213": {
      "fn": "Gauge._deposit",
      "offset": [
        11902,
        11967
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7214": {
      "fn": "Gauge._deposit",
      "offset": [
        11989,
        11993
      ],
      "op": "DUP4",
      "path": "10",
      "statement": 105
    },
    "7215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7219": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7221": {
      "op": "SHL"
    },
    "7222": {
      "op": "SUB"
    },
    "7223": {
      "fn": "Gauge._deposit",
      "offset": [
        11982,
        12003
      ],
      "op": "AND",
      "path": "10"
    },
    "7224": {
      "fn": "Gauge._deposit",
      "offset": [
        11982,
        12003
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
    },
    "7257": {
      "fn": "Gauge._deposit",
      "offset": [
        11995,
        12002
      ],
      "op": "DUP5",
      "path": "10"
    },
    "7258": {
      "fn": "Gauge._deposit",
      "offset": [
        11982,
        12003
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7260": {
      "fn": "Gauge._deposit",
      "offset": [
        11982,
        12003
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7261": {
      "fn": "Gauge._deposit",
      "offset": [
        11982,
        12003
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1C68"
    },
    "7264": {
      "fn": "Gauge._deposit",
      "offset": [
        11982,
        12003
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7265": {
      "op": "DUP2"
    },
    "7266": {
      "op": "MSTORE"
    },
    "7267": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7269": {
      "op": "ADD"
    },
    "7270": {
      "op": "SWAP1"
    },
    "7271": {
      "op": "JUMP"
    },
    "7272": {
      "fn": "Gauge._deposit",
      "offset": [
        11982,
        12003
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7273": {
      "fn": "Gauge._deposit",
      "offset": [
        11982,
        12003
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7275": {
      "fn": "Gauge._deposit",
      "offset": [
        11982,
        12003
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7276": {
      "fn": "Gauge._deposit",
      "offset": [
        11982,
        12003
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7277": {
      "fn": "Gauge._deposit",
      "offset": [
        11982,
        12003
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7278": {
      "fn": "Gauge._deposit",
      "offset": [
        11982,
        12003
      ],
      "op": "SUB",
      "path": "10"
    },
    "7279": {
      "fn": "Gauge._deposit",
      "offset": [
        11982,
        12003
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7280": {
      "fn": "Gauge._deposit",
      "offset": [
        11982,
        12003
      ],
      "op": "LOG2",
      "path": "10"
    },
    "7281": {
      "fn": "Gauge._deposit",
      "offset": [
        11461,
        12010
      ],
      "op": "POP",
      "path": "10"
    },
    "7282": {
      "fn": "Gauge._deposit",
      "offset": [
        11364,
        12010
      ],
      "op": "POP",
      "path": "10"
    },
    "7283": {
      "fn": "Gauge._deposit",
      "offset": [
        11364,
        12010
      ],
      "op": "POP",
      "path": "10"
    },
    "7284": {
      "fn": "Gauge._deposit",
      "offset": [
        11364,
        12010
      ],
      "op": "POP",
      "path": "10"
    },
    "7285": {
      "fn": "Gauge._deposit",
      "jump": "o",
      "offset": [
        11364,
        12010
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7286": {
      "fn": "Gauge._updateReward",
      "offset": [
        5905,
        6995
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7287": {
      "fn": "Gauge._updateReward",
      "offset": [
        5996,
        6013
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 106,
      "value": "0x1C7E"
    },
    "7290": {
      "fn": "Gauge._updateReward",
      "offset": [
        5996,
        6011
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2242"
    },
    "7293": {
      "fn": "Gauge._updateReward",
      "jump": "i",
      "offset": [
        5996,
        6013
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7294": {
      "fn": "Gauge._updateReward",
      "offset": [
        5996,
        6013
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7295": {
      "fn": "Gauge._updateReward",
      "offset": [
        5973,
        5993
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "7297": {
      "fn": "Gauge._updateReward",
      "offset": [
        5973,
        6013
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "7298": {
      "fn": "Gauge._updateReward",
      "offset": [
        6040,
        6066
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 107,
      "value": "0x1C89"
    },
    "7301": {
      "fn": "Gauge._updateReward",
      "offset": [
        6040,
        6064
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE28"
    },
    "7304": {
      "fn": "Gauge._updateReward",
      "jump": "i",
      "offset": [
        6040,
        6066
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7305": {
      "fn": "Gauge._updateReward",
      "offset": [
        6040,
        6066
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7306": {
      "fn": "Gauge._updateReward",
      "offset": [
        6023,
        6037
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "7308": {
      "fn": "Gauge._updateReward",
      "offset": [
        6023,
        6066
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "7309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7315": {
      "op": "SHL"
    },
    "7316": {
      "op": "SUB"
    },
    "7317": {
      "fn": "Gauge._updateReward",
      "offset": [
        6080,
        6101
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7318": {
      "fn": "Gauge._updateReward",
      "offset": [
        6080,
        6101
      ],
      "op": "AND",
      "path": "10"
    },
    "7319": {
      "branch": 164,
      "fn": "Gauge._updateReward",
      "offset": [
        6080,
        6101
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "7320": {
      "fn": "Gauge._updateReward",
      "offset": [
        6076,
        6989
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1616"
    },
    "7323": {
      "branch": 164,
      "fn": "Gauge._updateReward",
      "offset": [
        6076,
        6989
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7328": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7330": {
      "op": "SHL"
    },
    "7331": {
      "op": "SUB"
    },
    "7332": {
      "fn": "Gauge._updateReward",
      "offset": [
        6121,
        6139
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7333": {
      "fn": "Gauge._updateReward",
      "offset": [
        6121,
        6139
      ],
      "op": "AND",
      "path": "10"
    },
    "7334": {
      "fn": "Gauge._updateReward",
      "offset": [
        6121,
        6139
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7336": {
      "fn": "Gauge._updateReward",
      "offset": [
        6121,
        6139
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7337": {
      "fn": "Gauge._updateReward",
      "offset": [
        6121,
        6139
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7338": {
      "fn": "Gauge._updateReward",
      "offset": [
        6121,
        6139
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7339": {
      "fn": "Gauge._updateReward",
      "offset": [
        6121,
        6130
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x12"
    },
    "7341": {
      "fn": "Gauge._updateReward",
      "offset": [
        6121,
        6139
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "7343": {
      "fn": "Gauge._updateReward",
      "offset": [
        6121,
        6139
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7344": {
      "fn": "Gauge._updateReward",
      "offset": [
        6121,
        6139
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7346": {
      "fn": "Gauge._updateReward",
      "offset": [
        6121,
        6139
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7347": {
      "fn": "Gauge._updateReward",
      "offset": [
        6121,
        6139
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "7348": {
      "fn": "Gauge._updateReward",
      "offset": [
        6121,
        6139
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7349": {
      "branch": 165,
      "fn": "Gauge._updateReward",
      "offset": [
        6121,
        6144
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "7350": {
      "fn": "Gauge._updateReward",
      "offset": [
        6117,
        6686
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1D7B"
    },
    "7353": {
      "branch": 165,
      "fn": "Gauge._updateReward",
      "offset": [
        6117,
        6686
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7354": {
      "fn": "Gauge._updateReward",
      "offset": [
        6164,
        6182
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7356": {
      "fn": "Gauge._updateReward",
      "offset": [
        6185,
        6205
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1CC4"
    },
    "7359": {
      "fn": "Gauge._updateReward",
      "offset": [
        6197,
        6204
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7360": {
      "fn": "Gauge._updateReward",
      "offset": [
        6185,
        6196
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x16EB"
    },
    "7363": {
      "fn": "Gauge._updateReward",
      "jump": "i",
      "offset": [
        6185,
        6205
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7364": {
      "fn": "Gauge._updateReward",
      "offset": [
        6185,
        6205
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7365": {
      "fn": "Gauge._updateReward",
      "offset": [
        6164,
        6205
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7366": {
      "fn": "Gauge._updateReward",
      "offset": [
        6164,
        6205
      ],
      "op": "POP",
      "path": "10"
    },
    "7367": {
      "fn": "Gauge._updateReward",
      "offset": [
        6223,
        6241
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7369": {
      "fn": "Gauge._updateReward",
      "offset": [
        6244,
        6264
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1CD1"
    },
    "7372": {
      "fn": "Gauge._updateReward",
      "offset": [
        6256,
        6263
      ],
      "op": "DUP4",
      "path": "10"
    },
    "7373": {
      "fn": "Gauge._updateReward",
      "offset": [
        6244,
        6255
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2378"
    },
    "7376": {
      "fn": "Gauge._updateReward",
      "jump": "i",
      "offset": [
        6244,
        6264
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7377": {
      "fn": "Gauge._updateReward",
      "offset": [
        6244,
        6264
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7378": {
      "fn": "Gauge._updateReward",
      "offset": [
        6223,
        6264
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7379": {
      "fn": "Gauge._updateReward",
      "offset": [
        6223,
        6264
      ],
      "op": "POP",
      "path": "10"
    },
    "7380": {
      "fn": "Gauge._updateReward",
      "offset": [
        6283,
        6298
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7382": {
      "offset": [
        1131,
        1136
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0xF4240"
    },
    "7386": {
      "fn": "Gauge._updateReward",
      "offset": [
        6367,
        6377
      ],
      "op": "DUP4",
      "path": "10"
    },
    "7387": {
      "fn": "Gauge._updateReward",
      "offset": [
        6321,
        6343
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1CE3"
    },
    "7390": {
      "fn": "Gauge._updateReward",
      "offset": [
        6335,
        6342
      ],
      "op": "DUP7",
      "path": "10"
    },
    "7391": {
      "fn": "Gauge._updateReward",
      "offset": [
        6321,
        6334
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x173D"
    },
    "7394": {
      "fn": "Gauge._updateReward",
      "jump": "i",
      "offset": [
        6321,
        6343
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7395": {
      "fn": "Gauge._updateReward",
      "offset": [
        6321,
        6343
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7396": {
      "fn": "Gauge._updateReward",
      "offset": [
        6303,
        6343
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1CF0"
    },
    "7399": {
      "fn": "Gauge._updateReward",
      "offset": [
        6303,
        6343
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7400": {
      "offset": [
        1131,
        1136
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0xF4240"
    },
    "7404": {
      "fn": "Gauge._updateReward",
      "offset": [
        6303,
        6343
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x280C"
    },
    "7407": {
      "fn": "Gauge._updateReward",
      "jump": "i",
      "offset": [
        6303,
        6343
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7408": {
      "fn": "Gauge._updateReward",
      "offset": [
        6303,
        6343
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7409": {
      "fn": "Gauge._updateReward",
      "offset": [
        6302,
        6377
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1CFA"
    },
    "7412": {
      "fn": "Gauge._updateReward",
      "offset": [
        6302,
        6377
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7413": {
      "fn": "Gauge._updateReward",
      "offset": [
        6302,
        6377
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7414": {
      "fn": "Gauge._updateReward",
      "offset": [
        6302,
        6377
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26D3"
    },
    "7417": {
      "fn": "Gauge._updateReward",
      "jump": "i",
      "offset": [
        6302,
        6377
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7418": {
      "fn": "Gauge._updateReward",
      "offset": [
        6302,
        6377
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7419": {
      "fn": "Gauge._updateReward",
      "offset": [
        6301,
        6396
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1D04"
    },
    "7422": {
      "fn": "Gauge._updateReward",
      "offset": [
        6301,
        6396
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7423": {
      "fn": "Gauge._updateReward",
      "offset": [
        6301,
        6396
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7424": {
      "fn": "Gauge._updateReward",
      "offset": [
        6301,
        6396
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26F2"
    },
    "7427": {
      "fn": "Gauge._updateReward",
      "jump": "i",
      "offset": [
        6301,
        6396
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7428": {
      "fn": "Gauge._updateReward",
      "offset": [
        6301,
        6396
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7429": {
      "fn": "Gauge._updateReward",
      "offset": [
        6283,
        6396
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7430": {
      "op": "POP"
    },
    "7431": {
      "fn": "Gauge._updateReward",
      "offset": [
        6436,
        6456
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 108,
      "value": "0x1D10"
    },
    "7434": {
      "fn": "Gauge._updateReward",
      "offset": [
        6283,
        6396
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7435": {
      "fn": "Gauge._updateReward",
      "offset": [
        6436,
        6446
      ],
      "op": "DUP5",
      "path": "10"
    },
    "7436": {
      "fn": "Gauge._updateReward",
      "offset": [
        6436,
        6456
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x280C"
    },
    "7439": {
      "fn": "Gauge._updateReward",
      "jump": "i",
      "offset": [
        6436,
        6456
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7440": {
      "fn": "Gauge._updateReward",
      "offset": [
        6436,
        6456
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7445": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7447": {
      "op": "SHL"
    },
    "7448": {
      "op": "SUB"
    },
    "7449": {
      "fn": "Gauge._updateReward",
      "offset": [
        6415,
        6431
      ],
      "op": "DUP6",
      "path": "10"
    },
    "7450": {
      "fn": "Gauge._updateReward",
      "offset": [
        6415,
        6431
      ],
      "op": "AND",
      "path": "10"
    },
    "7451": {
      "fn": "Gauge._updateReward",
      "offset": [
        6415,
        6431
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7453": {
      "fn": "Gauge._updateReward",
      "offset": [
        6415,
        6431
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7454": {
      "fn": "Gauge._updateReward",
      "offset": [
        6415,
        6431
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7455": {
      "fn": "Gauge._updateReward",
      "offset": [
        6415,
        6431
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7456": {
      "fn": "Gauge._updateReward",
      "offset": [
        6415,
        6422
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xB"
    },
    "7458": {
      "fn": "Gauge._updateReward",
      "offset": [
        6415,
        6431
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "7460": {
      "fn": "Gauge._updateReward",
      "offset": [
        6415,
        6431
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7461": {
      "fn": "Gauge._updateReward",
      "offset": [
        6415,
        6431
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7463": {
      "fn": "Gauge._updateReward",
      "offset": [
        6415,
        6431
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7464": {
      "fn": "Gauge._updateReward",
      "offset": [
        6415,
        6431
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "7465": {
      "fn": "Gauge._updateReward",
      "offset": [
        6415,
        6457
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7466": {
      "fn": "Gauge._updateReward",
      "offset": [
        6415,
        6457
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7467": {
      "fn": "Gauge._updateReward",
      "offset": [
        6415,
        6431
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7468": {
      "fn": "Gauge._updateReward",
      "offset": [
        6415,
        6431
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7469": {
      "fn": "Gauge._updateReward",
      "offset": [
        6415,
        6431
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7470": {
      "fn": "Gauge._updateReward",
      "offset": [
        6415,
        6457
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1D38"
    },
    "7473": {
      "fn": "Gauge._updateReward",
      "offset": [
        6415,
        6457
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7474": {
      "fn": "Gauge._updateReward",
      "offset": [
        6415,
        6457
      ],
      "op": "DUP5",
      "path": "10"
    },
    "7475": {
      "fn": "Gauge._updateReward",
      "offset": [
        6415,
        6457
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7476": {
      "fn": "Gauge._updateReward",
      "offset": [
        6415,
        6457
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2714"
    },
    "7479": {
      "fn": "Gauge._updateReward",
      "jump": "i",
      "offset": [
        6415,
        6457
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7480": {
      "fn": "Gauge._updateReward",
      "offset": [
        6415,
        6457
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7481": {
      "fn": "Gauge._updateReward",
      "offset": [
        6415,
        6457
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "7482": {
      "fn": "Gauge._updateReward",
      "offset": [
        6415,
        6457
      ],
      "op": "POP",
      "path": "10"
    },
    "7483": {
      "fn": "Gauge._updateReward",
      "offset": [
        6415,
        6457
      ],
      "op": "POP",
      "path": "10"
    },
    "7484": {
      "fn": "Gauge._updateReward",
      "offset": [
        6415,
        6457
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7485": {
      "fn": "Gauge._updateReward",
      "offset": [
        6415,
        6457
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7486": {
      "fn": "Gauge._updateReward",
      "offset": [
        6415,
        6457
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "7487": {
      "fn": "Gauge._updateReward",
      "offset": [
        6415,
        6457
      ],
      "op": "POP",
      "path": "10"
    },
    "7488": {
      "fn": "Gauge._updateReward",
      "offset": [
        6492,
        6499
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 109
    },
    "7489": {
      "fn": "Gauge._updateReward",
      "offset": [
        6475,
        6488
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x10"
    },
    "7491": {
      "fn": "Gauge._updateReward",
      "offset": [
        6475,
        6488
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7493": {
      "fn": "Gauge._updateReward",
      "offset": [
        6475,
        6499
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7494": {
      "fn": "Gauge._updateReward",
      "offset": [
        6475,
        6499
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7495": {
      "fn": "Gauge._updateReward",
      "offset": [
        6475,
        6499
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7496": {
      "fn": "Gauge._updateReward",
      "offset": [
        6475,
        6499
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1D51"
    },
    "7499": {
      "fn": "Gauge._updateReward",
      "offset": [
        6475,
        6499
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7500": {
      "fn": "Gauge._updateReward",
      "offset": [
        6475,
        6499
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7501": {
      "fn": "Gauge._updateReward",
      "offset": [
        6475,
        6499
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2714"
    },
    "7504": {
      "fn": "Gauge._updateReward",
      "jump": "i",
      "offset": [
        6475,
        6499
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7505": {
      "fn": "Gauge._updateReward",
      "offset": [
        6475,
        6499
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7506": {
      "fn": "Gauge._updateReward",
      "offset": [
        6475,
        6499
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7507": {
      "fn": "Gauge._updateReward",
      "offset": [
        6475,
        6499
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7508": {
      "fn": "Gauge._updateReward",
      "offset": [
        6475,
        6499
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "7509": {
      "op": "POP"
    },
    "7510": {
      "fn": "Gauge._updateReward",
      "offset": [
        6647,
        6670
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 110,
      "value": "0x1D61"
    },
    "7513": {
      "fn": "Gauge._updateReward",
      "offset": [
        6647,
        6670
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7514": {
      "op": "POP"
    },
    "7515": {
      "fn": "Gauge._updateReward",
      "offset": [
        6660,
        6670
      ],
      "op": "DUP4",
      "path": "10"
    },
    "7516": {
      "fn": "Gauge._updateReward",
      "offset": [
        6647,
        6657
      ],
      "op": "DUP4",
      "path": "10"
    },
    "7517": {
      "fn": "Gauge._updateReward",
      "offset": [
        6647,
        6670
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x280C"
    },
    "7520": {
      "fn": "Gauge._updateReward",
      "jump": "i",
      "offset": [
        6647,
        6670
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7521": {
      "fn": "Gauge._updateReward",
      "offset": [
        6647,
        6670
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7522": {
      "fn": "Gauge._updateReward",
      "offset": [
        6629,
        6642
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "7524": {
      "fn": "Gauge._updateReward",
      "offset": [
        6629,
        6642
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7526": {
      "fn": "Gauge._updateReward",
      "offset": [
        6629,
        6671
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7527": {
      "fn": "Gauge._updateReward",
      "offset": [
        6629,
        6671
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7528": {
      "fn": "Gauge._updateReward",
      "offset": [
        6629,
        6671
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7529": {
      "fn": "Gauge._updateReward",
      "offset": [
        6629,
        6671
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1D72"
    },
    "7532": {
      "fn": "Gauge._updateReward",
      "offset": [
        6629,
        6671
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7533": {
      "fn": "Gauge._updateReward",
      "offset": [
        6629,
        6671
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7534": {
      "fn": "Gauge._updateReward",
      "offset": [
        6629,
        6671
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2714"
    },
    "7537": {
      "fn": "Gauge._updateReward",
      "jump": "i",
      "offset": [
        6629,
        6671
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7538": {
      "fn": "Gauge._updateReward",
      "offset": [
        6629,
        6671
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7539": {
      "fn": "Gauge._updateReward",
      "offset": [
        6629,
        6671
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7540": {
      "fn": "Gauge._updateReward",
      "offset": [
        6629,
        6671
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7541": {
      "fn": "Gauge._updateReward",
      "offset": [
        6629,
        6671
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "7542": {
      "op": "POP"
    },
    "7543": {
      "op": "POP"
    },
    "7544": {
      "op": "POP"
    },
    "7545": {
      "op": "POP"
    },
    "7546": {
      "op": "POP"
    },
    "7547": {
      "fn": "Gauge._updateReward",
      "offset": [
        6117,
        6686
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7548": {
      "fn": "Gauge._updateReward",
      "offset": [
        6733,
        6753
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 111,
      "value": "0x6"
    },
    "7550": {
      "fn": "Gauge._updateReward",
      "offset": [
        6733,
        6753
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7555": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7557": {
      "op": "SHL"
    },
    "7558": {
      "op": "SUB"
    },
    "7559": {
      "fn": "Gauge._updateReward",
      "offset": [
        6699,
        6730
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7560": {
      "fn": "Gauge._updateReward",
      "offset": [
        6699,
        6730
      ],
      "op": "AND",
      "path": "10"
    },
    "7561": {
      "fn": "Gauge._updateReward",
      "offset": [
        6699,
        6730
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7563": {
      "fn": "Gauge._updateReward",
      "offset": [
        6699,
        6730
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7564": {
      "fn": "Gauge._updateReward",
      "offset": [
        6699,
        6730
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7565": {
      "fn": "Gauge._updateReward",
      "offset": [
        6699,
        6730
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7566": {
      "fn": "Gauge._updateReward",
      "offset": [
        6699,
        6721
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "7568": {
      "fn": "Gauge._updateReward",
      "offset": [
        6699,
        6730
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "7570": {
      "fn": "Gauge._updateReward",
      "offset": [
        6699,
        6730
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7571": {
      "fn": "Gauge._updateReward",
      "offset": [
        6699,
        6730
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7572": {
      "fn": "Gauge._updateReward",
      "offset": [
        6699,
        6730
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7573": {
      "fn": "Gauge._updateReward",
      "offset": [
        6699,
        6730
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7575": {
      "fn": "Gauge._updateReward",
      "offset": [
        6699,
        6730
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7576": {
      "fn": "Gauge._updateReward",
      "offset": [
        6699,
        6730
      ],
      "op": "DUP5",
      "path": "10"
    },
    "7577": {
      "fn": "Gauge._updateReward",
      "offset": [
        6699,
        6730
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "7578": {
      "fn": "Gauge._updateReward",
      "offset": [
        6699,
        6753
      ],
      "op": "DUP7",
      "path": "10"
    },
    "7579": {
      "fn": "Gauge._updateReward",
      "offset": [
        6699,
        6753
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7580": {
      "fn": "Gauge._updateReward",
      "offset": [
        6699,
        6753
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "7581": {
      "fn": "Gauge._updateReward",
      "offset": [
        6867,
        6881
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 112,
      "value": "0x5"
    },
    "7583": {
      "fn": "Gauge._updateReward",
      "offset": [
        6867,
        6881
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7584": {
      "fn": "Gauge._updateReward",
      "offset": [
        6899,
        6906
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xB"
    },
    "7586": {
      "fn": "Gauge._updateReward",
      "offset": [
        6899,
        6915
      ],
      "op": "DUP4",
      "path": "10"
    },
    "7587": {
      "fn": "Gauge._updateReward",
      "offset": [
        6899,
        6915
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7588": {
      "fn": "Gauge._updateReward",
      "offset": [
        6899,
        6915
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "7589": {
      "fn": "Gauge._updateReward",
      "offset": [
        6899,
        6915
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7590": {
      "fn": "Gauge._updateReward",
      "offset": [
        6899,
        6915
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7591": {
      "fn": "Gauge._updateReward",
      "offset": [
        6899,
        6915
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "7592": {
      "fn": "Gauge._updateReward",
      "offset": [
        6899,
        6915
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7593": {
      "fn": "Gauge._updateReward",
      "offset": [
        6933,
        6964
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "7594": {
      "fn": "Gauge._updateReward",
      "offset": [
        6933,
        6964
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7595": {
      "fn": "Gauge._updateReward",
      "offset": [
        6933,
        6964
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7596": {
      "fn": "Gauge._updateReward",
      "offset": [
        6772,
        6978
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7597": {
      "fn": "Gauge._updateReward",
      "offset": [
        6772,
        6978
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7598": {
      "op": "SWAP5"
    },
    "7599": {
      "op": "DUP6"
    },
    "7600": {
      "op": "MSTORE"
    },
    "7601": {
      "op": "SWAP1"
    },
    "7602": {
      "op": "DUP5"
    },
    "7603": {
      "op": "ADD"
    },
    "7604": {
      "op": "DUP6"
    },
    "7605": {
      "op": "SWAP1"
    },
    "7606": {
      "op": "MSTORE"
    },
    "7607": {
      "op": "DUP4"
    },
    "7608": {
      "op": "ADD"
    },
    "7609": {
      "op": "SWAP2"
    },
    "7610": {
      "op": "SWAP1"
    },
    "7611": {
      "op": "SWAP2"
    },
    "7612": {
      "op": "MSTORE"
    },
    "7613": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7615": {
      "op": "DUP3"
    },
    "7616": {
      "op": "ADD"
    },
    "7617": {
      "op": "MSTORE"
    },
    "7618": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7620": {
      "op": "DUP2"
    },
    "7621": {
      "op": "ADD"
    },
    "7622": {
      "op": "SWAP2"
    },
    "7623": {
      "op": "SWAP1"
    },
    "7624": {
      "op": "SWAP2"
    },
    "7625": {
      "op": "MSTORE"
    },
    "7626": {
      "fn": "Gauge._updateReward",
      "offset": [
        6772,
        6978
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0xFBE590C835E1C07F8E971C36021D1BE46F43F7B0B6DC5413DBD5753590569D58"
    },
    "7659": {
      "fn": "Gauge._updateReward",
      "offset": [
        6772,
        6978
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7660": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7662": {
      "op": "ADD"
    },
    "7663": {
      "fn": "Gauge._updateReward",
      "offset": [
        6772,
        6978
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE1D"
    },
    "7666": {
      "op": "JUMP"
    },
    "7667": {
      "fn": "Gauge._getReward",
      "offset": [
        15529,
        16334
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7672": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7674": {
      "op": "SHL"
    },
    "7675": {
      "op": "SUB"
    },
    "7676": {
      "fn": "Gauge._getReward",
      "offset": [
        15664,
        15681
      ],
      "op": "DUP4",
      "path": "10"
    },
    "7677": {
      "fn": "Gauge._getReward",
      "offset": [
        15664,
        15681
      ],
      "op": "AND",
      "path": "10"
    },
    "7678": {
      "fn": "Gauge._getReward",
      "offset": [
        15647,
        15661
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7680": {
      "fn": "Gauge._getReward",
      "offset": [
        15664,
        15681
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7681": {
      "fn": "Gauge._getReward",
      "offset": [
        15664,
        15681
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7682": {
      "fn": "Gauge._getReward",
      "offset": [
        15664,
        15681
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7683": {
      "fn": "Gauge._getReward",
      "offset": [
        15664,
        15671
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xB"
    },
    "7685": {
      "fn": "Gauge._getReward",
      "offset": [
        15664,
        15681
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "7687": {
      "fn": "Gauge._getReward",
      "offset": [
        15664,
        15681
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7688": {
      "fn": "Gauge._getReward",
      "offset": [
        15664,
        15681
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7690": {
      "fn": "Gauge._getReward",
      "offset": [
        15664,
        15681
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7691": {
      "fn": "Gauge._getReward",
      "offset": [
        15664,
        15681
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "7692": {
      "fn": "Gauge._getReward",
      "offset": [
        15664,
        15681
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7693": {
      "fn": "Gauge._getReward",
      "offset": [
        15695,
        15705
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7694": {
      "branch": 166,
      "fn": "Gauge._getReward",
      "offset": [
        15695,
        15705
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "7695": {
      "fn": "Gauge._getReward",
      "offset": [
        15691,
        16056
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1F6F"
    },
    "7698": {
      "branch": 166,
      "fn": "Gauge._getReward",
      "offset": [
        15691,
        16056
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7703": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7705": {
      "op": "SHL"
    },
    "7706": {
      "op": "SUB"
    },
    "7707": {
      "fn": "Gauge._getReward",
      "offset": [
        15721,
        15738
      ],
      "op": "DUP5",
      "path": "10",
      "statement": 113
    },
    "7708": {
      "fn": "Gauge._getReward",
      "offset": [
        15721,
        15738
      ],
      "op": "AND",
      "path": "10"
    },
    "7709": {
      "fn": "Gauge._getReward",
      "offset": [
        15741,
        15742
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7711": {
      "fn": "Gauge._getReward",
      "offset": [
        15721,
        15738
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7712": {
      "fn": "Gauge._getReward",
      "offset": [
        15721,
        15738
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7713": {
      "fn": "Gauge._getReward",
      "offset": [
        15721,
        15738
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7714": {
      "fn": "Gauge._getReward",
      "offset": [
        15721,
        15728
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xB"
    },
    "7716": {
      "fn": "Gauge._getReward",
      "offset": [
        15721,
        15738
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "7718": {
      "fn": "Gauge._getReward",
      "offset": [
        15721,
        15738
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7719": {
      "fn": "Gauge._getReward",
      "offset": [
        15721,
        15738
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7721": {
      "fn": "Gauge._getReward",
      "offset": [
        15721,
        15738
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7722": {
      "fn": "Gauge._getReward",
      "offset": [
        15721,
        15738
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "7723": {
      "fn": "Gauge._getReward",
      "offset": [
        15721,
        15742
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "7724": {
      "fn": "Gauge._getReward",
      "offset": [
        15756,
        15998
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7725": {
      "fn": "Gauge._getReward",
      "offset": [
        15756,
        15998
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "7726": {
      "fn": "Gauge._getReward",
      "offset": [
        15756,
        15998
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1F14"
    },
    "7729": {
      "fn": "Gauge._getReward",
      "offset": [
        15756,
        15998
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7730": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15796
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 114,
      "value": "0x1"
    },
    "7732": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15796
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7733": {
      "fn": "Gauge._getReward",
      "offset": [
        15813,
        15820
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xD"
    },
    "7735": {
      "fn": "Gauge._getReward",
      "offset": [
        15813,
        15820
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7736": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7738": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7739": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "7744": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7746": {
      "op": "SHL"
    },
    "7747": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7748": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7753": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7755": {
      "op": "SHL"
    },
    "7756": {
      "op": "SUB"
    },
    "7757": {
      "fn": "Gauge._getReward",
      "offset": [
        15813,
        15820
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7758": {
      "fn": "Gauge._getReward",
      "offset": [
        15813,
        15820
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7759": {
      "fn": "Gauge._getReward",
      "offset": [
        15813,
        15820
      ],
      "op": "AND",
      "path": "10"
    },
    "7760": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "7762": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7763": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "ADD",
      "path": "10"
    },
    "7764": {
      "op": "MSTORE"
    },
    "7765": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7767": {
      "op": "DUP2"
    },
    "7768": {
      "op": "ADD"
    },
    "7769": {
      "op": "DUP5"
    },
    "7770": {
      "op": "SWAP1"
    },
    "7771": {
      "op": "MSTORE"
    },
    "7772": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15796
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7773": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15796
      ],
      "op": "AND",
      "path": "10"
    },
    "7774": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15796
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7775": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15804
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x95EA7B3"
    },
    "7780": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15804
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7781": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7783": {
      "op": "ADD"
    },
    "7784": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "7786": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7788": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7789": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7790": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "DUP4",
      "path": "10"
    },
    "7791": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "SUB",
      "path": "10"
    },
    "7792": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7793": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7795": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "DUP8",
      "path": "10"
    },
    "7796": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "GAS",
      "path": "10"
    },
    "7797": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "CALL",
      "path": "10"
    },
    "7798": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "7799": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7800": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "7801": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1E86"
    },
    "7804": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7805": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "7806": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7808": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7809": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "7810": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "7811": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7813": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "REVERT",
      "path": "10"
    },
    "7814": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7815": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "POP",
      "path": "10"
    },
    "7816": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "POP",
      "path": "10"
    },
    "7817": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "POP",
      "path": "10"
    },
    "7818": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "POP",
      "path": "10"
    },
    "7819": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7821": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7822": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "7823": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "7825": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "NOT",
      "path": "10"
    },
    "7826": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "7828": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7829": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "ADD",
      "path": "10"
    },
    "7830": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "AND",
      "path": "10"
    },
    "7831": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7832": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "ADD",
      "path": "10"
    },
    "7833": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7834": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7836": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7837": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "POP",
      "path": "10"
    },
    "7838": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7839": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "ADD",
      "path": "10"
    },
    "7840": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7841": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1EAA"
    },
    "7844": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7845": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7846": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x27EF"
    },
    "7849": {
      "fn": "Gauge._getReward",
      "jump": "i",
      "offset": [
        15785,
        15830
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7850": {
      "fn": "Gauge._getReward",
      "offset": [
        15785,
        15830
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7851": {
      "op": "POP"
    },
    "7852": {
      "fn": "Gauge._getReward",
      "offset": [
        15862,
        15869
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 115,
      "value": "0xD"
    },
    "7854": {
      "fn": "Gauge._getReward",
      "offset": [
        15862,
        15869
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7855": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7857": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7858": {
      "op": "PUSH4",
      "value": "0x1D23139F"
    },
    "7863": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7865": {
      "op": "SHL"
    },
    "7866": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7867": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7868": {
      "fn": "Gauge._getReward",
      "offset": [
        15883,
        15893
      ],
      "op": "CALLER",
      "path": "10"
    },
    "7869": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "7871": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7872": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "ADD",
      "path": "10"
    },
    "7873": {
      "op": "MSTORE"
    },
    "7874": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7876": {
      "op": "DUP2"
    },
    "7877": {
      "op": "ADD"
    },
    "7878": {
      "op": "DUP4"
    },
    "7879": {
      "op": "SWAP1"
    },
    "7880": {
      "op": "MSTORE"
    },
    "7881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7885": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7887": {
      "op": "SHL"
    },
    "7888": {
      "op": "SUB"
    },
    "7889": {
      "fn": "Gauge._getReward",
      "offset": [
        15862,
        15869
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7890": {
      "fn": "Gauge._getReward",
      "offset": [
        15862,
        15869
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7891": {
      "fn": "Gauge._getReward",
      "offset": [
        15862,
        15869
      ],
      "op": "AND",
      "path": "10"
    },
    "7892": {
      "fn": "Gauge._getReward",
      "offset": [
        15862,
        15869
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7893": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15882
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x3A46273E"
    },
    "7898": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15882
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7899": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7901": {
      "op": "ADD"
    },
    "7902": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7904": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7906": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7907": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7908": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "DUP4",
      "path": "10"
    },
    "7909": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "SUB",
      "path": "10"
    },
    "7910": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7911": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7913": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "DUP8",
      "path": "10"
    },
    "7914": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7915": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "7916": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "7917": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7918": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "7919": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1EF7"
    },
    "7922": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7923": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7925": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7926": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "REVERT",
      "path": "10"
    },
    "7927": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7928": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "POP",
      "path": "10"
    },
    "7929": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "GAS",
      "path": "10"
    },
    "7930": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "CALL",
      "path": "10"
    },
    "7931": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "7932": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7933": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "7934": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1F0B"
    },
    "7937": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7938": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "7939": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7941": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7942": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "7943": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "7944": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7946": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "REVERT",
      "path": "10"
    },
    "7947": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7948": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "POP",
      "path": "10"
    },
    "7949": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "POP",
      "path": "10"
    },
    "7950": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "POP",
      "path": "10"
    },
    "7951": {
      "fn": "Gauge._getReward",
      "offset": [
        15848,
        15902
      ],
      "op": "POP",
      "path": "10"
    },
    "7952": {
      "fn": "Gauge._getReward",
      "offset": [
        15756,
        15998
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1F2B"
    },
    "7955": {
      "fn": "Gauge._getReward",
      "offset": [
        15756,
        15998
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7956": {
      "fn": "Gauge._getReward",
      "offset": [
        15756,
        15998
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7957": {
      "fn": "Gauge._getReward",
      "offset": [
        15941,
        15952
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 116,
      "value": "0x1"
    },
    "7959": {
      "fn": "Gauge._getReward",
      "offset": [
        15941,
        15952
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7960": {
      "fn": "Gauge._getReward",
      "offset": [
        15941,
        15983
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1F2B"
    },
    "7963": {
      "fn": "Gauge._getReward",
      "offset": [
        15941,
        15983
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7968": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7970": {
      "op": "SHL"
    },
    "7971": {
      "op": "SUB"
    },
    "7972": {
      "fn": "Gauge._getReward",
      "offset": [
        15941,
        15952
      ],
      "op": "AND",
      "path": "10"
    },
    "7973": {
      "fn": "Gauge._getReward",
      "offset": [
        15966,
        15974
      ],
      "op": "DUP6",
      "path": "10"
    },
    "7974": {
      "fn": "Gauge._getReward",
      "offset": [
        15976,
        15982
      ],
      "op": "DUP4",
      "path": "10"
    },
    "7975": {
      "fn": "Gauge._getReward",
      "offset": [
        15941,
        15965
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x18CE"
    },
    "7978": {
      "fn": "Gauge._getReward",
      "jump": "i",
      "offset": [
        15941,
        15983
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7979": {
      "fn": "Gauge._getReward",
      "offset": [
        15941,
        15983
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7980": {
      "fn": "Gauge._getReward",
      "offset": [
        16028,
        16036
      ],
      "op": "DUP4",
      "path": "10",
      "statement": 117
    },
    "7981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7985": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7987": {
      "op": "SHL"
    },
    "7988": {
      "op": "SUB"
    },
    "7989": {
      "fn": "Gauge._getReward",
      "offset": [
        16017,
        16045
      ],
      "op": "AND",
      "path": "10"
    },
    "7990": {
      "fn": "Gauge._getReward",
      "offset": [
        16017,
        16045
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
    },
    "8023": {
      "fn": "Gauge._getReward",
      "offset": [
        16038,
        16044
      ],
      "op": "DUP3",
      "path": "10"
    },
    "8024": {
      "fn": "Gauge._getReward",
      "offset": [
        16017,
        16045
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "8026": {
      "fn": "Gauge._getReward",
      "offset": [
        16017,
        16045
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "8027": {
      "fn": "Gauge._getReward",
      "offset": [
        16017,
        16045
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1F66"
    },
    "8030": {
      "fn": "Gauge._getReward",
      "offset": [
        16017,
        16045
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8031": {
      "op": "DUP2"
    },
    "8032": {
      "op": "MSTORE"
    },
    "8033": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8035": {
      "op": "ADD"
    },
    "8036": {
      "op": "SWAP1"
    },
    "8037": {
      "op": "JUMP"
    },
    "8038": {
      "fn": "Gauge._getReward",
      "offset": [
        16017,
        16045
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8039": {
      "fn": "Gauge._getReward",
      "offset": [
        16017,
        16045
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "8041": {
      "fn": "Gauge._getReward",
      "offset": [
        16017,
        16045
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "8042": {
      "fn": "Gauge._getReward",
      "offset": [
        16017,
        16045
      ],
      "op": "DUP1",
      "path": "10"
    },
    "8043": {
      "fn": "Gauge._getReward",
      "offset": [
        16017,
        16045
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8044": {
      "fn": "Gauge._getReward",
      "offset": [
        16017,
        16045
      ],
      "op": "SUB",
      "path": "10"
    },
    "8045": {
      "fn": "Gauge._getReward",
      "offset": [
        16017,
        16045
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8046": {
      "fn": "Gauge._getReward",
      "offset": [
        16017,
        16045
      ],
      "op": "LOG2",
      "path": "10"
    },
    "8047": {
      "fn": "Gauge._getReward",
      "offset": [
        15691,
        16056
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8048": {
      "branch": 167,
      "fn": "Gauge._getReward",
      "offset": [
        16116,
        16128
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8049": {
      "fn": "Gauge._getReward",
      "offset": [
        16112,
        16328
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "8050": {
      "fn": "Gauge._getReward",
      "offset": [
        16112,
        16328
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2023"
    },
    "8053": {
      "branch": 167,
      "fn": "Gauge._getReward",
      "offset": [
        16112,
        16328
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "8054": {
      "fn": "Gauge._getReward",
      "offset": [
        16161,
        16173
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x13"
    },
    "8056": {
      "fn": "Gauge._getReward",
      "offset": [
        16161,
        16180
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8057": {
      "fn": "Gauge._getReward",
      "offset": [
        16144,
        16158
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8059": {
      "fn": "Gauge._getReward",
      "offset": [
        16194,
        16318
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8060": {
      "fn": "Gauge._getReward",
      "offset": [
        16218,
        16224
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8061": {
      "fn": "Gauge._getReward",
      "offset": [
        16214,
        16215
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8062": {
      "fn": "Gauge._getReward",
      "offset": [
        16214,
        16224
      ],
      "op": "LT",
      "path": "10"
    },
    "8063": {
      "fn": "Gauge._getReward",
      "offset": [
        16194,
        16318
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "8064": {
      "fn": "Gauge._getReward",
      "offset": [
        16194,
        16318
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2020"
    },
    "8067": {
      "fn": "Gauge._getReward",
      "offset": [
        16194,
        16318
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "8068": {
      "fn": "Gauge._getReward",
      "offset": [
        16262,
        16274
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 118,
      "value": "0x13"
    },
    "8070": {
      "fn": "Gauge._getReward",
      "offset": [
        16275,
        16276
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8071": {
      "fn": "Gauge._getReward",
      "offset": [
        16262,
        16277
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8072": {
      "fn": "Gauge._getReward",
      "offset": [
        16262,
        16277
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8073": {
      "fn": "Gauge._getReward",
      "offset": [
        16262,
        16277
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8074": {
      "fn": "Gauge._getReward",
      "offset": [
        16262,
        16277
      ],
      "op": "LT",
      "path": "10"
    },
    "8075": {
      "fn": "Gauge._getReward",
      "offset": [
        16262,
        16277
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1F96"
    },
    "8078": {
      "fn": "Gauge._getReward",
      "offset": [
        16262,
        16277
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "8079": {
      "fn": "Gauge._getReward",
      "offset": [
        16262,
        16277
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1F96"
    },
    "8082": {
      "fn": "Gauge._getReward",
      "offset": [
        16262,
        16277
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2823"
    },
    "8085": {
      "fn": "Gauge._getReward",
      "jump": "i",
      "offset": [
        16262,
        16277
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8086": {
      "fn": "Gauge._getReward",
      "offset": [
        16262,
        16277
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8087": {
      "fn": "Gauge._getReward",
      "offset": [
        16262,
        16277
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8089": {
      "fn": "Gauge._getReward",
      "offset": [
        16262,
        16277
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8090": {
      "fn": "Gauge._getReward",
      "offset": [
        16262,
        16277
      ],
      "op": "DUP3",
      "path": "10"
    },
    "8091": {
      "fn": "Gauge._getReward",
      "offset": [
        16262,
        16277
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8092": {
      "fn": "Gauge._getReward",
      "offset": [
        16262,
        16277
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "8094": {
      "fn": "Gauge._getReward",
      "offset": [
        16262,
        16277
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8095": {
      "fn": "Gauge._getReward",
      "offset": [
        16262,
        16277
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8096": {
      "fn": "Gauge._getReward",
      "offset": [
        16262,
        16277
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "8097": {
      "fn": "Gauge._getReward",
      "offset": [
        16262,
        16277
      ],
      "op": "ADD",
      "path": "10"
    },
    "8098": {
      "fn": "Gauge._getReward",
      "offset": [
        16262,
        16277
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8099": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "8101": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "8102": {
      "op": "PUSH4",
      "value": "0x55DE275"
    },
    "8107": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8109": {
      "op": "SHL"
    },
    "8110": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8111": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8112": {
      "fn": "Gauge._getReward",
      "offset": [
        16292,
        16302
      ],
      "op": "CALLER",
      "path": "10"
    },
    "8113": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "8115": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "DUP3",
      "path": "10"
    },
    "8116": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "ADD",
      "path": "10"
    },
    "8117": {
      "op": "MSTORE"
    },
    "8118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8122": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8124": {
      "op": "SHL"
    },
    "8125": {
      "op": "SUB"
    },
    "8126": {
      "fn": "Gauge._getReward",
      "offset": [
        16262,
        16277
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8127": {
      "fn": "Gauge._getReward",
      "offset": [
        16262,
        16277
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8128": {
      "fn": "Gauge._getReward",
      "offset": [
        16262,
        16277
      ],
      "op": "AND",
      "path": "10"
    },
    "8129": {
      "fn": "Gauge._getReward",
      "offset": [
        16262,
        16277
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8130": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16291
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x55DE275"
    },
    "8135": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16291
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8136": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8138": {
      "op": "ADD"
    },
    "8139": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "8141": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "8143": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "8144": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "DUP1",
      "path": "10"
    },
    "8145": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "DUP4",
      "path": "10"
    },
    "8146": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "SUB",
      "path": "10"
    },
    "8147": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8148": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8150": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "DUP8",
      "path": "10"
    },
    "8151": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "GAS",
      "path": "10"
    },
    "8152": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "CALL",
      "path": "10"
    },
    "8153": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "8154": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "DUP1",
      "path": "10"
    },
    "8155": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "8156": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1FE9"
    },
    "8159": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "8160": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "8161": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8163": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "DUP1",
      "path": "10"
    },
    "8164": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "8165": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "8166": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8168": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "REVERT",
      "path": "10"
    },
    "8169": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8170": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "POP",
      "path": "10"
    },
    "8171": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "POP",
      "path": "10"
    },
    "8172": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "POP",
      "path": "10"
    },
    "8173": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "POP",
      "path": "10"
    },
    "8174": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "8176": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "8177": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "8178": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "8180": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "NOT",
      "path": "10"
    },
    "8181": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "8183": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "DUP3",
      "path": "10"
    },
    "8184": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "ADD",
      "path": "10"
    },
    "8185": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "AND",
      "path": "10"
    },
    "8186": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "DUP3",
      "path": "10"
    },
    "8187": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "ADD",
      "path": "10"
    },
    "8188": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "DUP1",
      "path": "10"
    },
    "8189": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "8191": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8192": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "POP",
      "path": "10"
    },
    "8193": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8194": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "ADD",
      "path": "10"
    },
    "8195": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8196": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x200D"
    },
    "8199": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8200": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8201": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x27EF"
    },
    "8204": {
      "fn": "Gauge._getReward",
      "jump": "i",
      "offset": [
        16249,
        16303
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8205": {
      "fn": "Gauge._getReward",
      "offset": [
        16249,
        16303
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8206": {
      "op": "POP"
    },
    "8207": {
      "fn": "Gauge._getReward",
      "offset": [
        16226,
        16229
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 119
    },
    "8208": {
      "fn": "Gauge._getReward",
      "offset": [
        16226,
        16229
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2018"
    },
    "8211": {
      "fn": "Gauge._getReward",
      "offset": [
        16226,
        16229
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8212": {
      "fn": "Gauge._getReward",
      "offset": [
        16226,
        16229
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2839"
    },
    "8215": {
      "fn": "Gauge._getReward",
      "jump": "i",
      "offset": [
        16226,
        16229
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8216": {
      "fn": "Gauge._getReward",
      "offset": [
        16226,
        16229
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8217": {
      "fn": "Gauge._getReward",
      "offset": [
        16226,
        16229
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8218": {
      "fn": "Gauge._getReward",
      "offset": [
        16226,
        16229
      ],
      "op": "POP",
      "path": "10"
    },
    "8219": {
      "fn": "Gauge._getReward",
      "offset": [
        16226,
        16229
      ],
      "op": "POP",
      "path": "10"
    },
    "8220": {
      "fn": "Gauge._getReward",
      "offset": [
        16194,
        16318
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1F7B"
    },
    "8223": {
      "fn": "Gauge._getReward",
      "offset": [
        16194,
        16318
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8224": {
      "fn": "Gauge._getReward",
      "offset": [
        16194,
        16318
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8225": {
      "fn": "Gauge._getReward",
      "offset": [
        16194,
        16318
      ],
      "op": "POP",
      "path": "10"
    },
    "8226": {
      "fn": "Gauge._getReward",
      "offset": [
        16130,
        16328
      ],
      "op": "POP",
      "path": "10"
    },
    "8227": {
      "fn": "Gauge._getReward",
      "offset": [
        16112,
        16328
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8228": {
      "fn": "Gauge._getReward",
      "offset": [
        15637,
        16334
      ],
      "op": "POP",
      "path": "10"
    },
    "8229": {
      "fn": "Gauge._getReward",
      "offset": [
        15529,
        16334
      ],
      "op": "POP",
      "path": "10"
    },
    "8230": {
      "fn": "Gauge._getReward",
      "offset": [
        15529,
        16334
      ],
      "op": "POP",
      "path": "10"
    },
    "8231": {
      "fn": "Gauge._getReward",
      "offset": [
        15529,
        16334
      ],
      "op": "POP",
      "path": "10"
    },
    "8232": {
      "fn": "Gauge._getReward",
      "jump": "o",
      "offset": [
        15529,
        16334
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8233": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        912,
        1153
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8234": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 120,
      "value": "0x40"
    },
    "8236": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "8237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8241": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8243": {
      "op": "SHL"
    },
    "8244": {
      "op": "SUB"
    },
    "8245": {
      "op": "DUP1"
    },
    "8246": {
      "op": "DUP6"
    },
    "8247": {
      "op": "AND"
    },
    "8248": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "8250": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "DUP4",
      "path": "5"
    },
    "8251": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "ADD",
      "path": "5"
    },
    "8252": {
      "op": "MSTORE"
    },
    "8253": {
      "op": "DUP4"
    },
    "8254": {
      "op": "AND"
    },
    "8255": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8257": {
      "op": "DUP3"
    },
    "8258": {
      "op": "ADD"
    },
    "8259": {
      "op": "MSTORE"
    },
    "8260": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8262": {
      "op": "DUP2"
    },
    "8263": {
      "op": "ADD"
    },
    "8264": {
      "op": "DUP3"
    },
    "8265": {
      "op": "SWAP1"
    },
    "8266": {
      "op": "MSTORE"
    },
    "8267": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1146
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2023"
    },
    "8270": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1050,
        1146
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8271": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1070,
        1075
      ],
      "op": "DUP6",
      "path": "5"
    },
    "8272": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1070,
        1075
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8273": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "8278": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8280": {
      "op": "SHL"
    },
    "8281": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1100,
        1127
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8282": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8284": {
      "op": "ADD"
    },
    "8285": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1077,
        1145
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18FA"
    },
    "8288": {
      "op": "JUMP"
    },
    "8289": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5262,
        6045
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "8290": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5353,
        5354
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "8292": {
      "offset": [
        1972,
        1994
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x206C"
    },
    "8295": {
      "offset": [
        1986,
        1993
      ],
      "op": "DUP2",
      "path": "9"
    },
    "8296": {
      "offset": [
        1972,
        1985
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1C76"
    },
    "8299": {
      "jump": "i",
      "offset": [
        1972,
        1994
      ],
      "op": "JUMP",
      "path": "9"
    },
    "8300": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        1972,
        1994
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "8301": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5411,
        5417
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 121
    },
    "8302": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5391,
        5408
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x9"
    },
    "8304": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5391,
        5408
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "8305": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5391,
        5417
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x207A"
    },
    "8308": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5391,
        5417
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "8309": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5391,
        5417
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "8310": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5391,
        5417
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2714"
    },
    "8313": {
      "fn": "BaseGauge._notifyRewardAmount",
      "jump": "i",
      "offset": [
        5391,
        5417
      ],
      "op": "JUMP",
      "path": "9"
    },
    "8314": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5391,
        5417
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "8315": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5371,
        5388
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x9"
    },
    "8317": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5371,
        5417
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "8318": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5450,
        5462
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "8320": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5450,
        5462
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "8321": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5431,
        5446
      ],
      "op": "TIMESTAMP",
      "path": "9"
    },
    "8322": {
      "branch": 175,
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5431,
        5462
      ],
      "op": "LT",
      "path": "9"
    },
    "8323": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5427,
        5739
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x209B"
    },
    "8326": {
      "branch": 175,
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5427,
        5739
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "8327": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5500,
        5508
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 122,
      "value": "0x2"
    },
    "8329": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5500,
        5508
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "8330": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5491,
        5508
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2093"
    },
    "8333": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5491,
        5508
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "8334": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5491,
        5497
      ],
      "op": "DUP4",
      "path": "9"
    },
    "8335": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5491,
        5508
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x26F2"
    },
    "8338": {
      "fn": "BaseGauge._notifyRewardAmount",
      "jump": "i",
      "offset": [
        5491,
        5508
      ],
      "op": "JUMP",
      "path": "9"
    },
    "8339": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5491,
        5508
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "8340": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5478,
        5488
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "8342": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5478,
        5508
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "8343": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5427,
        5739
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x20DF"
    },
    "8346": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5427,
        5739
      ],
      "op": "JUMP",
      "path": "9"
    },
    "8347": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5427,
        5739
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "8348": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5539,
        5556
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "8350": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5574,
        5589
      ],
      "op": "TIMESTAMP",
      "path": "9"
    },
    "8351": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5559,
        5571
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "8353": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5559,
        5571
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "8354": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5559,
        5589
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x20AB"
    },
    "8357": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5559,
        5589
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "8358": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5559,
        5589
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "8359": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5559,
        5589
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x280C"
    },
    "8362": {
      "fn": "BaseGauge._notifyRewardAmount",
      "jump": "i",
      "offset": [
        5559,
        5589
      ],
      "op": "JUMP",
      "path": "9"
    },
    "8363": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5559,
        5589
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "8364": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5539,
        5589
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "8365": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5539,
        5589
      ],
      "op": "POP",
      "path": "9"
    },
    "8366": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5603,
        5619
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "8368": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5634,
        5644
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "8370": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5634,
        5644
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "8371": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5622,
        5631
      ],
      "op": "DUP3",
      "path": "9"
    },
    "8372": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5622,
        5644
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x20BD"
    },
    "8375": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5622,
        5644
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "8376": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5622,
        5644
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "8377": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5622,
        5644
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x26D3"
    },
    "8380": {
      "fn": "BaseGauge._notifyRewardAmount",
      "jump": "i",
      "offset": [
        5622,
        5644
      ],
      "op": "JUMP",
      "path": "9"
    },
    "8381": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5622,
        5644
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "8382": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5603,
        5644
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "8383": {
      "op": "POP"
    },
    "8384": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5667,
        5684
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 123,
      "value": "0x20C9"
    },
    "8387": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5603,
        5644
      ],
      "op": "DUP2",
      "path": "9"
    },
    "8388": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5667,
        5673
      ],
      "op": "DUP6",
      "path": "9"
    },
    "8389": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5667,
        5684
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2714"
    },
    "8392": {
      "fn": "BaseGauge._notifyRewardAmount",
      "jump": "i",
      "offset": [
        5667,
        5684
      ],
      "op": "JUMP",
      "path": "9"
    },
    "8393": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5667,
        5684
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "8394": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5658,
        5684
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "8395": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5658,
        5684
      ],
      "op": "POP",
      "path": "9"
    },
    "8396": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5720,
        5728
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 124,
      "value": "0x2"
    },
    "8398": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5720,
        5728
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "8399": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5711,
        5717
      ],
      "op": "DUP5",
      "path": "9"
    },
    "8400": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5711,
        5728
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x20D9"
    },
    "8403": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5711,
        5728
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "8404": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5711,
        5728
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "8405": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5711,
        5728
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x26F2"
    },
    "8408": {
      "fn": "BaseGauge._notifyRewardAmount",
      "jump": "i",
      "offset": [
        5711,
        5728
      ],
      "op": "JUMP",
      "path": "9"
    },
    "8409": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5711,
        5728
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "8410": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5698,
        5708
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "8412": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5698,
        5728
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "8413": {
      "op": "POP"
    },
    "8414": {
      "op": "POP"
    },
    "8415": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5427,
        5739
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "8416": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5748,
        5762
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 125,
      "value": "0x8"
    },
    "8418": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5748,
        5771
      ],
      "op": "DUP3",
      "path": "9"
    },
    "8419": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5748,
        5771
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "8420": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5748,
        5771
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "8421": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5798,
        5813
      ],
      "op": "TIMESTAMP",
      "path": "9",
      "statement": 126
    },
    "8422": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5781,
        5795
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x5"
    },
    "8424": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5781,
        5813
      ],
      "op": "DUP2",
      "path": "9"
    },
    "8425": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5781,
        5813
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "8426": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5781,
        5813
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "8427": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5856,
        5864
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 127,
      "value": "0x2"
    },
    "8429": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5856,
        5864
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "8430": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5838,
        5864
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x20F6"
    },
    "8433": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5838,
        5864
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "8434": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5838,
        5864
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2714"
    },
    "8437": {
      "fn": "BaseGauge._notifyRewardAmount",
      "jump": "i",
      "offset": [
        5838,
        5864
      ],
      "op": "JUMP",
      "path": "9"
    },
    "8438": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5838,
        5864
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "8439": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5823,
        5835
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "8441": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5823,
        5864
      ],
      "op": "DUP2",
      "path": "9"
    },
    "8442": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5823,
        5864
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "8443": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5823,
        5864
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "8444": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5905,
        5919
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 128,
      "value": "0x8"
    },
    "8446": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5905,
        5919
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "8447": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5933,
        5947
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x5"
    },
    "8449": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5933,
        5947
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "8450": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5987,
        5997
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "8452": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5987,
        5997
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "8453": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        6011,
        6028
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x9"
    },
    "8455": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        6011,
        6028
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "8456": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5879,
        6038
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "8458": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5879,
        6038
      ],
      "op": "DUP1",
      "path": "9"
    },
    "8459": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5879,
        6038
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "8460": {
      "op": "SWAP5"
    },
    "8461": {
      "op": "DUP6"
    },
    "8462": {
      "op": "MSTORE"
    },
    "8463": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8465": {
      "op": "DUP6"
    },
    "8466": {
      "op": "ADD"
    },
    "8467": {
      "op": "SWAP4"
    },
    "8468": {
      "op": "SWAP1"
    },
    "8469": {
      "op": "SWAP4"
    },
    "8470": {
      "op": "MSTORE"
    },
    "8471": {
      "op": "SWAP2"
    },
    "8472": {
      "op": "DUP4"
    },
    "8473": {
      "op": "ADD"
    },
    "8474": {
      "op": "SWAP4"
    },
    "8475": {
      "op": "SWAP1"
    },
    "8476": {
      "op": "SWAP4"
    },
    "8477": {
      "op": "MSTORE"
    },
    "8478": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8480": {
      "op": "DUP3"
    },
    "8481": {
      "op": "ADD"
    },
    "8482": {
      "op": "SWAP3"
    },
    "8483": {
      "op": "SWAP1"
    },
    "8484": {
      "op": "SWAP3"
    },
    "8485": {
      "op": "MSTORE"
    },
    "8486": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8488": {
      "op": "DUP2"
    },
    "8489": {
      "op": "ADD"
    },
    "8490": {
      "op": "SWAP2"
    },
    "8491": {
      "op": "SWAP1"
    },
    "8492": {
      "op": "SWAP2"
    },
    "8493": {
      "op": "MSTORE"
    },
    "8494": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5879,
        6038
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x944FFD3678415A15CBFEF07DD7D9F20CDC6F36D12588A4BA7E8EB440F32C61BE"
    },
    "8527": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5879,
        6038
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "8528": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8530": {
      "op": "ADD"
    },
    "8531": {
      "fn": "BaseGauge._notifyRewardAmount",
      "offset": [
        5879,
        6038
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x16DF"
    },
    "8534": {
      "op": "JUMP"
    },
    "8535": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8536": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8538": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8539": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8544": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8546": {
      "op": "SHL"
    },
    "8547": {
      "op": "SUB"
    },
    "8548": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 129
    },
    "8549": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8550": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "8551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8555": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8557": {
      "op": "SHL"
    },
    "8558": {
      "op": "SUB"
    },
    "8559": {
      "op": "NOT"
    },
    "8560": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8561": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "8562": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8563": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "8564": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "8565": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8566": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 130,
      "value": "0x40"
    },
    "8568": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8569": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8570": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8571": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8572": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "8573": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8574": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8575": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8576": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "8609": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8610": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8611": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "8612": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "8613": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "8614": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8615": {
      "fn": "Math.min",
      "offset": [
        461,
        565
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8616": {
      "fn": "Math.min",
      "offset": [
        519,
        526
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "8618": {
      "fn": "Math.min",
      "offset": [
        549,
        550
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 131
    },
    "8619": {
      "fn": "Math.min",
      "offset": [
        545,
        546
      ],
      "op": "DUP4",
      "path": "8"
    },
    "8620": {
      "branch": 179,
      "fn": "Math.min",
      "offset": [
        545,
        550
      ],
      "op": "LT",
      "path": "8"
    },
    "8621": {
      "fn": "Math.min",
      "offset": [
        545,
        558
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x21B6"
    },
    "8624": {
      "branch": 179,
      "fn": "Math.min",
      "offset": [
        545,
        558
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "8625": {
      "fn": "Math.min",
      "offset": [
        557,
        558
      ],
      "op": "DUP2",
      "path": "8"
    },
    "8626": {
      "fn": "Math.min",
      "offset": [
        545,
        558
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x6C9"
    },
    "8629": {
      "fn": "Math.min",
      "offset": [
        545,
        558
      ],
      "op": "JUMP",
      "path": "8"
    },
    "8630": {
      "fn": "Math.min",
      "offset": [
        545,
        558
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8631": {
      "op": "POP"
    },
    "8632": {
      "fn": "Math.min",
      "offset": [
        553,
        554
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8633": {
      "fn": "Math.min",
      "offset": [
        553,
        554
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "8634": {
      "fn": "Math.min",
      "offset": [
        538,
        558
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "8635": {
      "op": "POP"
    },
    "8636": {
      "fn": "Math.min",
      "jump": "o",
      "offset": [
        461,
        565
      ],
      "op": "JUMP",
      "path": "8"
    },
    "8637": {
      "fn": "BaseGauge.__initialize",
      "offset": [
        2018,
        2319
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "8638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8642": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8644": {
      "op": "SHL"
    },
    "8645": {
      "op": "SUB"
    },
    "8646": {
      "fn": "BaseGauge.__initialize",
      "offset": [
        2118,
        2155
      ],
      "op": "DUP3",
      "path": "9",
      "statement": 132
    },
    "8647": {
      "branch": 176,
      "fn": "BaseGauge.__initialize",
      "offset": [
        2118,
        2155
      ],
      "op": "AND",
      "path": "9"
    },
    "8648": {
      "fn": "BaseGauge.__initialize",
      "offset": [
        2097,
        2205
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2213"
    },
    "8651": {
      "branch": 176,
      "fn": "BaseGauge.__initialize",
      "offset": [
        2097,
        2205
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "8652": {
      "fn": "BaseGauge.__initialize",
      "offset": [
        2097,
        2205
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "8654": {
      "fn": "BaseGauge.__initialize",
      "offset": [
        2097,
        2205
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "8655": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8659": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8661": {
      "op": "SHL"
    },
    "8662": {
      "fn": "BaseGauge.__initialize",
      "offset": [
        2097,
        2205
      ],
      "op": "DUP2",
      "path": "9"
    },
    "8663": {
      "fn": "BaseGauge.__initialize",
      "offset": [
        2097,
        2205
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "8664": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8666": {
      "fn": "BaseGauge.__initialize",
      "offset": [
        2097,
        2205
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "8668": {
      "fn": "BaseGauge.__initialize",
      "offset": [
        2097,
        2205
      ],
      "op": "DUP3",
      "path": "9"
    },
    "8669": {
      "fn": "BaseGauge.__initialize",
      "offset": [
        2097,
        2205
      ],
      "op": "ADD",
      "path": "9"
    },
    "8670": {
      "op": "MSTORE"
    },
    "8671": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "8673": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8675": {
      "op": "DUP3"
    },
    "8676": {
      "op": "ADD"
    },
    "8677": {
      "op": "MSTORE"
    },
    "8678": {
      "op": "PUSH32",
      "value": "0x5F726577617264546F6B656E2030783020616464726573730000000000000000"
    },
    "8711": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8713": {
      "op": "DUP3"
    },
    "8714": {
      "op": "ADD"
    },
    "8715": {
      "op": "MSTORE"
    },
    "8716": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8718": {
      "op": "ADD"
    },
    "8719": {
      "fn": "BaseGauge.__initialize",
      "offset": [
        2097,
        2205
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x6FB"
    },
    "8722": {
      "op": "JUMP"
    },
    "8723": {
      "fn": "BaseGauge.__initialize",
      "offset": [
        2097,
        2205
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "8724": {
      "fn": "BaseGauge.__initialize",
      "offset": [
        2215,
        2226
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 133,
      "value": "0x1"
    },
    "8726": {
      "fn": "BaseGauge.__initialize",
      "offset": [
        2215,
        2249
      ],
      "op": "DUP1",
      "path": "9"
    },
    "8727": {
      "fn": "BaseGauge.__initialize",
      "offset": [
        2215,
        2249
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "8728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8732": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8734": {
      "op": "SHL"
    },
    "8735": {
      "op": "SUB"
    },
    "8736": {
      "op": "NOT"
    },
    "8737": {
      "fn": "BaseGauge.__initialize",
      "offset": [
        2215,
        2249
      ],
      "op": "AND",
      "path": "9"
    },
    "8738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8742": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8744": {
      "op": "SHL"
    },
    "8745": {
      "op": "SUB"
    },
    "8746": {
      "fn": "BaseGauge.__initialize",
      "offset": [
        2215,
        2249
      ],
      "op": "DUP5",
      "path": "9"
    },
    "8747": {
      "fn": "BaseGauge.__initialize",
      "offset": [
        2215,
        2249
      ],
      "op": "AND",
      "path": "9"
    },
    "8748": {
      "fn": "BaseGauge.__initialize",
      "offset": [
        2215,
        2249
      ],
      "op": "OR",
      "path": "9"
    },
    "8749": {
      "fn": "BaseGauge.__initialize",
      "offset": [
        2215,
        2249
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "8750": {
      "fn": "BaseGauge.__initialize",
      "offset": [
        2215,
        2249
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "8751": {
      "fn": "BaseGauge.__initialize",
      "offset": [
        2270,
        2276
      ],
      "op": "PUSH3",
      "path": "9",
      "statement": 134,
      "value": "0x93A80"
    },
    "8755": {
      "fn": "BaseGauge.__initialize",
      "offset": [
        2259,
        2267
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "8757": {
      "fn": "BaseGauge.__initialize",
      "offset": [
        2259,
        2276
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "8758": {
      "fn": "BaseGauge.__initialize",
      "offset": [
        2286,
        2312
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 135,
      "value": "0x223E"
    },
    "8761": {
      "fn": "BaseGauge.__initialize",
      "offset": [
        2305,
        2311
      ],
      "op": "DUP2",
      "path": "9"
    },
    "8762": {
      "fn": "BaseGauge.__initialize",
      "offset": [
        2286,
        2304
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2157"
    },
    "8765": {
      "fn": "BaseGauge.__initialize",
      "jump": "i",
      "offset": [
        2286,
        2312
      ],
      "op": "JUMP",
      "path": "9"
    },
    "8766": {
      "fn": "BaseGauge.__initialize",
      "offset": [
        2286,
        2312
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "8767": {
      "fn": "BaseGauge.__initialize",
      "offset": [
        2018,
        2319
      ],
      "op": "POP",
      "path": "9"
    },
    "8768": {
      "fn": "BaseGauge.__initialize",
      "offset": [
        2018,
        2319
      ],
      "op": "POP",
      "path": "9"
    },
    "8769": {
      "fn": "BaseGauge.__initialize",
      "jump": "o",
      "offset": [
        2018,
        2319
      ],
      "op": "JUMP",
      "path": "9"
    },
    "8770": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        7887,
        8228
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8771": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        7946,
        7953
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8773": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        7969,
        7982
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x224D"
    },
    "8776": {
      "fn": "Gauge.totalSupply",
      "offset": [
        3854,
        3866
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x11"
    },
    "8778": {
      "fn": "Gauge.totalSupply",
      "offset": [
        3854,
        3866
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8779": {
      "fn": "Gauge.totalSupply",
      "offset": [
        3854,
        3866
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8780": {
      "fn": "Gauge.totalSupply",
      "offset": [
        3784,
        3873
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8781": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        7969,
        7982
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8782": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        7965,
        8041
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2258"
    },
    "8785": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        7965,
        8041
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "8786": {
      "op": "POP"
    },
    "8787": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        8010,
        8030
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 136,
      "value": "0x6"
    },
    "8789": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        8010,
        8030
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8790": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        8010,
        8030
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8791": {
      "fn": "Gauge._rewardPerToken",
      "jump": "o",
      "offset": [
        7887,
        8228
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8792": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        7965,
        8041
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8793": {
      "fn": "Gauge.totalSupply",
      "offset": [
        3854,
        3866
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x11"
    },
    "8795": {
      "fn": "Gauge.totalSupply",
      "offset": [
        3854,
        3866
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8796": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        8170,
        8180
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 137,
      "value": "0x4"
    },
    "8798": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        8170,
        8180
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8799": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        8136,
        8150
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "8801": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        8136,
        8150
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8802": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        8107,
        8133
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2269"
    },
    "8805": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        8107,
        8131
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE28"
    },
    "8808": {
      "fn": "Gauge._rewardPerToken",
      "jump": "i",
      "offset": [
        8107,
        8133
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8809": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        8107,
        8133
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8810": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        8107,
        8150
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2273"
    },
    "8813": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        8107,
        8150
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8814": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        8107,
        8150
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8815": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        8107,
        8150
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x280C"
    },
    "8818": {
      "fn": "Gauge._rewardPerToken",
      "jump": "i",
      "offset": [
        8107,
        8150
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8819": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        8107,
        8150
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8820": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        8106,
        8180
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x227D"
    },
    "8823": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        8106,
        8180
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8824": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        8106,
        8180
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8825": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        8106,
        8180
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26D3"
    },
    "8828": {
      "fn": "Gauge._rewardPerToken",
      "jump": "i",
      "offset": [
        8106,
        8180
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8829": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        8106,
        8180
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8830": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        8106,
        8203
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x228F"
    },
    "8833": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        8106,
        8203
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8834": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        8199,
        8203
      ],
      "op": "PUSH8",
      "path": "10",
      "value": "0xDE0B6B3A7640000"
    },
    "8843": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        8106,
        8203
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26D3"
    },
    "8846": {
      "fn": "Gauge._rewardPerToken",
      "jump": "i",
      "offset": [
        8106,
        8203
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8847": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        8106,
        8203
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8848": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        8105,
        8220
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2299"
    },
    "8851": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        8105,
        8220
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8852": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        8105,
        8220
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8853": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        8105,
        8220
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26F2"
    },
    "8856": {
      "fn": "Gauge._rewardPerToken",
      "jump": "i",
      "offset": [
        8105,
        8220
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8857": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        8105,
        8220
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8858": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        8069,
        8089
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "8860": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        8069,
        8089
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8861": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        8069,
        8221
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE36"
    },
    "8864": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        8069,
        8221
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8865": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        8069,
        8221
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8866": {
      "fn": "Gauge._rewardPerToken",
      "offset": [
        8069,
        8221
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2714"
    },
    "8869": {
      "fn": "Gauge._rewardPerToken",
      "jump": "i",
      "offset": [
        8069,
        8221
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8870": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3207,
        3913
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8871": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3649
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8873": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x22FB"
    },
    "8876": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3680,
        3684
      ],
      "op": "DUP3",
      "path": "5"
    },
    "8877": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8879": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "8880": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8881": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8883": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "5"
    },
    "8884": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8886": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8887": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8888": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "8890": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8891": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8892": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "8894": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "5"
    },
    "8895": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "8928": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8929": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "8930": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "POP",
      "path": "5"
    },
    "8931": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3660,
        3665
      ],
      "op": "DUP6",
      "path": "5"
    },
    "8932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8936": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8938": {
      "op": "SHL"
    },
    "8939": {
      "op": "SUB"
    },
    "8940": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "AND",
      "path": "5"
    },
    "8941": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x23D0"
    },
    "8944": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8945": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "8946": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "8947": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8948": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "8953": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "AND",
      "path": "5"
    },
    "8954": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8955": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8956": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8957": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "8958": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8959": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "8960": {
      "op": "POP"
    },
    "8961": {
      "branch": 181,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3756
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "8962": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1931"
    },
    "8965": {
      "branch": 181,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "8966": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3830,
        3840
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 138
    },
    "8967": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP1",
      "path": "5"
    },
    "8968": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "8970": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "5"
    },
    "8971": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8972": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "8973": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP2",
      "path": "5"
    },
    "8974": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "5"
    },
    "8975": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8976": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2319"
    },
    "8979": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "8980": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8981": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x27EF"
    },
    "8984": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8985": {
      "branch": 182,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8986": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1931"
    },
    "8989": {
      "branch": 182,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "8990": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "8992": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "8993": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8997": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8999": {
      "op": "SHL"
    },
    "9000": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9001": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9002": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9004": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "9006": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9007": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "ADD",
      "path": "5"
    },
    "9008": {
      "op": "MSTORE"
    },
    "9009": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "9011": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9013": {
      "op": "DUP3"
    },
    "9014": {
      "op": "ADD"
    },
    "9015": {
      "op": "MSTORE"
    },
    "9016": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "9049": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9051": {
      "op": "DUP3"
    },
    "9052": {
      "op": "ADD"
    },
    "9053": {
      "op": "MSTORE"
    },
    "9054": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "9065": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "9067": {
      "op": "SHL"
    },
    "9068": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9070": {
      "op": "DUP3"
    },
    "9071": {
      "op": "ADD"
    },
    "9072": {
      "op": "MSTORE"
    },
    "9073": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9075": {
      "op": "ADD"
    },
    "9076": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6FB"
    },
    "9079": {
      "op": "JUMP"
    },
    "9080": {
      "fn": "Gauge._maxEarning",
      "offset": [
        8968,
        9173
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9085": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9087": {
      "op": "SHL"
    },
    "9088": {
      "op": "SUB"
    },
    "9089": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9126,
        9157
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 139
    },
    "9090": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9126,
        9157
      ],
      "op": "AND",
      "path": "10"
    },
    "9091": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9029,
        9036
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9093": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9126,
        9157
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9094": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9126,
        9157
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9095": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9126,
        9157
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9096": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9126,
        9148
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "9098": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9126,
        9157
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9100": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9126,
        9157
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9101": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9126,
        9157
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "9103": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9126,
        9157
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9104": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9126,
        9157
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "9105": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9126,
        9157
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9106": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9162,
        9166
      ],
      "op": "PUSH8",
      "path": "10",
      "value": "0xDE0B6B3A7640000"
    },
    "9115": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9162,
        9166
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9116": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9106,
        9123
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x23A3"
    },
    "9119": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9106,
        9121
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2242"
    },
    "9122": {
      "fn": "Gauge._maxEarning",
      "jump": "i",
      "offset": [
        9106,
        9123
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9123": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9106,
        9123
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9124": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9106,
        9157
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x23AD"
    },
    "9127": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9106,
        9157
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9128": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9106,
        9157
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9129": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9106,
        9157
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x280C"
    },
    "9132": {
      "fn": "Gauge._maxEarning",
      "jump": "i",
      "offset": [
        9106,
        9157
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9133": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9106,
        9157
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9138": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9140": {
      "op": "SHL"
    },
    "9141": {
      "op": "SUB"
    },
    "9142": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9068,
        9086
      ],
      "op": "DUP5",
      "path": "10"
    },
    "9143": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9068,
        9086
      ],
      "op": "AND",
      "path": "10"
    },
    "9144": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9068,
        9086
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9146": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9068,
        9086
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9147": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9068,
        9086
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9148": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9068,
        9086
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9149": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9068,
        9077
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x12"
    },
    "9151": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9068,
        9086
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9153": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9068,
        9086
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9154": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9068,
        9086
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "9156": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9068,
        9086
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9157": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9068,
        9086
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "9158": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9068,
        9086
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9159": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9068,
        9158
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1733"
    },
    "9162": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9068,
        9158
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9163": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9068,
        9158
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9164": {
      "fn": "Gauge._maxEarning",
      "offset": [
        9068,
        9158
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26D3"
    },
    "9167": {
      "fn": "Gauge._maxEarning",
      "jump": "i",
      "offset": [
        9068,
        9158
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9168": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9169": {
      "fn": "Address.functionCall",
      "offset": [
        3994,
        4006
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "9171": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4077
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 140,
      "value": "0x1894"
    },
    "9174": {
      "fn": "Address.functionCall",
      "offset": [
        4047,
        4053
      ],
      "op": "DUP5",
      "path": "6"
    },
    "9175": {
      "fn": "Address.functionCall",
      "offset": [
        4055,
        4059
      ],
      "op": "DUP5",
      "path": "6"
    },
    "9176": {
      "fn": "Address.functionCall",
      "offset": [
        4061,
        4062
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "9178": {
      "fn": "Address.functionCall",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP6",
      "path": "6"
    },
    "9179": {
      "fn": "Address.functionCall",
      "offset": [
        3994,
        4006
      ],
      "op": "DUP6",
      "path": "6"
    },
    "9180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9184": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9186": {
      "op": "SHL"
    },
    "9187": {
      "op": "SUB"
    },
    "9188": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "DUP6",
      "path": "6"
    },
    "9189": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "AND",
      "path": "6"
    },
    "9190": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "9191": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 141,
      "value": "0x2432"
    },
    "9194": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "9195": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "9197": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9198": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9202": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9204": {
      "op": "SHL"
    },
    "9205": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9206": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9207": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9209": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "9211": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9212": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "ADD",
      "path": "6"
    },
    "9213": {
      "op": "MSTORE"
    },
    "9214": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "9216": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9218": {
      "op": "DUP3"
    },
    "9219": {
      "op": "ADD"
    },
    "9220": {
      "op": "MSTORE"
    },
    "9221": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "9254": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9256": {
      "op": "DUP3"
    },
    "9257": {
      "op": "ADD"
    },
    "9258": {
      "op": "MSTORE"
    },
    "9259": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9261": {
      "op": "ADD"
    },
    "9262": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6FB"
    },
    "9265": {
      "op": "JUMP"
    },
    "9266": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9267": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5300,
        5312
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "9269": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5314,
        5337
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9270": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5347
      ],
      "op": "DUP7",
      "path": "6"
    },
    "9271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9275": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9277": {
      "op": "SHL"
    },
    "9278": {
      "op": "SUB"
    },
    "9279": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5352
      ],
      "op": "AND",
      "path": "6"
    },
    "9280": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5360,
        5365
      ],
      "op": "DUP6",
      "path": "6"
    },
    "9281": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5367,
        5371
      ],
      "op": "DUP8",
      "path": "6"
    },
    "9282": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "9284": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9285": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x244E"
    },
    "9288": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9289": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9290": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2896"
    },
    "9293": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "6"
    },
    "9294": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9295": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "9297": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "9299": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9300": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9301": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP4",
      "path": "6"
    },
    "9302": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SUB",
      "path": "6"
    },
    "9303": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9304": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP6",
      "path": "6"
    },
    "9305": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP8",
      "path": "6"
    },
    "9306": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "GAS",
      "path": "6"
    },
    "9307": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "CALL",
      "path": "6"
    },
    "9308": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "9309": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "6"
    },
    "9310": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "6"
    },
    "9311": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "6"
    },
    "9312": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "9313": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9314": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "9316": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9317": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "EQ",
      "path": "6"
    },
    "9318": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x248B"
    },
    "9321": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "9322": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "9324": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9325": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9326": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "6"
    },
    "9327": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "9329": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "NOT",
      "path": "6"
    },
    "9330": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3F"
    },
    "9332": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "9333": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "6"
    },
    "9334": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "AND",
      "path": "6"
    },
    "9335": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9336": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "6"
    },
    "9337": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "9339": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9340": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "9341": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9342": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9343": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "9344": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "9346": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "9348": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP5",
      "path": "6"
    },
    "9349": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "6"
    },
    "9350": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "9351": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2490"
    },
    "9354": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "6"
    },
    "9355": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9356": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "9358": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9359": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "6"
    },
    "9360": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9361": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "6"
    },
    "9362": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9363": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "6"
    },
    "9364": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9365": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "6"
    },
    "9366": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5440
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 142,
      "value": "0x24A0"
    },
    "9369": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5406,
        5413
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9370": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5415,
        5425
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9371": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5427,
        5439
      ],
      "op": "DUP7",
      "path": "6"
    },
    "9372": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5405
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x24AB"
    },
    "9375": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5389,
        5440
      ],
      "op": "JUMP",
      "path": "6"
    },
    "9376": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5440
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9377": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5382,
        5440
      ],
      "op": "SWAP8",
      "path": "6"
    },
    "9378": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4948,
        5447
      ],
      "op": "SWAP7",
      "path": "6"
    },
    "9379": {
      "op": "POP"
    },
    "9380": {
      "op": "POP"
    },
    "9381": {
      "op": "POP"
    },
    "9382": {
      "op": "POP"
    },
    "9383": {
      "op": "POP"
    },
    "9384": {
      "op": "POP"
    },
    "9385": {
      "op": "POP"
    },
    "9386": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4948,
        5447
      ],
      "op": "JUMP",
      "path": "6"
    },
    "9387": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7561,
        8253
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9388": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7707,
        7719
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "9390": {
      "branch": 168,
      "fn": "Address.verifyCallResult",
      "offset": [
        7735,
        7742
      ],
      "op": "DUP4",
      "path": "6"
    },
    "9391": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "9392": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x24BA"
    },
    "9395": {
      "branch": 168,
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "9396": {
      "op": "POP"
    },
    "9397": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7765,
        7775
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 143
    },
    "9398": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6C9"
    },
    "9401": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "JUMP",
      "path": "6"
    },
    "9402": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9403": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9404": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9405": {
      "branch": 169,
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7897
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "9406": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x24CA"
    },
    "9409": {
      "branch": 169,
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "9410": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8070,
        8080
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9411": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8064,
        8081
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9412": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8130,
        8145
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9413": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8117,
        8127
      ],
      "op": "DUP5",
      "path": "6"
    },
    "9414": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8113,
        8115
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "9416": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8109,
        8128
      ],
      "op": "ADD",
      "path": "6"
    },
    "9417": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8102,
        8146
      ],
      "op": "REVERT",
      "path": "6"
    },
    "9418": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9419": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8209,
        8221
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 144
    },
    "9420": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "9422": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9423": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9427": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9429": {
      "op": "SHL"
    },
    "9430": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9431": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9432": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "9434": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "ADD",
      "path": "6"
    },
    "9435": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6FB"
    },
    "9438": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9439": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9440": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x28B2"
    },
    "9443": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        8202,
        8222
      ],
      "op": "JUMP",
      "path": "6"
    },
    "9444": {
      "op": "JUMPDEST"
    },
    "9445": {
      "op": "POP"
    },
    "9446": {
      "op": "DUP1"
    },
    "9447": {
      "op": "SLOAD"
    },
    "9448": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9450": {
      "op": "DUP3"
    },
    "9451": {
      "op": "SSTORE"
    },
    "9452": {
      "op": "SWAP1"
    },
    "9453": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9455": {
      "op": "MSTORE"
    },
    "9456": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9458": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9460": {
      "op": "KECCAK256"
    },
    "9461": {
      "op": "SWAP1"
    },
    "9462": {
      "op": "DUP2"
    },
    "9463": {
      "op": "ADD"
    },
    "9464": {
      "op": "SWAP1"
    },
    "9465": {
      "op": "PUSH2",
      "value": "0x1616"
    },
    "9468": {
      "op": "SWAP2"
    },
    "9469": {
      "op": "SWAP1"
    },
    "9470": {
      "op": "JUMPDEST"
    },
    "9471": {
      "op": "DUP1"
    },
    "9472": {
      "op": "DUP3"
    },
    "9473": {
      "op": "GT"
    },
    "9474": {
      "op": "ISZERO"
    },
    "9475": {
      "op": "PUSH2",
      "value": "0xAE5"
    },
    "9478": {
      "op": "JUMPI"
    },
    "9479": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9481": {
      "op": "DUP2"
    },
    "9482": {
      "op": "SSTORE"
    },
    "9483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9485": {
      "op": "ADD"
    },
    "9486": {
      "op": "PUSH2",
      "value": "0x24FE"
    },
    "9489": {
      "op": "JUMP"
    },
    "9490": {
      "op": "JUMPDEST"
    },
    "9491": {
      "op": "DUP1"
    },
    "9492": {
      "op": "CALLDATALOAD"
    },
    "9493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9497": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9499": {
      "op": "SHL"
    },
    "9500": {
      "op": "SUB"
    },
    "9501": {
      "op": "DUP2"
    },
    "9502": {
      "op": "AND"
    },
    "9503": {
      "op": "DUP2"
    },
    "9504": {
      "op": "EQ"
    },
    "9505": {
      "op": "PUSH2",
      "value": "0x81C"
    },
    "9508": {
      "op": "JUMPI"
    },
    "9509": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9511": {
      "op": "DUP1"
    },
    "9512": {
      "op": "REVERT"
    },
    "9513": {
      "op": "JUMPDEST"
    },
    "9514": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9516": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9518": {
      "op": "DUP3"
    },
    "9519": {
      "op": "DUP5"
    },
    "9520": {
      "op": "SUB"
    },
    "9521": {
      "op": "SLT"
    },
    "9522": {
      "op": "ISZERO"
    },
    "9523": {
      "op": "PUSH2",
      "value": "0x253B"
    },
    "9526": {
      "op": "JUMPI"
    },
    "9527": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9529": {
      "op": "DUP1"
    },
    "9530": {
      "op": "REVERT"
    },
    "9531": {
      "op": "JUMPDEST"
    },
    "9532": {
      "op": "PUSH2",
      "value": "0x6C9"
    },
    "9535": {
      "op": "DUP3"
    },
    "9536": {
      "op": "PUSH2",
      "value": "0x2512"
    },
    "9539": {
      "jump": "i",
      "op": "JUMP"
    },
    "9540": {
      "op": "JUMPDEST"
    },
    "9541": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9543": {
      "op": "DUP1"
    },
    "9544": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9546": {
      "op": "DUP4"
    },
    "9547": {
      "op": "DUP6"
    },
    "9548": {
      "op": "SUB"
    },
    "9549": {
      "op": "SLT"
    },
    "9550": {
      "op": "ISZERO"
    },
    "9551": {
      "op": "PUSH2",
      "value": "0x2557"
    },
    "9554": {
      "op": "JUMPI"
    },
    "9555": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9557": {
      "op": "DUP1"
    },
    "9558": {
      "op": "REVERT"
    },
    "9559": {
      "op": "JUMPDEST"
    },
    "9560": {
      "op": "PUSH2",
      "value": "0x2560"
    },
    "9563": {
      "op": "DUP4"
    },
    "9564": {
      "op": "PUSH2",
      "value": "0x2512"
    },
    "9567": {
      "jump": "i",
      "op": "JUMP"
    },
    "9568": {
      "op": "JUMPDEST"
    },
    "9569": {
      "op": "SWAP5"
    },
    "9570": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9572": {
      "op": "SWAP4"
    },
    "9573": {
      "op": "SWAP1"
    },
    "9574": {
      "op": "SWAP4"
    },
    "9575": {
      "op": "ADD"
    },
    "9576": {
      "op": "CALLDATALOAD"
    },
    "9577": {
      "op": "SWAP4"
    },
    "9578": {
      "op": "POP"
    },
    "9579": {
      "op": "POP"
    },
    "9580": {
      "op": "POP"
    },
    "9581": {
      "jump": "o",
      "op": "JUMP"
    },
    "9582": {
      "op": "JUMPDEST"
    },
    "9583": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9585": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9587": {
      "op": "DUP3"
    },
    "9588": {
      "op": "DUP5"
    },
    "9589": {
      "op": "SUB"
    },
    "9590": {
      "op": "SLT"
    },
    "9591": {
      "op": "ISZERO"
    },
    "9592": {
      "op": "PUSH2",
      "value": "0x2580"
    },
    "9595": {
      "op": "JUMPI"
    },
    "9596": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9598": {
      "op": "DUP1"
    },
    "9599": {
      "op": "REVERT"
    },
    "9600": {
      "op": "JUMPDEST"
    },
    "9601": {
      "op": "POP"
    },
    "9602": {
      "op": "CALLDATALOAD"
    },
    "9603": {
      "op": "SWAP2"
    },
    "9604": {
      "op": "SWAP1"
    },
    "9605": {
      "op": "POP"
    },
    "9606": {
      "jump": "o",
      "op": "JUMP"
    },
    "9607": {
      "op": "JUMPDEST"
    },
    "9608": {
      "op": "DUP1"
    },
    "9609": {
      "op": "ISZERO"
    },
    "9610": {
      "op": "ISZERO"
    },
    "9611": {
      "op": "DUP2"
    },
    "9612": {
      "op": "EQ"
    },
    "9613": {
      "op": "PUSH2",
      "value": "0x1616"
    },
    "9616": {
      "op": "JUMPI"
    },
    "9617": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9619": {
      "op": "DUP1"
    },
    "9620": {
      "op": "REVERT"
    },
    "9621": {
      "op": "JUMPDEST"
    },
    "9622": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9624": {
      "op": "DUP1"
    },
    "9625": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9627": {
      "op": "DUP4"
    },
    "9628": {
      "op": "DUP6"
    },
    "9629": {
      "op": "SUB"
    },
    "9630": {
      "op": "SLT"
    },
    "9631": {
      "op": "ISZERO"
    },
    "9632": {
      "op": "PUSH2",
      "value": "0x25A8"
    },
    "9635": {
      "op": "JUMPI"
    },
    "9636": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9638": {
      "op": "DUP1"
    },
    "9639": {
      "op": "REVERT"
    },
    "9640": {
      "op": "JUMPDEST"
    },
    "9641": {
      "op": "DUP3"
    },
    "9642": {
      "op": "CALLDATALOAD"
    },
    "9643": {
      "op": "PUSH2",
      "value": "0x25B3"
    },
    "9646": {
      "op": "DUP2"
    },
    "9647": {
      "op": "PUSH2",
      "value": "0x2587"
    },
    "9650": {
      "jump": "i",
      "op": "JUMP"
    },
    "9651": {
      "op": "JUMPDEST"
    },
    "9652": {
      "op": "SWAP2"
    },
    "9653": {
      "op": "POP"
    },
    "9654": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9656": {
      "op": "DUP4"
    },
    "9657": {
      "op": "ADD"
    },
    "9658": {
      "op": "CALLDATALOAD"
    },
    "9659": {
      "op": "PUSH2",
      "value": "0x25C3"
    },
    "9662": {
      "op": "DUP2"
    },
    "9663": {
      "op": "PUSH2",
      "value": "0x2587"
    },
    "9666": {
      "jump": "i",
      "op": "JUMP"
    },
    "9667": {
      "op": "JUMPDEST"
    },
    "9668": {
      "op": "DUP1"
    },
    "9669": {
      "op": "SWAP2"
    },
    "9670": {
      "op": "POP"
    },
    "9671": {
      "op": "POP"
    },
    "9672": {
      "op": "SWAP3"
    },
    "9673": {
      "op": "POP"
    },
    "9674": {
      "op": "SWAP3"
    },
    "9675": {
      "op": "SWAP1"
    },
    "9676": {
      "op": "POP"
    },
    "9677": {
      "jump": "o",
      "op": "JUMP"
    },
    "9678": {
      "op": "JUMPDEST"
    },
    "9679": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9681": {
      "op": "DUP1"
    },
    "9682": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9684": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9686": {
      "op": "DUP5"
    },
    "9687": {
      "op": "DUP7"
    },
    "9688": {
      "op": "SUB"
    },
    "9689": {
      "op": "SLT"
    },
    "9690": {
      "op": "ISZERO"
    },
    "9691": {
      "op": "PUSH2",
      "value": "0x25E3"
    },
    "9694": {
      "op": "JUMPI"
    },
    "9695": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9697": {
      "op": "DUP1"
    },
    "9698": {
      "op": "REVERT"
    },
    "9699": {
      "op": "JUMPDEST"
    },
    "9700": {
      "op": "DUP4"
    },
    "9701": {
      "op": "CALLDATALOAD"
    },
    "9702": {
      "op": "SWAP3"
    },
    "9703": {
      "op": "POP"
    },
    "9704": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9706": {
      "op": "DUP5"
    },
    "9707": {
      "op": "ADD"
    },
    "9708": {
      "op": "CALLDATALOAD"
    },
    "9709": {
      "op": "PUSH2",
      "value": "0x25F5"
    },
    "9712": {
      "op": "DUP2"
    },
    "9713": {
      "op": "PUSH2",
      "value": "0x2587"
    },
    "9716": {
      "jump": "i",
      "op": "JUMP"
    },
    "9717": {
      "op": "JUMPDEST"
    },
    "9718": {
      "op": "SWAP2"
    },
    "9719": {
      "op": "POP"
    },
    "9720": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9722": {
      "op": "DUP5"
    },
    "9723": {
      "op": "ADD"
    },
    "9724": {
      "op": "CALLDATALOAD"
    },
    "9725": {
      "op": "PUSH2",
      "value": "0x2605"
    },
    "9728": {
      "op": "DUP2"
    },
    "9729": {
      "op": "PUSH2",
      "value": "0x2587"
    },
    "9732": {
      "jump": "i",
      "op": "JUMP"
    },
    "9733": {
      "op": "JUMPDEST"
    },
    "9734": {
      "op": "DUP1"
    },
    "9735": {
      "op": "SWAP2"
    },
    "9736": {
      "op": "POP"
    },
    "9737": {
      "op": "POP"
    },
    "9738": {
      "op": "SWAP3"
    },
    "9739": {
      "op": "POP"
    },
    "9740": {
      "op": "SWAP3"
    },
    "9741": {
      "op": "POP"
    },
    "9742": {
      "op": "SWAP3"
    },
    "9743": {
      "jump": "o",
      "op": "JUMP"
    },
    "9744": {
      "op": "JUMPDEST"
    },
    "9745": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9747": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9749": {
      "op": "DUP3"
    },
    "9750": {
      "op": "DUP5"
    },
    "9751": {
      "op": "SUB"
    },
    "9752": {
      "op": "SLT"
    },
    "9753": {
      "op": "ISZERO"
    },
    "9754": {
      "op": "PUSH2",
      "value": "0x2622"
    },
    "9757": {
      "op": "JUMPI"
    },
    "9758": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9760": {
      "op": "DUP1"
    },
    "9761": {
      "op": "REVERT"
    },
    "9762": {
      "op": "JUMPDEST"
    },
    "9763": {
      "op": "DUP2"
    },
    "9764": {
      "op": "CALLDATALOAD"
    },
    "9765": {
      "op": "PUSH2",
      "value": "0x6C9"
    },
    "9768": {
      "op": "DUP2"
    },
    "9769": {
      "op": "PUSH2",
      "value": "0x2587"
    },
    "9772": {
      "jump": "i",
      "op": "JUMP"
    },
    "9773": {
      "op": "JUMPDEST"
    },
    "9774": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9776": {
      "op": "DUP1"
    },
    "9777": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9779": {
      "op": "DUP1"
    },
    "9780": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9782": {
      "op": "DUP1"
    },
    "9783": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9785": {
      "op": "DUP8"
    },
    "9786": {
      "op": "DUP10"
    },
    "9787": {
      "op": "SUB"
    },
    "9788": {
      "op": "SLT"
    },
    "9789": {
      "op": "ISZERO"
    },
    "9790": {
      "op": "PUSH2",
      "value": "0x2646"
    },
    "9793": {
      "op": "JUMPI"
    },
    "9794": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9796": {
      "op": "DUP1"
    },
    "9797": {
      "op": "REVERT"
    },
    "9798": {
      "op": "JUMPDEST"
    },
    "9799": {
      "op": "PUSH2",
      "value": "0x264F"
    },
    "9802": {
      "op": "DUP8"
    },
    "9803": {
      "op": "PUSH2",
      "value": "0x2512"
    },
    "9806": {
      "jump": "i",
      "op": "JUMP"
    },
    "9807": {
      "op": "JUMPDEST"
    },
    "9808": {
      "op": "SWAP6"
    },
    "9809": {
      "op": "POP"
    },
    "9810": {
      "op": "PUSH2",
      "value": "0x265D"
    },
    "9813": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9815": {
      "op": "DUP9"
    },
    "9816": {
      "op": "ADD"
    },
    "9817": {
      "op": "PUSH2",
      "value": "0x2512"
    },
    "9820": {
      "jump": "i",
      "op": "JUMP"
    },
    "9821": {
      "op": "JUMPDEST"
    },
    "9822": {
      "op": "SWAP5"
    },
    "9823": {
      "op": "POP"
    },
    "9824": {
      "op": "PUSH2",
      "value": "0x266B"
    },
    "9827": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9829": {
      "op": "DUP9"
    },
    "9830": {
      "op": "ADD"
    },
    "9831": {
      "op": "PUSH2",
      "value": "0x2512"
    },
    "9834": {
      "jump": "i",
      "op": "JUMP"
    },
    "9835": {
      "op": "JUMPDEST"
    },
    "9836": {
      "op": "SWAP4"
    },
    "9837": {
      "op": "POP"
    },
    "9838": {
      "op": "PUSH2",
      "value": "0x2679"
    },
    "9841": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9843": {
      "op": "DUP9"
    },
    "9844": {
      "op": "ADD"
    },
    "9845": {
      "op": "PUSH2",
      "value": "0x2512"
    },
    "9848": {
      "jump": "i",
      "op": "JUMP"
    },
    "9849": {
      "op": "JUMPDEST"
    },
    "9850": {
      "op": "SWAP3"
    },
    "9851": {
      "op": "POP"
    },
    "9852": {
      "op": "PUSH2",
      "value": "0x2687"
    },
    "9855": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9857": {
      "op": "DUP9"
    },
    "9858": {
      "op": "ADD"
    },
    "9859": {
      "op": "PUSH2",
      "value": "0x2512"
    },
    "9862": {
      "jump": "i",
      "op": "JUMP"
    },
    "9863": {
      "op": "JUMPDEST"
    },
    "9864": {
      "op": "SWAP2"
    },
    "9865": {
      "op": "POP"
    },
    "9866": {
      "op": "PUSH2",
      "value": "0x2695"
    },
    "9869": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9871": {
      "op": "DUP9"
    },
    "9872": {
      "op": "ADD"
    },
    "9873": {
      "op": "PUSH2",
      "value": "0x2512"
    },
    "9876": {
      "jump": "i",
      "op": "JUMP"
    },
    "9877": {
      "op": "JUMPDEST"
    },
    "9878": {
      "op": "SWAP1"
    },
    "9879": {
      "op": "POP"
    },
    "9880": {
      "op": "SWAP3"
    },
    "9881": {
      "op": "SWAP6"
    },
    "9882": {
      "op": "POP"
    },
    "9883": {
      "op": "SWAP3"
    },
    "9884": {
      "op": "SWAP6"
    },
    "9885": {
      "op": "POP"
    },
    "9886": {
      "op": "SWAP3"
    },
    "9887": {
      "op": "SWAP6"
    },
    "9888": {
      "jump": "o",
      "op": "JUMP"
    },
    "9889": {
      "op": "JUMPDEST"
    },
    "9890": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9892": {
      "op": "DUP1"
    },
    "9893": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9895": {
      "op": "DUP4"
    },
    "9896": {
      "op": "DUP6"
    },
    "9897": {
      "op": "SUB"
    },
    "9898": {
      "op": "SLT"
    },
    "9899": {
      "op": "ISZERO"
    },
    "9900": {
      "op": "PUSH2",
      "value": "0x26B4"
    },
    "9903": {
      "op": "JUMPI"
    },
    "9904": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9906": {
      "op": "DUP1"
    },
    "9907": {
      "op": "REVERT"
    },
    "9908": {
      "op": "JUMPDEST"
    },
    "9909": {
      "op": "PUSH2",
      "value": "0x25B3"
    },
    "9912": {
      "op": "DUP4"
    },
    "9913": {
      "op": "PUSH2",
      "value": "0x2512"
    },
    "9916": {
      "jump": "i",
      "op": "JUMP"
    },
    "9917": {
      "op": "JUMPDEST"
    },
    "9918": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9923": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9925": {
      "op": "SHL"
    },
    "9926": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9928": {
      "op": "MSTORE"
    },
    "9929": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "9931": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9933": {
      "op": "MSTORE"
    },
    "9934": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9936": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9938": {
      "op": "REVERT"
    },
    "9939": {
      "op": "JUMPDEST"
    },
    "9940": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9942": {
      "op": "DUP2"
    },
    "9943": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9945": {
      "op": "NOT"
    },
    "9946": {
      "op": "DIV"
    },
    "9947": {
      "op": "DUP4"
    },
    "9948": {
      "op": "GT"
    },
    "9949": {
      "op": "DUP3"
    },
    "9950": {
      "op": "ISZERO"
    },
    "9951": {
      "op": "ISZERO"
    },
    "9952": {
      "op": "AND"
    },
    "9953": {
      "op": "ISZERO"
    },
    "9954": {
      "op": "PUSH2",
      "value": "0x26ED"
    },
    "9957": {
      "op": "JUMPI"
    },
    "9958": {
      "op": "PUSH2",
      "value": "0x26ED"
    },
    "9961": {
      "op": "PUSH2",
      "value": "0x26BD"
    },
    "9964": {
      "jump": "i",
      "op": "JUMP"
    },
    "9965": {
      "op": "JUMPDEST"
    },
    "9966": {
      "op": "POP"
    },
    "9967": {
      "op": "MUL"
    },
    "9968": {
      "op": "SWAP1"
    },
    "9969": {
      "jump": "o",
      "op": "JUMP"
    },
    "9970": {
      "op": "JUMPDEST"
    },
    "9971": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9973": {
      "op": "DUP3"
    },
    "9974": {
      "op": "PUSH2",
      "value": "0x270F"
    },
    "9977": {
      "op": "JUMPI"
    },
    "9978": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9983": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9985": {
      "op": "SHL"
    },
    "9986": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9988": {
      "op": "MSTORE"
    },
    "9989": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "9991": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9993": {
      "op": "MSTORE"
    },
    "9994": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9996": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9998": {
      "op": "REVERT"
    },
    "9999": {
      "op": "JUMPDEST"
    },
    "10000": {
      "op": "POP"
    },
    "10001": {
      "op": "DIV"
    },
    "10002": {
      "op": "SWAP1"
    },
    "10003": {
      "jump": "o",
      "op": "JUMP"
    },
    "10004": {
      "op": "JUMPDEST"
    },
    "10005": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10007": {
      "op": "DUP3"
    },
    "10008": {
      "op": "NOT"
    },
    "10009": {
      "op": "DUP3"
    },
    "10010": {
      "op": "GT"
    },
    "10011": {
      "op": "ISZERO"
    },
    "10012": {
      "op": "PUSH2",
      "value": "0x2727"
    },
    "10015": {
      "op": "JUMPI"
    },
    "10016": {
      "op": "PUSH2",
      "value": "0x2727"
    },
    "10019": {
      "op": "PUSH2",
      "value": "0x26BD"
    },
    "10022": {
      "jump": "i",
      "op": "JUMP"
    },
    "10023": {
      "op": "JUMPDEST"
    },
    "10024": {
      "op": "POP"
    },
    "10025": {
      "op": "ADD"
    },
    "10026": {
      "op": "SWAP1"
    },
    "10027": {
      "jump": "o",
      "op": "JUMP"
    },
    "10028": {
      "op": "JUMPDEST"
    },
    "10029": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10031": {
      "op": "DUP1"
    },
    "10032": {
      "op": "DUP3"
    },
    "10033": {
      "op": "MSTORE"
    },
    "10034": {
      "op": "DUP2"
    },
    "10035": {
      "op": "DUP2"
    },
    "10036": {
      "op": "ADD"
    },
    "10037": {
      "op": "MSTORE"
    },
    "10038": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "10071": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10073": {
      "op": "DUP3"
    },
    "10074": {
      "op": "ADD"
    },
    "10075": {
      "op": "MSTORE"
    },
    "10076": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10078": {
      "op": "ADD"
    },
    "10079": {
      "op": "SWAP1"
    },
    "10080": {
      "jump": "o",
      "op": "JUMP"
    },
    "10081": {
      "op": "JUMPDEST"
    },
    "10082": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10084": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10086": {
      "op": "DUP3"
    },
    "10087": {
      "op": "DUP5"
    },
    "10088": {
      "op": "SUB"
    },
    "10089": {
      "op": "SLT"
    },
    "10090": {
      "op": "ISZERO"
    },
    "10091": {
      "op": "PUSH2",
      "value": "0x2773"
    },
    "10094": {
      "op": "JUMPI"
    },
    "10095": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10097": {
      "op": "DUP1"
    },
    "10098": {
      "op": "REVERT"
    },
    "10099": {
      "op": "JUMPDEST"
    },
    "10100": {
      "op": "POP"
    },
    "10101": {
      "op": "MLOAD"
    },
    "10102": {
      "op": "SWAP2"
    },
    "10103": {
      "op": "SWAP1"
    },
    "10104": {
      "op": "POP"
    },
    "10105": {
      "jump": "o",
      "op": "JUMP"
    },
    "10106": {
      "op": "JUMPDEST"
    },
    "10107": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10109": {
      "op": "DUP1"
    },
    "10110": {
      "op": "DUP3"
    },
    "10111": {
      "op": "MSTORE"
    },
    "10112": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "10114": {
      "op": "SWAP1"
    },
    "10115": {
      "op": "DUP3"
    },
    "10116": {
      "op": "ADD"
    },
    "10117": {
      "op": "MSTORE"
    },
    "10118": {
      "op": "PUSH11",
      "value": "0x8585D5D1A1BDC9A5E9959"
    },
    "10130": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "10132": {
      "op": "SHL"
    },
    "10133": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10135": {
      "op": "DUP3"
    },
    "10136": {
      "op": "ADD"
    },
    "10137": {
      "op": "MSTORE"
    },
    "10138": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10140": {
      "op": "ADD"
    },
    "10141": {
      "op": "SWAP1"
    },
    "10142": {
      "jump": "o",
      "op": "JUMP"
    },
    "10143": {
      "op": "JUMPDEST"
    },
    "10144": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10146": {
      "op": "DUP1"
    },
    "10147": {
      "op": "DUP3"
    },
    "10148": {
      "op": "MSTORE"
    },
    "10149": {
      "op": "DUP3"
    },
    "10150": {
      "op": "SLOAD"
    },
    "10151": {
      "op": "DUP3"
    },
    "10152": {
      "op": "DUP3"
    },
    "10153": {
      "op": "ADD"
    },
    "10154": {
      "op": "DUP2"
    },
    "10155": {
      "op": "SWAP1"
    },
    "10156": {
      "op": "MSTORE"
    },
    "10157": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10159": {
      "op": "DUP5"
    },
    "10160": {
      "op": "DUP2"
    },
    "10161": {
      "op": "MSTORE"
    },
    "10162": {
      "op": "DUP3"
    },
    "10163": {
      "op": "DUP2"
    },
    "10164": {
      "op": "KECCAK256"
    },
    "10165": {
      "op": "SWAP1"
    },
    "10166": {
      "op": "SWAP3"
    },
    "10167": {
      "op": "SWAP2"
    },
    "10168": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10170": {
      "op": "DUP6"
    },
    "10171": {
      "op": "ADD"
    },
    "10172": {
      "op": "SWAP1"
    },
    "10173": {
      "op": "DUP5"
    },
    "10174": {
      "op": "JUMPDEST"
    },
    "10175": {
      "op": "DUP2"
    },
    "10176": {
      "op": "DUP2"
    },
    "10177": {
      "op": "LT"
    },
    "10178": {
      "op": "ISZERO"
    },
    "10179": {
      "op": "PUSH2",
      "value": "0x27E3"
    },
    "10182": {
      "op": "JUMPI"
    },
    "10183": {
      "op": "DUP4"
    },
    "10184": {
      "op": "SLOAD"
    },
    "10185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10189": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10191": {
      "op": "SHL"
    },
    "10192": {
      "op": "SUB"
    },
    "10193": {
      "op": "AND"
    },
    "10194": {
      "op": "DUP4"
    },
    "10195": {
      "op": "MSTORE"
    },
    "10196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10198": {
      "op": "SWAP4"
    },
    "10199": {
      "op": "DUP5"
    },
    "10200": {
      "op": "ADD"
    },
    "10201": {
      "op": "SWAP4"
    },
    "10202": {
      "op": "SWAP3"
    },
    "10203": {
      "op": "DUP6"
    },
    "10204": {
      "op": "ADD"
    },
    "10205": {
      "op": "SWAP3"
    },
    "10206": {
      "op": "ADD"
    },
    "10207": {
      "op": "PUSH2",
      "value": "0x27BE"
    },
    "10210": {
      "op": "JUMP"
    },
    "10211": {
      "op": "JUMPDEST"
    },
    "10212": {
      "op": "POP"
    },
    "10213": {
      "op": "SWAP1"
    },
    "10214": {
      "op": "SWAP7"
    },
    "10215": {
      "op": "SWAP6"
    },
    "10216": {
      "op": "POP"
    },
    "10217": {
      "op": "POP"
    },
    "10218": {
      "op": "POP"
    },
    "10219": {
      "op": "POP"
    },
    "10220": {
      "op": "POP"
    },
    "10221": {
      "op": "POP"
    },
    "10222": {
      "jump": "o",
      "op": "JUMP"
    },
    "10223": {
      "op": "JUMPDEST"
    },
    "10224": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10226": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10228": {
      "op": "DUP3"
    },
    "10229": {
      "op": "DUP5"
    },
    "10230": {
      "op": "SUB"
    },
    "10231": {
      "op": "SLT"
    },
    "10232": {
      "op": "ISZERO"
    },
    "10233": {
      "op": "PUSH2",
      "value": "0x2801"
    },
    "10236": {
      "op": "JUMPI"
    },
    "10237": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10239": {
      "op": "DUP1"
    },
    "10240": {
      "op": "REVERT"
    },
    "10241": {
      "op": "JUMPDEST"
    },
    "10242": {
      "op": "DUP2"
    },
    "10243": {
      "op": "MLOAD"
    },
    "10244": {
      "op": "PUSH2",
      "value": "0x6C9"
    },
    "10247": {
      "op": "DUP2"
    },
    "10248": {
      "op": "PUSH2",
      "value": "0x2587"
    },
    "10251": {
      "jump": "i",
      "op": "JUMP"
    },
    "10252": {
      "op": "JUMPDEST"
    },
    "10253": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10255": {
      "op": "DUP3"
    },
    "10256": {
      "op": "DUP3"
    },
    "10257": {
      "op": "LT"
    },
    "10258": {
      "op": "ISZERO"
    },
    "10259": {
      "op": "PUSH2",
      "value": "0x281E"
    },
    "10262": {
      "op": "JUMPI"
    },
    "10263": {
      "op": "PUSH2",
      "value": "0x281E"
    },
    "10266": {
      "op": "PUSH2",
      "value": "0x26BD"
    },
    "10269": {
      "jump": "i",
      "op": "JUMP"
    },
    "10270": {
      "op": "JUMPDEST"
    },
    "10271": {
      "op": "POP"
    },
    "10272": {
      "op": "SUB"
    },
    "10273": {
      "op": "SWAP1"
    },
    "10274": {
      "jump": "o",
      "op": "JUMP"
    },
    "10275": {
      "op": "JUMPDEST"
    },
    "10276": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10281": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10283": {
      "op": "SHL"
    },
    "10284": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10286": {
      "op": "MSTORE"
    },
    "10287": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "10289": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10291": {
      "op": "MSTORE"
    },
    "10292": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10294": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10296": {
      "op": "REVERT"
    },
    "10297": {
      "op": "JUMPDEST"
    },
    "10298": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10300": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10302": {
      "op": "NOT"
    },
    "10303": {
      "op": "DUP3"
    },
    "10304": {
      "op": "EQ"
    },
    "10305": {
      "op": "ISZERO"
    },
    "10306": {
      "op": "PUSH2",
      "value": "0x284D"
    },
    "10309": {
      "op": "JUMPI"
    },
    "10310": {
      "op": "PUSH2",
      "value": "0x284D"
    },
    "10313": {
      "op": "PUSH2",
      "value": "0x26BD"
    },
    "10316": {
      "jump": "i",
      "op": "JUMP"
    },
    "10317": {
      "op": "JUMPDEST"
    },
    "10318": {
      "op": "POP"
    },
    "10319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10321": {
      "op": "ADD"
    },
    "10322": {
      "op": "SWAP1"
    },
    "10323": {
      "jump": "o",
      "op": "JUMP"
    },
    "10324": {
      "op": "JUMPDEST"
    },
    "10325": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10330": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10332": {
      "op": "SHL"
    },
    "10333": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10335": {
      "op": "MSTORE"
    },
    "10336": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "10338": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10340": {
      "op": "MSTORE"
    },
    "10341": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10343": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10345": {
      "op": "REVERT"
    },
    "10346": {
      "op": "JUMPDEST"
    },
    "10347": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10349": {
      "op": "JUMPDEST"
    },
    "10350": {
      "op": "DUP4"
    },
    "10351": {
      "op": "DUP2"
    },
    "10352": {
      "op": "LT"
    },
    "10353": {
      "op": "ISZERO"
    },
    "10354": {
      "op": "PUSH2",
      "value": "0x2885"
    },
    "10357": {
      "op": "JUMPI"
    },
    "10358": {
      "op": "DUP2"
    },
    "10359": {
      "op": "DUP2"
    },
    "10360": {
      "op": "ADD"
    },
    "10361": {
      "op": "MLOAD"
    },
    "10362": {
      "op": "DUP4"
    },
    "10363": {
      "op": "DUP3"
    },
    "10364": {
      "op": "ADD"
    },
    "10365": {
      "op": "MSTORE"
    },
    "10366": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10368": {
      "op": "ADD"
    },
    "10369": {
      "op": "PUSH2",
      "value": "0x286D"
    },
    "10372": {
      "op": "JUMP"
    },
    "10373": {
      "op": "JUMPDEST"
    },
    "10374": {
      "op": "DUP4"
    },
    "10375": {
      "op": "DUP2"
    },
    "10376": {
      "op": "GT"
    },
    "10377": {
      "op": "ISZERO"
    },
    "10378": {
      "op": "PUSH2",
      "value": "0x2023"
    },
    "10381": {
      "op": "JUMPI"
    },
    "10382": {
      "op": "POP"
    },
    "10383": {
      "op": "POP"
    },
    "10384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10386": {
      "op": "SWAP2"
    },
    "10387": {
      "op": "ADD"
    },
    "10388": {
      "op": "MSTORE"
    },
    "10389": {
      "jump": "o",
      "op": "JUMP"
    },
    "10390": {
      "op": "JUMPDEST"
    },
    "10391": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10393": {
      "op": "DUP3"
    },
    "10394": {
      "op": "MLOAD"
    },
    "10395": {
      "op": "PUSH2",
      "value": "0x28A8"
    },
    "10398": {
      "op": "DUP2"
    },
    "10399": {
      "op": "DUP5"
    },
    "10400": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10402": {
      "op": "DUP8"
    },
    "10403": {
      "op": "ADD"
    },
    "10404": {
      "op": "PUSH2",
      "value": "0x286A"
    },
    "10407": {
      "jump": "i",
      "op": "JUMP"
    },
    "10408": {
      "op": "JUMPDEST"
    },
    "10409": {
      "op": "SWAP2"
    },
    "10410": {
      "op": "SWAP1"
    },
    "10411": {
      "op": "SWAP2"
    },
    "10412": {
      "op": "ADD"
    },
    "10413": {
      "op": "SWAP3"
    },
    "10414": {
      "op": "SWAP2"
    },
    "10415": {
      "op": "POP"
    },
    "10416": {
      "op": "POP"
    },
    "10417": {
      "jump": "o",
      "op": "JUMP"
    },
    "10418": {
      "op": "JUMPDEST"
    },
    "10419": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10421": {
      "op": "DUP2"
    },
    "10422": {
      "op": "MSTORE"
    },
    "10423": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10425": {
      "op": "DUP3"
    },
    "10426": {
      "op": "MLOAD"
    },
    "10427": {
      "op": "DUP1"
    },
    "10428": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10430": {
      "op": "DUP5"
    },
    "10431": {
      "op": "ADD"
    },
    "10432": {
      "op": "MSTORE"
    },
    "10433": {
      "op": "PUSH2",
      "value": "0x28D1"
    },
    "10436": {
      "op": "DUP2"
    },
    "10437": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10439": {
      "op": "DUP6"
    },
    "10440": {
      "op": "ADD"
    },
    "10441": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10443": {
      "op": "DUP8"
    },
    "10444": {
      "op": "ADD"
    },
    "10445": {
      "op": "PUSH2",
      "value": "0x286A"
    },
    "10448": {
      "jump": "i",
      "op": "JUMP"
    },
    "10449": {
      "op": "JUMPDEST"
    },
    "10450": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10452": {
      "op": "ADD"
    },
    "10453": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10455": {
      "op": "NOT"
    },
    "10456": {
      "op": "AND"
    },
    "10457": {
      "op": "SWAP2"
    },
    "10458": {
      "op": "SWAP1"
    },
    "10459": {
      "op": "SWAP2"
    },
    "10460": {
      "op": "ADD"
    },
    "10461": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10463": {
      "op": "ADD"
    },
    "10464": {
      "op": "SWAP3"
    },
    "10465": {
      "op": "SWAP2"
    },
    "10466": {
      "op": "POP"
    },
    "10467": {
      "op": "POP"
    },
    "10468": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "3d1ae90285d5d4c5be942781bbdfafd8e08d8f9d",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.12;\n\nimport \"./interfaces/IExtraReward.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\nimport \"./interfaces/IGauge.sol\";\nimport \"./interfaces/IVeYfiRewardPool.sol\";\nimport \"./BaseGauge.sol\";\n\nimport \"./interfaces/IVotingEscrow.sol\";\n\n/** @title  Gauge stake vault token get YFI rewards\n    @notice Deposit your vault token (one gauge per vault).\n    YFI are paid based on the amount of vault tokens, the veYFI balance and the duration of the lock.\n    @dev this contract is used behind multiple delegate proxies.\n */\n\ncontract Gauge is BaseGauge, IGauge {\n    using SafeERC20 for IERC20;\n\n    IERC20 public stakingToken;\n    //// @notice veYFI\n    address public veToken;\n    //// @notice the veYFI YFI reward pool, penalty are sent to this contract.\n    address public veYfiRewardPool;\n    //// @notice a copy of the veYFI max lock duration\n    uint256 public constant MAX_LOCK = 4 * 365 * 86400;\n    uint256 public constant PRECISON_FACTOR = 10**6;\n    //// @notice Penalty do not apply for locks expiring after 3y11m\n    uint256 public constant GRACE_PERIOD = 30 days;\n\n    //// @notice rewardManager is in charge of adding/removing additional rewards\n    address public rewardManager;\n\n    /**\n    @notice penalty queued to be transfer later to veYfiRewardPool using `transferQueuedPenalty`\n    @dev rewards are queued when an account `_updateReward`.\n    */\n    uint256 public queuedPenalty;\n    uint256 private _totalSupply;\n    mapping(address => uint256) private _balances;\n\n    //// @notice list of extraRewards pool.\n    address[] public extraRewards;\n\n    event Staked(address indexed user, uint256 amount);\n    event Withdrawn(address indexed user, uint256 amount);\n    event AddedExtraReward(address reward);\n    event DeletedExtraRewards(address[] rewards);\n    event RemovedExtraReward(address reward);\n    event UpdatedRewardManager(address rewardManager);\n    event UpdatedVeToken(address ve);\n    event Initialized(\n        address stakingToken,\n        address rewardToken,\n        address owner,\n        address rewardManager,\n        address ve,\n        address veYfiRewardPool\n    );\n\n    /** @notice initialize the contract\n     *  @dev Initialize called after contract is cloned.\n     *  @param _stakingToken The vault token to stake\n     *  @param _rewardToken the reward token YFI\n     *  @param _owner owner address\n     *  @param _rewardManager reward manager address\n     *  @param _ve veYFI address\n     *  @param _veYfiRewardPool veYfiRewardPool address\n     */\n    function initialize(\n        address _stakingToken,\n        address _rewardToken,\n        address _owner,\n        address _rewardManager,\n        address _ve,\n        address _veYfiRewardPool\n    ) external initializer {\n        require(\n            address(_stakingToken) != address(0x0),\n            \"_stakingToken 0x0 address\"\n        );\n        require(address(_ve) != address(0x0), \"_ve 0x0 address\");\n        require(\n            address(_veYfiRewardPool) != address(0x0),\n            \"_veYfiRewardPool 0x0 address\"\n        );\n\n        __initialize(_rewardToken, _owner);\n        stakingToken = IERC20(_stakingToken);\n        veToken = _ve;\n        rewardManager = _rewardManager;\n        veYfiRewardPool = _veYfiRewardPool;\n\n        emit Initialized(\n            _stakingToken,\n            _rewardToken,\n            _owner,\n            _rewardManager,\n            _ve,\n            _veYfiRewardPool\n        );\n    }\n\n    function setVe(address _ve) external onlyOwner {\n        veToken = _ve;\n        emit UpdatedVeToken(_ve);\n    }\n\n    /** @return total of the staked vault token\n     */\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    /** @param account to look balance for\n     *  @return amount of staked token for an account\n     */\n    function balanceOf(address account)\n        external\n        view\n        override\n        returns (uint256)\n    {\n        return _balances[account];\n    }\n\n    /** @return the number of extra rewards pool\n     */\n    function extraRewardsLength() external view returns (uint256) {\n        return extraRewards.length;\n    }\n\n    /** @notice add extra rewards to the gauge\n     *  @dev can only be done by rewardManager\n     *  @param _extraReward the ExtraReward contract address\n     *  @return true\n     */\n    function addExtraReward(address _extraReward) external returns (bool) {\n        require(msg.sender == rewardManager, \"!authorized\");\n        require(_extraReward != address(0), \"!reward setting\");\n        emit AddedExtraReward(_extraReward);\n        extraRewards.push(_extraReward);\n        return true;\n    }\n\n    /** @notice remove extra rewards from the gauge\n     *  @dev can only be done by rewardManager\n     *  @param _extraReward the ExtraReward contract address\n     */\n    function removeExtraReward(address _extraReward) external returns (bool) {\n        require(msg.sender == rewardManager, \"!authorized\");\n        uint256 index = type(uint256).max;\n        uint256 length = extraRewards.length;\n        for (uint256 i = 0; i < length; i++) {\n            if (extraRewards[i] == _extraReward) {\n                index = i;\n                break;\n            }\n        }\n        require(index != type(uint256).max, \"extra reward not found\");\n        emit RemovedExtraReward(_extraReward);\n        extraRewards[index] = extraRewards[extraRewards.length - 1];\n        extraRewards.pop();\n        return true;\n    }\n\n    /** @notice remove extra rewards\n     *  @dev can only be done by rewardManager\n     */\n    function clearExtraRewards() external {\n        require(msg.sender == rewardManager, \"!authorized\");\n        emit DeletedExtraRewards(extraRewards);\n        delete extraRewards;\n    }\n\n    function _updateReward(address account) internal override {\n        rewardPerTokenStored = _rewardPerToken();\n        lastUpdateTime = lastTimeRewardApplicable();\n        if (account != address(0)) {\n            if (_balances[account] != 0) {\n                uint256 newEarning = _newEarning(account);\n                uint256 maxEarning = _maxEarning(account);\n\n                uint256 penalty = ((PRECISON_FACTOR - _lockingRatio(account)) *\n                    newEarning) / PRECISON_FACTOR;\n\n                rewards[account] += (newEarning - penalty);\n                queuedPenalty += penalty;\n\n                // If rewards aren't boosted at max, loss rewards are queued to be redistributed to the gauge.\n                queuedRewards += (maxEarning - newEarning);\n            }\n            userRewardPerTokenPaid[account] = rewardPerTokenStored;\n            emit UpdatedRewards(\n                account,\n                rewardPerTokenStored,\n                lastUpdateTime,\n                rewards[account],\n                userRewardPerTokenPaid[account]\n            );\n        }\n    }\n\n    /** @notice give the lockingRatio\n     * @dev locking ratio is expressed in PRECISON_FACTOR, it's used to calculate the penalty due to the lock duration.\n     * @return lockingRatio\n     */\n    function lockingRatio(address account) external view returns (uint256) {\n        return _lockingRatio(account);\n    }\n\n    function _lockingRatio(address acccount) internal view returns (uint256) {\n        if (IVotingEscrow(veToken).migration()) {\n            return PRECISON_FACTOR;\n        }\n\n        uint256 lockedUntil = IVotingEscrow(veToken).locked__end(acccount);\n        if (lockedUntil == 0 || lockedUntil <= block.timestamp) {\n            return 0;\n        }\n\n        uint256 timeLeft = lockedUntil - block.timestamp;\n        if (MAX_LOCK - timeLeft < GRACE_PERIOD) {\n            return PRECISON_FACTOR;\n        }\n\n        return (PRECISON_FACTOR * timeLeft) / MAX_LOCK;\n    }\n\n    function _rewardPerToken() internal view override returns (uint256) {\n        if (totalSupply() == 0) {\n            return rewardPerTokenStored;\n        }\n        return\n            rewardPerTokenStored +\n            (((lastTimeRewardApplicable() - lastUpdateTime) *\n                rewardRate *\n                1e18) / totalSupply());\n    }\n\n    /** @notice earning for an account\n     *  @dev earning are based on lock duration and boost\n     *  @return amount of tokens earned\n     */\n    function earned(address account)\n        external\n        view\n        override(BaseGauge, IBaseGauge)\n        returns (uint256)\n    {\n        uint256 newEarning = _newEarning(account);\n\n        return\n            (_lockingRatio(account) * newEarning) /\n            PRECISON_FACTOR +\n            rewards[account];\n    }\n\n    function _newEarning(address account)\n        internal\n        view\n        override\n        returns (uint256)\n    {\n        return\n            (_boostedBalanceOf(account) *\n                (_rewardPerToken() - userRewardPerTokenPaid[account])) / 1e18;\n    }\n\n    function _maxEarning(address account) internal view returns (uint256) {\n        return\n            (_balances[account] *\n                (_rewardPerToken() - userRewardPerTokenPaid[account])) / 1e18;\n    }\n\n    /** @notice boosted balance of based on veYFI balance\n     *  @dev min(balance * 0.4 + totalSupply * veYFIBalance / veYFITotalSypply * 0.6, balance)\n     *  @return boosted balance\n     */\n    function boostedBalanceOf(address account) public view returns (uint256) {\n        return _boostedBalanceOf(account);\n    }\n\n    function _boostedBalanceOf(address account)\n        internal\n        view\n        returns (uint256)\n    {\n        uint256 veTotalSupply = IVotingEscrow(veToken).totalSupply();\n        if (veTotalSupply == 0) {\n            return _balances[account];\n        }\n\n        return\n            Math.min(\n                ((_balances[account] * 40) +\n                    (((_totalSupply *\n                        IVotingEscrow(veToken).balanceOf(account)) /\n                        veTotalSupply) * 60)) / 100,\n                _balances[account]\n            );\n    }\n\n    /** @notice deposit vault tokens into the gauge\n     * @dev a user without a veYFI should not lock.\n     * @dev This call update claimable rewards\n     * @param _amount of vault token\n     * @return true\n     */\n    function deposit(uint256 _amount) public returns (bool) {\n        _deposit(msg.sender, _amount);\n        return true;\n    }\n\n    /** @notice deposit vault tokens into the gauge\n     *   @dev a user without a veYFI should not lock.\n     *   @dev will deposit the min betwwen user balance and user approval\n     *   @dev This call update claimable rewards\n     *   @return true\n     */\n    function deposit() external returns (bool) {\n        uint256 balance = Math.min(\n            stakingToken.balanceOf(msg.sender),\n            stakingToken.allowance(msg.sender, address(this))\n        );\n        _deposit(msg.sender, balance);\n        return true;\n    }\n\n    /** @notice deposit vault tokens into the gauge for a user\n     *   @dev vault token is taken from msg.sender\n     *   @dev This call update  `_for` claimable rewards\n     *   @param _for account to deposit to\n     *    @param _amount to deposit\n     *    @return true\n     */\n    function depositFor(address _for, uint256 _amount) external returns (bool) {\n        _deposit(_for, _amount);\n        return true;\n    }\n\n    function _deposit(address _for, uint256 _amount)\n        internal\n        updateReward(_for)\n    {\n        require(_amount > 0, \"RewardPool : Cannot deposit 0\");\n\n        //also deposit to linked rewards\n        uint256 length = extraRewards.length;\n        for (uint256 i = 0; i < length; i++) {\n            IExtraReward(extraRewards[i]).rewardCheckpoint(_for);\n        }\n\n        //give to _for\n        _totalSupply = _totalSupply + _amount;\n        _balances[_for] = _balances[_for] + _amount;\n\n        //take away from sender\n        stakingToken.safeTransferFrom(msg.sender, address(this), _amount);\n        emit Staked(_for, _amount);\n    }\n\n    /** @notice withdraw vault token from the gauge\n     * @dev This call update claimable rewards\n     *  @param _amount amount to withdraw\n     *   @param _claim claimm veYFI and aditional reward\n     *   @param _lock should the claimed rewards be locked in veYFI for the user\n     *   @return true\n     */\n    function withdraw(\n        uint256 _amount,\n        bool _claim,\n        bool _lock\n    ) public updateReward(msg.sender) returns (bool) {\n        require(_amount > 0, \"RewardPool : Cannot withdraw 0\");\n\n        //also withdraw from linked rewards\n        uint256 length = extraRewards.length;\n        for (uint256 i = 0; i < length; i++) {\n            IExtraReward(extraRewards[i]).rewardCheckpoint(msg.sender);\n        }\n\n        _totalSupply = _totalSupply - _amount;\n        _balances[msg.sender] = _balances[msg.sender] - _amount;\n\n        if (_claim) {\n            _getReward(msg.sender, _lock, true);\n        }\n\n        stakingToken.safeTransfer(msg.sender, _amount);\n        emit Withdrawn(msg.sender, _amount);\n\n        return true;\n    }\n\n    /** @notice withdraw all vault token from gauge\n     *   @dev This call update claimable rewards\n     *   @param _claim claim veYFI and additional reward\n     *   @param _lock should the claimed rewards be locked in veYFI for the user\n     *   @return true\n     */\n    function withdraw(bool _claim, bool _lock) external returns (bool) {\n        withdraw(_balances[msg.sender], _claim, _lock);\n        return true;\n    }\n\n    /** @notice withdraw all vault token from gauge\n     *  @dev This call update claimable rewards\n     *  @param _claim claim veYFI and additional reward\n     *  @return true\n     */\n    function withdraw(bool _claim) external returns (bool) {\n        withdraw(_balances[msg.sender], _claim, false);\n        return true;\n    }\n\n    /** @notice withdraw all vault token from gauge\n        @dev This call update claimable rewards\n        @return true\n    */\n    function withdraw() external returns (bool) {\n        withdraw(_balances[msg.sender], false, false);\n        return true;\n    }\n\n    /**\n     * @notice\n     *  Get rewards\n     * @param _lock should the yfi be locked in veYFI\n     * @param _claimExtras claim extra rewards\n     * @return true\n     */\n    function getReward(bool _lock, bool _claimExtras)\n        external\n        updateReward(msg.sender)\n        returns (bool)\n    {\n        _getReward(msg.sender, _lock, _claimExtras);\n        return true;\n    }\n\n    /**\n     * @notice\n     *  Get rewards and claim extra rewards\n     *  @param _lock should the yfi be locked in veYFI\n     *  @return true\n     */\n    function getReward(bool _lock)\n        external\n        updateReward(msg.sender)\n        returns (bool)\n    {\n        _getReward(msg.sender, _lock, true);\n        return true;\n    }\n\n    /**\n     * @notice\n     *  Get rewards and claim extra rewards, do not lock YFI earned\n     *  @return true\n     */\n    function getReward() external updateReward(msg.sender) returns (bool) {\n        _getReward(msg.sender, false, true);\n        return true;\n    }\n\n    /**\n     * @notice\n     *  Get rewards for an account\n     * @dev rewards are transfer to _account\n     * @param _account to claim rewards for\n     * @param _claimExtras claim extra rewards\n     * @return true\n     */\n    function getRewardFor(address _account, bool _claimExtras)\n        external\n        updateReward(_account)\n        returns (bool)\n    {\n        _getReward(_account, false, _claimExtras);\n        return true;\n    }\n\n    function _getReward(\n        address _account,\n        bool _lock,\n        bool _claimExtras\n    ) internal {\n        uint256 reward = rewards[_account];\n        if (reward > 0) {\n            rewards[_account] = 0;\n            if (_lock) {\n                rewardToken.approve(address(veToken), reward);\n                IVotingEscrow(veToken).deposit_for(msg.sender, reward);\n            } else {\n                rewardToken.safeTransfer(_account, reward);\n            }\n\n            emit RewardPaid(_account, reward);\n        }\n        //also get rewards from linked rewards\n        if (_claimExtras) {\n            uint256 length = extraRewards.length;\n            for (uint256 i = 0; i < length; i++) {\n                IExtraReward(extraRewards[i]).getRewardFor(msg.sender);\n            }\n        }\n    }\n\n    /**\n     * @notice\n     * Transfer penalty to the veYFIRewardContract\n     * @dev Penalty are queued in this contract.\n     * @return true\n     */\n    function transferQueuedPenalty() external returns (bool) {\n        uint256 toTransfer = queuedPenalty;\n        queuedPenalty = 0;\n\n        IERC20(rewardToken).approve(veYfiRewardPool, toTransfer);\n        IVeYfiRewardPool(veYfiRewardPool).queueNewRewards(toTransfer);\n        return true;\n    }\n\n    /**\n     * @notice\n     * set reward manager\n     * @dev Can be called by rewardManager or owner\n     * @param _rewardManager new reward manager\n     * @return true\n     */\n    function setRewardManager(address _rewardManager) external returns (bool) {\n        require(\n            msg.sender == rewardManager || msg.sender == owner(),\n            \"!authorized\"\n        );\n\n        require(_rewardManager != address(0), \"_rewardManager 0x0 address\");\n        rewardManager = _rewardManager;\n        emit UpdatedRewardManager(rewardManager);\n        return true;\n    }\n\n    function _notProtectedTokens(address _token)\n        internal\n        view\n        override\n        returns (bool)\n    {\n        return\n            _token != address(rewardToken) && _token != address(stakingToken);\n    }\n}\n",
  "sourceMap": "705:16881:10:-:0;;;;;;;;;;;;-1:-1:-1;921:32:0;719:10:7;921:18:0;:32::i;:::-;705:16881:10;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;705:16881:10:-;;;;;;;",
  "sourcePath": "contracts/Gauge.sol",
  "type": "contract"
}