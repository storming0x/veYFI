{
  "abi": [],
  "allSourcePaths": {
    "1": "/Users/demo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/proxy/utils/Initializable.sol",
    "6": "/Users/demo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol"
  },
  "ast": {
    "absolutePath": "/Users/demo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/proxy/utils/Initializable.sol",
    "exportedSymbols": {
      "Address": [
        15531
      ],
      "Initializable": [
        15605
      ]
    },
    "id": 15606,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15533,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "113:23:1"
      },
      {
        "absolutePath": "/Users/demo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 15534,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15606,
        "sourceUnit": 15532,
        "src": "138:33:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [],
        "canonicalName": "Initializable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 15535,
          "nodeType": "StructuredDocumentation",
          "src": "173:1497:1",
          "text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the\n initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() initializer {}\n ```\n ===="
        },
        "fullyImplemented": true,
        "id": 15605,
        "linearizedBaseContracts": [
          15605
        ],
        "name": "Initializable",
        "nameLocation": "1689:13:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 15536,
              "nodeType": "StructuredDocumentation",
              "src": "1709:73:1",
              "text": " @dev Indicates that the contract has been initialized."
            },
            "id": 15538,
            "mutability": "mutable",
            "name": "_initialized",
            "nameLocation": "1800:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 15605,
            "src": "1787:25:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 15537,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1787:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 15539,
              "nodeType": "StructuredDocumentation",
              "src": "1819:91:1",
              "text": " @dev Indicates that the contract is in the process of being initialized."
            },
            "id": 15541,
            "mutability": "mutable",
            "name": "_initializing",
            "nameLocation": "1928:13:1",
            "nodeType": "VariableDeclaration",
            "scope": 15605,
            "src": "1915:26:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 15540,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1915:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 15578,
              "nodeType": "Block",
              "src": "2069:637:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "condition": {
                          "id": 15545,
                          "name": "_initializing",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15541,
                          "src": "2358:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "id": 15549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2393:13:1",
                          "subExpression": {
                            "id": 15548,
                            "name": "_initialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15538,
                            "src": "2394:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 15550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "2358:48:1",
                        "trueExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 15546,
                            "name": "_isConstructor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15604,
                            "src": "2374:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 15547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2374:16:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
                        "id": 15551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2408:48:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
                          "typeString": "literal_string \"Initializable: contract is already initialized\""
                        },
                        "value": "Initializable: contract is already initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
                          "typeString": "literal_string \"Initializable: contract is already initialized\""
                        }
                      ],
                      "id": 15544,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2350:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2350:107:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15553,
                  "nodeType": "ExpressionStatement",
                  "src": "2350:107:1"
                },
                {
                  "assignments": [
                    15555
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15555,
                      "mutability": "mutable",
                      "name": "isTopLevelCall",
                      "nameLocation": "2473:14:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 15578,
                      "src": "2468:19:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 15554,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2468:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15558,
                  "initialValue": {
                    "id": 15557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2490:14:1",
                    "subExpression": {
                      "id": 15556,
                      "name": "_initializing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15541,
                      "src": "2491:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2468:36:1"
                },
                {
                  "condition": {
                    "id": 15559,
                    "name": "isTopLevelCall",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15555,
                    "src": "2518:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15569,
                  "nodeType": "IfStatement",
                  "src": "2514:98:1",
                  "trueBody": {
                    "id": 15568,
                    "nodeType": "Block",
                    "src": "2534:78:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 15562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 15560,
                            "name": "_initializing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15541,
                            "src": "2548:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 15561,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2564:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2548:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 15563,
                        "nodeType": "ExpressionStatement",
                        "src": "2548:20:1"
                      },
                      {
                        "expression": {
                          "id": 15566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 15564,
                            "name": "_initialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15538,
                            "src": "2582:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 15565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2597:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2582:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 15567,
                        "nodeType": "ExpressionStatement",
                        "src": "2582:19:1"
                      }
                    ]
                  }
                },
                {
                  "id": 15570,
                  "nodeType": "PlaceholderStatement",
                  "src": "2622:1:1"
                },
                {
                  "condition": {
                    "id": 15571,
                    "name": "isTopLevelCall",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15555,
                    "src": "2638:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15577,
                  "nodeType": "IfStatement",
                  "src": "2634:66:1",
                  "trueBody": {
                    "id": 15576,
                    "nodeType": "Block",
                    "src": "2654:46:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 15574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 15572,
                            "name": "_initializing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15541,
                            "src": "2668:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 15573,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2684:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2668:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 15575,
                        "nodeType": "ExpressionStatement",
                        "src": "2668:21:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 15542,
              "nodeType": "StructuredDocumentation",
              "src": "1948:93:1",
              "text": " @dev Modifier to protect an initializer function from being invoked twice."
            },
            "id": 15579,
            "name": "initializer",
            "nameLocation": "2055:11:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 15543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2066:2:1"
            },
            "src": "2046:660:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15588,
              "nodeType": "Block",
              "src": "2923:97:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15583,
                        "name": "_initializing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15541,
                        "src": "2941:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
                        "id": 15584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2956:45:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
                          "typeString": "literal_string \"Initializable: contract is not initializing\""
                        },
                        "value": "Initializable: contract is not initializing"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
                          "typeString": "literal_string \"Initializable: contract is not initializing\""
                        }
                      ],
                      "id": 15582,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2933:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2933:69:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15586,
                  "nodeType": "ExpressionStatement",
                  "src": "2933:69:1"
                },
                {
                  "id": 15587,
                  "nodeType": "PlaceholderStatement",
                  "src": "3012:1:1"
                }
              ]
            },
            "documentation": {
              "id": 15580,
              "nodeType": "StructuredDocumentation",
              "src": "2712:178:1",
              "text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} modifier, directly or indirectly."
            },
            "id": 15589,
            "name": "onlyInitializing",
            "nameLocation": "2904:16:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 15581,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2920:2:1"
            },
            "src": "2895:125:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15603,
              "nodeType": "Block",
              "src": "3080:58:1",
              "statements": [
                {
                  "expression": {
                    "id": 15601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3097:34:1",
                    "subExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 15598,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "3125:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Initializable_$15605",
                                "typeString": "contract Initializable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Initializable_$15605",
                                "typeString": "contract Initializable"
                              }
                            ],
                            "id": 15597,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3117:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 15596,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3117:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 15599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3117:13:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 15594,
                          "name": "Address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15531,
                          "src": "3098:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Address_$15531_$",
                            "typeString": "type(library Address)"
                          }
                        },
                        "id": 15595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isContract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15254,
                        "src": "3098:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 15600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3098:33:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 15593,
                  "id": 15602,
                  "nodeType": "Return",
                  "src": "3090:41:1"
                }
              ]
            },
            "id": 15604,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isConstructor",
            "nameLocation": "3035:14:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15590,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3049:2:1"
            },
            "returnParameters": {
              "id": 15593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15592,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15604,
                  "src": "3074:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15591,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3074:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3073:6:1"
            },
            "scope": 15605,
            "src": "3026:112:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 15606,
        "src": "1671:1469:1",
        "usedErrors": []
      }
    ],
    "src": "113:3028:1"
  },
  "bytecode": "",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "Initializable",
  "coverageMap": {
    "branches": {},
    "statements": {}
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Address"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "",
  "language": "Solidity",
  "natspec": {
    "custom:oz-upgrades-unsafe-allow": "constructor constructor() initializer {} ``` ====",
    "details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed: [.hljs-theme-light.nopadding] ```",
    "kind": "dev",
    "methods": {},
    "stateVariables": {
      "_initialized": {
        "details": "Indicates that the contract has been initialized."
      },
      "_initializing": {
        "details": "Indicates that the contract is in the process of being initialized."
      }
    },
    "version": 1
  },
  "offset": [
    1671,
    3140
  ],
  "opcodes": "",
  "pcMap": {},
  "sha1": "97e54589593dfd5f87ed381c2e820dfad3ca10c9",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/Address.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the\n * initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() initializer {}\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     */\n    bool private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Modifier to protect an initializer function from being invoked twice.\n     */\n    modifier initializer() {\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\n        // inheritance patterns, but we only do this in the context of a constructor, because in other contexts the\n        // contract may have been reentered.\n        require(_initializing ? _isConstructor() : !_initialized, \"Initializable: contract is already initialized\");\n\n        bool isTopLevelCall = !_initializing;\n        if (isTopLevelCall) {\n            _initializing = true;\n            _initialized = true;\n        }\n\n        _;\n\n        if (isTopLevelCall) {\n            _initializing = false;\n        }\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} modifier, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    function _isConstructor() private view returns (bool) {\n        return !Address.isContract(address(this));\n    }\n}\n",
  "sourceMap": "",
  "sourcePath": "/Users/demo/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/proxy/utils/Initializable.sol",
  "type": "contract"
}